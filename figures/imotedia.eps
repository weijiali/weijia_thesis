%!PS-Adobe-3.0 EPSF-3.0
%%Title: Imote2_Datasheet.pdf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 7/1/2009 13:6:15
%%BoundingBox: 11 153 600 638
%%Pages: 1

%%PageOrder: (atend)
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (HP LaserJet P3005 Series PS) (3010.107) 0
%%LanguageLevel: 3
%%HiResBoundingBox: 12 153.4074 599.0400 637.6326
%%CropBox: 12 153.4074 599.0400 637.6326
%ADO_BeginApplicationHeaderComments
%%Creator: Adobe Acrobat 8.0
%%For: weijiali
%%LanguageLevel: 3
%ADO_EndApplicationHeaderComments
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments

%%BeginDefaults
%ADO_BeginApplicationDefaultsComments
%%ViewingOrientation: 1 0 0 1
%ADO_EndApplicationDefaultsComments

%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 11.99905 779.0003 ] def 
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 30590 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c320 44.284297, Sun Apr 15 2007 17:19:00">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stMfs="http://ns.adobe.com/xap/1.0/sType/ManifestItem#"
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xapMM:InstanceID="uuid:1d7e829e-511b-46ad-b3e7-57ad8063004f"
   xapMM:DocumentID="adobe:docid:indd:ddab8ce6-dedc-11db-ac84-ecc27707b80b"
   xapMM:RenditionClass="proof:pdf"
   xap:CreateDate="2007-04-16T15:12:29-07:00"
   xap:ModifyDate="2007-04-16T15:12:33-07:00"
   xap:MetadataDate="2007-04-16T15:12:33-07:00"
   xap:CreatorTool="Adobe InDesign CS2 (4.0.1)"
   dc:format="application/pdf"
   photoshop:DateCreated="2006-12-08"
   pdf:Producer="Adobe PDF Library 7.0"
   pdf:Trapped="False">
   <xapMM:DerivedFrom
    stRef:instanceID="d8dfee6a-a801-11db-8db3-fe3e8fabf629"
    stRef:documentID="adobe:docid:indd:2872af61-9764-11db-95a9-af2b382d1442"/>
   <xapMM:Manifest>
    <rdf:Bag>
     <rdf:li>
      <rdf:Description
       stMfs:linkForm="ReferenceStream"
       xapMM:placedXResolution="72.00"
       xapMM:placedYResolution="72.00"
       xapMM:placedResolutionUnit="Inches">
      <stMfs:reference
       stRef:documentID="uuid:389f8915-3235-40be-be9c-8f1422164b73"/>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stMfs:linkForm="ReferenceStream"
       xapMM:placedXResolution="300.00"
       xapMM:placedYResolution="300.00"
       xapMM:placedResolutionUnit="Inches">
      <stMfs:reference
       stRef:documentID="adobe:docid:photoshop:c0fbeef6-a4fe-11db-8c11-cc0f2e5ba86e"/>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stMfs:linkForm="ReferenceStream"
       xapMM:placedXResolution="72.00"
       xapMM:placedYResolution="72.00"
       xapMM:placedResolutionUnit="Inches">
      <stMfs:reference
       stRef:instanceID="uuid:456f0ba5-3aef-4e01-90ac-50646df4ab1e"
       stRef:documentID="uuid:4fceeab2-e2b2-4ac2-b690-4664b53693d1"/>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stMfs:linkForm="ReferenceStream"
       xapMM:placedXResolution="72.00"
       xapMM:placedYResolution="72.00"
       xapMM:placedResolutionUnit="Inches">
      <stMfs:reference
       stRef:instanceID="uuid:456f0ba5-3aef-4e01-90ac-50646df4ab1e"
       stRef:documentID="uuid:4fceeab2-e2b2-4ac2-b690-4664b53693d1"/>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stMfs:linkForm="ReferenceStream"
       xapMM:placedXResolution="300.00"
       xapMM:placedYResolution="300.00"
       xapMM:placedResolutionUnit="Inches">
      <stMfs:reference
       stRef:documentID="adobe:docid:photoshop:37066d56-a654-11db-928f-82bf6d48ffc6"/>
      </rdf:Description>
     </rdf:li>
    </rdf:Bag>
   </xapMM:Manifest>
   <xap:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xapGImg:format="JPEG"
      xapGImg:width="256"
      xapGImg:height="256"
      xapGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4AE0Fkb2JlAGQAAAAAAQUAAu7o/9sAhAAKBwcHBwcKBwcKDgkJCQ4RDAsLDBEU&#xA;EBAQEBAUEQ8RERERDxERFxoaGhcRHyEhISEfKy0tLSsyMjIyMjIyMjIyAQsJCQ4MDh8XFx8rIh0i&#xA;KzIrKysrMjIyMjIyMjIyMjIyMjIyMjI+Pj4+PjJAQEBAQEBAQEBAQEBAQEBAQEBAQED/wAARCAEA&#xA;AMUDAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEBAQAA&#xA;AAAAAAABAAIDBAUGBwgJCgsQAAIBAwMCBAIGBwMEAgYCcwECAxEEAAUhEjFBUQYTYSJxgRQykaEH&#xA;FbFCI8FS0eEzFmLwJHKC8SVDNFOSorJjc8I1RCeTo7M2F1RkdMPS4ggmgwkKGBmElEVGpLRW01Uo&#xA;GvLj88TU5PRldYWVpbXF1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX5/c4SFhoeIiYqLjI2Oj4KTlJ&#xA;WWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+hEAAgIBAgMFBQQFBgQIAwNtAQACEQMEIRIxQQVRE2Ei&#xA;BnGBkTKhsfAUwdHhI0IVUmJy8TMkNEOCFpJTJaJjssIHc9I14kSDF1STCAkKGBkmNkUaJ2R0VTfy&#xA;o7PDKCnT4/OElKS0xNTk9GV1hZWltcXV5fVGVmZ2hpamtsbW5vZHV2d3h5ent8fX5/c4SFhoeIiY&#xA;qLjI2Oj4OUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6/9oADAMBAAIRAxEAPwDs2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqL3VrHMttJNGs0n2ImYB2ryOyk1P2T92GiqtgVYs0&#xA;TSvCrgyRhS6g7qGrxr86Y0raOsgJQ1AJWvup4n8Riq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FUm1LQrm8kvGtrtbdb9I0mDRGRgYuXExsJY+PXpv+OTjMBBCB/wdIt1JPHq&#xA;LpHJOswj4sTwV3lEbEy0anIKp47KKUrQiXi7ckcKEuvJVwLekeqTLJ6Tw80Vld3l9VF5v6pJjBmq&#xA;Q1SaAljvUjML5IMNuavpPkmTTXtTJqctwluUMkZQqsxXk3xfvGp8XD6Fp3wTzCV7JEK6srypk7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUm/xd5c/wCW9Puf/mnDS27/ABd5c/5b0+5/+acaW3f4u8uf8t6fc/8AzTjS27/F3lz/AJb0+5/+&#xA;acaW3f4u8uf8t6fc/wDzTjS27/F3lz/lvT7n/wCacaW3f4u8uf8ALen3P/zTjS27/F3lz/lvT7n/&#xA;AOacaW3f4u8uf8t6fc//ADTjS27/ABd5c/5b0+5/+acaW3f4u8uf8t6fc/8AzTjS27/F3lz/AJb0&#xA;+5/+acaW3f4u8uf8t6fc/wDzTjS27/F3lz/lvT7n/wCacaW3f4u8uf8ALen3P/zTjS27/F3lz/lv&#xA;T7n/AOacaW3f4u8uf8t6fc//ADTjS27/ABd5c/5b0+5/+acaW3f4u8uf8t6fc/8AzTjS27/F3lz/&#xA;AJb0+5/+acaW3f4u8uf8t6fc/wDzTjS27/F3lz/lvT7n/wCacaW3f4u8uf8ALen3P/zTjS27/F3l&#xA;z/lvT7n/AOacaW2/8W+XOJb6/HQEDo1d69uNe2NLbyDJMXYq7FWvi9sG67O+L2x3XZ3xe2O67O+L&#xA;2x3XZ3xe2O67L4igkUzAtHX4gpoSPYkHIz4+HbmkVe6z4vbJbo2d8Xtjuuzvi9sd12d8Xtjuuzvi&#xA;9sd12XoY/TkDgmQ09Mg0A3+LkKb7ZGQnxCuXVI4aWfF7ZLdGzvi9sd12d8Xtjuuzvi9sd12d8Xtj&#xA;uuzvi9sd12cK98d1bwq7FXYq/wD/2Q=="/>
    </rdf:Alt>
   </xap:Thumbnails>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">6020-0117-01</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup

%%Page: 1 1

%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [11.999992370605 153.40734863281 599.03997802734 637.63256835938]]
[/BleedBox [11.999992370605 153.40734863281 599.03997802734 637.63256835938]]
[/ArtBox [0 0 612 792 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/0 
<<
/Name (PANTONE 281 C)
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA /0 /CSA get_res
/TintMethod /Additive
/TintProc null
/NComponents 3 
/ColorLookup [
[1 1 1][.996078 .997016 .998016][.992157 .994033 .996032][.988235 .99105 .994048]
[.984314 .988066 .992064][.980392 .985083 .990081][.976471 .982099 .988097][.972549 .979116 .986113]
[.968627 .976132 .984129][.964706 .973149 .982145][.960784 .970165 .980161][.956863 .967182 .978177]
[.952941 .964198 .976193][.94902 .961215 .974209][.945098 .958231 .972226][.941176 .955248 .970242]
[.937255 .952264 .968258][.933333 .949281 .966274][.929412 .946297 .96429][.92549 .943314 .962306]
[.921569 .94033 .960322][.917647 .937347 .958338][.913725 .934363 .956355][.909804 .93138 .954371]
[.905882 .928396 .952387][.901961 .925413 .950403][.898039 .922429 .948419][.894118 .919446 .946435]
[.890196 .916462 .944451][.886275 .913479 .942467][.882353 .910496 .940484][.878431 .907512 .9385]
[.87451 .904529 .936516][.870588 .901545 .934532][.866667 .898562 .932548][.862745 .895578 .930564]
[.858824 .892595 .92858][.854902 .889611 .926596][.85098 .886628 .924612][.847059 .883644 .922629]
[.843137 .880661 .920645][.839216 .877677 .918661][.835294 .874694 .916677][.831373 .87171 .914693]
[.827451 .868727 .912709][.823529 .865743 .910725][.819608 .86276 .908741][.815686 .859776 .906757]
[.811765 .856793 .904774][.807843 .853809 .90279][.803922 .850826 .900806][.8 .847842 .898822]
[.796078 .844859 .896838][.792157 .841875 .894854][.788235 .838892 .89287][.784314 .835908 .890886]
[.780392 .832925 .888903][.776471 .829942 .886919][.772549 .826958 .884935][.768627 .823975 .882951]
[.764706 .820991 .880967][.760784 .818008 .878983][.756863 .815024 .876999][.752941 .812041 .875015]
[.74902 .809057 .873031][.745098 .806074 .871048][.741176 .80309 .869064][.737255 .800107 .86708]
[.733333 .797123 .865096][.729412 .79414 .863112][.72549 .791156 .861128][.721569 .788173 .859144]
[.717647 .785189 .85716][.713726 .782206 .855177][.709804 .779222 .853193][.705882 .776239 .851209]
[.701961 .773255 .849225][.698039 .770272 .847241][.694118 .767288 .845257][.690196 .764305 .843273]
[.686275 .761321 .841289][.682353 .758338 .839306][.678431 .755354 .837322][.67451 .752371 .835338]
[.670588 .749387 .833354][.666667 .746404 .83137][.662745 .74342 .829386][.658824 .740437 .827402]
[.654902 .737454 .825418][.65098 .73447 .823434][.647059 .731487 .821451][.643137 .728503 .819467]
[.639216 .72552 .817483][.635294 .722536 .815499][.631373 .719553 .813515][.627451 .716569 .811531]
[.623529 .713586 .809547][.619608 .710602 .807563][.615686 .707619 .805579][.611765 .704635 .803596]
[.607843 .701652 .801612][.603922 .698668 .799628][.6 .695685 .797644][.596078 .692701 .79566]
[.592157 .689718 .793676][.588235 .686734 .791692][.584314 .683751 .789708][.580392 .680767 .787725]
[.576471 .677784 .785741][.572549 .6748 .783757][.568627 .671817 .781773][.564706 .668833 .779789]
[.560784 .66585 .777805][.556863 .662866 .775821][.552941 .659883 .773837][.54902 .6569 .771854]
[.545098 .653916 .76987][.541176 .650933 .767886][.537255 .647949 .765902][.533333 .644966 .763918]
[.529412 .641982 .761934][.52549 .638999 .75995][.521569 .636015 .757966][.517647 .633032 .755982]
[.513726 .630048 .753999][.509804 .627065 .752015][.505882 .624081 .750031][.501961 .621098 .748047]
[.498039 .618114 .746063][.494118 .615131 .744079][.490196 .612147 .742095][.486275 .609164 .740111]
[.482353 .60618 .738128][.478431 .603197 .736144][.47451 .600213 .73416][.470588 .59723 .732176]
[.466667 .594246 .730192][.462745 .591263 .728208][.458824 .588279 .726224][.454902 .585296 .72424]
[.45098 .582312 .722256][.447059 .579329 .720273][.443137 .576346 .718289][.439216 .573362 .716305]
[.435294 .570379 .714321][.431373 .567395 .712337][.427451 .564412 .710353][.423529 .561428 .708369]
[.419608 .558445 .706385][.415686 .555461 .704401][.411765 .552478 .702418][.407843 .549494 .700434]
[.403922 .546511 .69845][.4 .543527 .696466][.396078 .540544 .694482][.392157 .53756 .692498]
[.388235 .534577 .690514][.384314 .531593 .68853][.380392 .52861 .686547][.376471 .525626 .684563]
[.372549 .522643 .682579][.368627 .519659 .680595][.364706 .516676 .678611][.360784 .513692 .676627]
[.356863 .510709 .674643][.352941 .507725 .672659][.34902 .504742 .670676][.345098 .501758 .668692]
[.341177 .498775 .666708][.337255 .495791 .664724][.333333 .492808 .66274][.329412 .489825 .660756]
[.32549 .486841 .658772][.321569 .483858 .656788][.317647 .480874 .654804][.313726 .477891 .652821]
[.309804 .474907 .650837][.305882 .471924 .648853][.301961 .46894 .646869][.298039 .465957 .644885]
[.294118 .462973 .642901][.290196 .45999 .640917][.286275 .457006 .638933][.282353 .454023 .63695]
[.278431 .451039 .634966][.27451 .448056 .632982][.270588 .445072 .630998][.266667 .442089 .629014]
[.262745 .439105 .62703][.258824 .436122 .625046][.254902 .433138 .623062][.25098 .430155 .621078]
[.247059 .427171 .619095][.243137 .424188 .617111][.239216 .421204 .615127][.235294 .418221 .613143]
[.231373 .415237 .611159][.227451 .412254 .609175][.223529 .409271 .607191][.219608 .406287 .605207]
[.215686 .403304 .603224][.211765 .40032 .60124][.207843 .397337 .599256][.203922 .394353 .597272]
[.2 .39137 .595288][.196078 .388386 .593304][.192157 .385403 .59132][.188235 .382419 .589336]
[.184314 .379436 .587352][.180392 .376452 .585369][.176471 .373469 .583385][.172549 .370485 .581401]
[.168628 .367502 .579417][.164706 .364518 .577433][.160784 .361535 .575449][.156863 .358551 .573465]
[.152941 .355568 .571481][.14902 .352584 .569498][.145098 .349601 .567514][.141177 .346617 .56553]
[.137255 .343634 .563546][.133333 .34065 .561562][.129412 .337667 .559578][.12549 .334683 .557594]
[.121569 .3317 .55561][.117647 .328716 .553626][.113726 .325733 .551643][.109804 .32275 .549659]
[.105882 .319766 .547675][.101961 .316783 .545691][.0980393 .313799 .543707][.0941177 .310816 .541723]
[.0901961 .307832 .539739][.0862746 .304849 .537755][.082353 .301865 .535771][.0784314 .298882 .533788]
[.0745099 .295898 .531804][.0705883 .292915 .52982][.0666667 .289931 .527836][.0627452 .286948 .525852]
[.0588236 .283964 .523868][.054902 .280981 .521884][.0509804 .277997 .5199][.0470589 .275014 .517917]
[.0431373 .27203 .515933][.0392157 .269047 .513949][.0352942 .266063 .511965][.0313726 .26308 .509981]
[.027451 .260096 .507997][.0235295 .257113 .506013][.0196079 .254129 .504029][.0156863 .251146 .502046]
[.0117648 .248162 .500062][.0078432 .245179 .498078][.00392163 .242196 .496094][5.96046e-8 .239212 .49411]
]
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
8.33333 8.33333 scale
-12 -12.96 translate
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 154.367 mo
12 638.593 li
599.04 638.593 li
599.04 154.367 li
cp
clp
[3.42494 0 0 3.42494 -125.639 -1832.28 ]ct
gsave
0 792 mo
612 792 li
612 0 li
0 0 li
cp
clp
gsave
-612 -81 mo
612 -81 li
612 873 li
-612 873 li
cp
clp
set_def_flat
-23.143 804.857 mo
1256.25 804.857 li
1256.25 762 li
-23.143 762 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.471 .498 .518 colr
f
44 791.25 mo
566 791.25 li
566 776 li
44 776 li
cp
f
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
true set_gvm
%ADOBeginSubsetFont: SFAAAA+Frutiger-Roman Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /SFAAAA+Frutiger-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1988, 1990 Adobe Systems Incorporated.  All Rights Reserved.Frutiger is a registered trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 64 /at put
dup 69 /E put
dup 70 /F put
dup 80 /P put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 119 /w put
dup 120 /x put
def
/UniqueID 27206 def
/FontBBox {-169 -222 1000 935} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 -0 698 710 510 522 750 762] def
/OtherBlues [276 282 388 396 -222 -210] def
/StdVW [94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
31 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/hyphen <1C60D8A8C9B81F2C3AC0B7FCD3600359D3FEFF0F7E1848ADC028752
E15DB> |-
/period <1C60D8A8C9B854D088EA79AE9C927B4DFB5883C0834DACE3C0CB1C6
8E2B459> |-
/zero <1C60D8A8C9B7EF32A304FEEB6A2AA3BCEB4B043EC72AF77D9FA60F919
BE7BEF5E2146E539BC23A828A971B2EB781CF56470E5B4C2D30EE9AFA87D8247
C83D3E675254CF65DF73B6EE76E225B945AC15A62938DE8C0654EE228BF9C> |-
/two <1C60D8A8C9B7EF32574D04878392C0E80019EF29194640D59DCDE98A22
4FE2B592B7717FD74442297793DC306BDFBB86D7331BA5F66A3491EA20A2B371
64795DD9F7145080FA181ADC463AB13A54B1D427D8DD27143DF0D9F94D4A5F8C
D678E3AB> |-
/three <1C60D8A8C9B7EF32A304FEE55D008093DFA28B8D896FA79E3831C424
A57DF35ED316315AAC04041F0460B9A1C0C9AA9BDD5C125B068ABFE5C0351BED
AF922B3B918939CB93542D06AC58676CF66AB9CF60F76E4F7CE8F70207C9B506
6D219433F61F14AA1009FCAB64D75273A1BF56C057954175E3DD8AEB1B360E53
CE836CFD923DAA7E13> |-
/four <1C60D8A8C9B7EF327C102745659BA5FE4660C8937BE34AC1E3E624B2E
0F3E322F471B29905118283BEC3DCE1FA21BDCB105D101FF7823407E94C25790
58CB79919F8629FD7E60E9143FE0BF5961C7241CAFDE6E605F18FFBF504246FA
5B1> |-
/five <1C60D8A8C9B7EF32A304FEE57211E0F7296DE9E7953E41C0900C83BA6
FCEF398F64E2E34985A4CB11A7A40CF0088AA156AC331CC4595131D4F7EC9364
43BF7168AA8F6728B8DF83DCD9CC85846345D3E3AAB55AAD7BE5638774BB1EB9
38DE22E429EA515417CC8> |-
/six <1C60D8A8C9B7EF32257B55B3000F7ED1E489ACE4EFE4E684E6BFB1C867
2345FF0A43ED068BA150D238F67F8535CF161F6A03547DD03CEF60B175E74A67
C63EF45B2A9A78897DD90E074F863D9C4043847091DE73BFBBDC64B01A734148
B82ED0551DC04BA502D7B320CE1828BD083B75A418DDD01CE1E50197151954FD
37E6E35879D64A> |-
/eight <1C60D8A8C9B7EF32A304FEEB6A2AA3B9466F3096093C29BB3AA12101
26727DBA0D03C52F9F1EF0E1CF55EAD41BD490AE3066C83887BF8559EEC67E15
3FEB429CD91FEA91949F43715D422BF62D941A74433C162BA0405A9DBC1152BC
83FED5B7A0C80A13BF42ACB28D19415E04E799E4A89344F8633DE7B1AC9D5155
D96C2D91EF58A04E0D26DB29FE888EBC5220031E64D82780AEDC7D38CDEC000B
5BAD556697DD51323FB0367941CEE6F359332E2F63D7331580076EE0B6BD5EB1
9F6E661996809AD57BFD> |-
/nine <1C60D8A8C9B7EF32A304FEE51CAE9B403A8D906CB4279CA47E28B9F31
2E9A9604BB101BB1D6B111E15ED9A916F6DD5439137C9D66ABA001802ACBE482
96D6E0F68E82129F5CC0BE1236631B4E51496F61ECB359A7BE4B9302AB269EE2
D93E84A1836F59DA23F65E4A7A21AC20D8FF32FFE36D11B23D72196> |-
/colon <1C60D8A8C9B854D0FBFA3690864EF8D951F2ADFEA36253A4BA982310
B2F870505D77946C9BE05BF5B2CD7C529CD7702D6913E5A8A9E178C634DD6021
234E> |-
/at <1C60D8A8C9B6D5A0DB612839FCD735516ACAF0ECAF14F26E6F6EB0B1B5D
6B39ADCBB68152155FF22FCB1EE127AC7F2173917450063A9C20C8CDC77F538D
E5F0E9A8856E7ED2A9166B3059DCFB4282F44EDF2FED897DACBE4D6D58340BA8
0A41FC4859964BAEC1E2680F1111033A6E50B751A42E44DE0ACC6EDC080D3501
7D4575F960C69B92102881FC44AA7E1BA8625DDD0E75A1F4BA1976B754191505
20495E3CC2799C636EA3E38518786D7D796352AF0058CE401EC4AEF9A4B9CC10
5E6B064D8FEDEF436E8B236649ACDA6AF07C64C39E05B433F45546440320E751
976437515B285079C18DE77D54F8BBC8CE9793571> |-
/E <1C60D8A8C9B7EF325773A85FEA1EFAF2F38329D3DD9B8C7A68E407D0ACAC
920513CF61E5C086FA0DEEFC64C18A241F5FC0B0E4F8ADF8301C> |-
/F <1C60D8A8C9B7A73DEE9439F6785DC1AD4754C3F5E0ACFB35B492F2CA961B
278671855D0AC2CA64D4BA971CDE9B6FED6C3D4E> |-
/P <1C60D8A8C9B7EF327C102745FD344571828EA6B0817FF82D5B3668B19619
81626A663F593535212EC9D46C59262F9A30F30ECC777F2F8EAED6D55F1EC403
EF644204FF137C80B96965AE5DDC8D15> |-
/W <1C60D8A8C9B5EE315A50F20F8D2CC67E01EEA8C912AADD769F250A2DC1F2
D2BB2577C5D7BCC4CBC2945ED60C1F23A7C8504E7875CA864455EF5FD0D79542
463A0DF76B886C4D3E336F4C439C583E42546EC240C5E43F9124F610E197A6B2
5931B8> |-
/a <1C60D8A8C9B7EF32575B4E6C33D263BBD4819E3269421B28D7A2AF22D024
C46574D4978777A79ED62D1243A1B0DB6D6EA50474CD6F6766A2AB4878B35D65
A12092C04FA10D5EE36B226F0DD733A1DE391C8FA9C992830E876C6557F9AC6E
3193E128EFE837B0D60FAB74A1EB07694070814FCD8075075396C289596395BC
8C77FB618560BAADBFF05369E5AA86EC8CD055F93829780DDA73CFF79093C458
3626106FB8D8CB869D226B284C7D217F5CEEEC0360FE> |-
/b <1C60D8A8C9B7D8BE6A144CF617FB78B1BE7D333F41802BEAFA86B210D340
D93C716C72948DCB256B260E6E0954248A094D72EE133EA6E84036F4510D8C75
E31E7C1D7D6BE73287B89995FDDED836BAE7D3AC36AF94DC608A2C073BEA8492
D45A02BEC2B94C53DC0DF4A36FFA553F6403> |-
/c <1C60D8A8C9B77FE2C128DB6F52ECBEE617061E422C89AAE7EFE22EE03F08
7730A70E658EB061AC7CBD8A83C627490270FD1D18BAE50ABDF2B0BE8CDC92E0
B4052B70B4B3EE76FF63E99E10231E40C67A89113BF6C6C955B03E6C84F0> |-
/e <1C60D8A8C9B7EF32A30E0E632AB08678603F136692690455B78E9B552F87
071515FF61E176643347DA22C6F775128BBE4019C2DE4B90A895B215A0E635B4
861FABF5B1A6FC7C5C2826947FC8540AD1D4245430A81DB28EF02956FE9FC674
9440> |-
/f <1C60D8A8C9B7361F55E947F934CD64FA9DFB386FC71A0C08547DE0B5159A
847CBC3727BBA1CED37B8407C9075DD56936878291C5E1D4748AA4E188413504
A3C01A1CB7D1BDE666E90BB191B2DF76A5E639F0> |-
/h <1C60D8A8C9B7D8BE41A64DAAC778BEB8844EF0118C7F58358D36E24D795C
E87038B1475A3201432106D62CD7758E655FDBA585DB96A7D04FA48A2FAFDCD3
EC15BFECE5F4E62A130FAD5BF4AA9AFC> |-
/i <1C60D8A8C9B854D0A3953AFCF414FFE0E9180595A6DABF32A50B45ABD275
CE0B7524D6655254040B32430C7CD2DBB836D07541E745F023> |-
/l <1C60D8A8C9B854D0A3953AFDB6885EEE76E0724E03A9ACB8CACD68D9FE> |-
/m <1C60D8A8C9B59F85CA8D9E598980EB08C8317278C5DE34906C01EB3ED98C
3EB9D1A2A80EA8249516F098837B7CE7D6E46D2B6362DEFCBB9B4FFFDE9C37E0
1168C85BEF3407EECE205C52EDF84208FE8E0DFE9EDCD57C9A5304109F245B1D
A537AE703F552504C65EBBA549E342CAAA3DF04B49D6011327AC> |-
/n <1C60D8A8C9B7D8BE41A64DAAC7649FEA0EF726C61229D92E30EBE9249920
CE577B487C61D55F52C6A3D4422FCDE9FD0657C84713D317010C3D84B2F51A50
79ACD81AD7D6D337543D58E1C549FA0994CFB82BDA892876C486D65E3B2FCCDB
90129882> |-
/o <1C60D8A8C9B7D8BE9E19B36B5A6BE00A498E82E2571BE7CA76F47F591D8A
131B1A334E9D633CE6262940C3C05C230F1F3F0E5AA88E1B340C4E42F41EAEB0
1E394BA437ACEE27D4986BF9D9E196779FCFD4FDB9A4F4> |-
/w <1C60D8A8C9B6B41CEC825914DF649CDB3A8C82321968B2D5CBF05AD7CE1E
58E086E4BA378641E9D159DEE6F53C77D77EA1E809AD894ABC44A81DE0E2F723
6DA9808030D32CCB58830F83C7480D485FE16BDBE48B732E9AF3F424B6A3EB3E
620346AA> |-
/x <1C60D8A8C9B7A73DEE9439F987D2DB7F2AE2EB7623F86D6EA9145522FC6F
3E919F5FBB83390EF757876E897F3765CA2400F7A469894B5E0C1FDA10C89844
401901DDF6F8DB> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLG+Frutiger-Roman /SFAAAA+Frutiger-Roman findfont ct_VMDictPut
/JTSFLG+Frutiger-Roman*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /.notdef 
/two /three /four /five /six /.notdef /eight /nine 
/colon 5{/.notdef}rp /at 4{/.notdef}rp /E /F 9{/.notdef}rp /P 
6{/.notdef}rp /W 9{/.notdef}rp /a /b /c /.notdef /e 
/f /.notdef /h /i 2{/.notdef}rp /l /m /n 
/o 7{/.notdef}rp /w /x 135{/.notdef}rp]
JTSFLG+Frutiger-Roman nf
JTSFLG+Frutiger-Roman*1 [8 0 0 -8 0 0 ]msf
62.5645 782.224 mo
(Phone: 408.965.3300     Fax: 408.324.4840     E-mail: info@xbow.com     Web: www.xbow.com)
[6.048 6.48794 6.48795 6.48794 6.048 3.824 3.824 6.048 6.048 6.048 3.824 6.048 
6.04799 6.04799 3.82401 6.048 6.04799 6.04799 6.048 3.82401 3.82399 3.82399 3.82401 3.82401 
5.59999 6.048 5.60001 3.82401 3.82401 6.048 6.048 6.048 3.82401 6.048 6.048 6.048 
3.82399 6.04803 6.04797 6.04803 6.04797 3.82404 3.82397 3.82404 3.82397 3.82404 6.04797 4.26398 
8.71204 6.04803 3.82397 3.82404 3.82397 3.82404 3.82397 6.48798 4.71204 6.48798 8 5.60004 
6.48792 6.48798 7.82391 3.82404 5.15198 6.48798 8.71204 3.82404 3.82397 3.82404 3.82397 3.82404 
9.35999 6.04797 6.48798 3.82397 3.82404 8.26392 8.26398 7.82391 3.82404 5.59998 6.48798 6.48792 
7.82397 3.82397 5.15204 6.48792 0 ]xsh
430.536 781.571 mo
431.936 781.571 433.071 780.436 433.071 779.036 cv
433.071 777.635 431.936 776.5 430.536 776.5 cv
429.135 776.5 428 777.635 428 779.036 cv
428 780.436 429.135 781.571 430.536 781.571 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .831 .341 colr
f
290.536 781.571 mo
291.936 781.571 293.071 780.436 293.071 779.036 cv
293.071 777.635 291.936 776.5 290.536 776.5 cv
289.135 776.5 288 777.635 288 779.036 cv
288 780.436 289.135 781.571 290.536 781.571 cv
f
177.821 781.571 mo
179.222 781.571 180.357 780.436 180.357 779.036 cv
180.357 777.635 179.222 776.5 177.821 776.5 cv
176.421 776.5 175.286 777.635 175.286 779.036 cv
175.286 780.436 176.421 781.571 177.821 781.571 cv
f
567.04 26.1 mo
563.89 26.1 li
564.19 26.37 564.31 26.58 564.4 26.97 cv
564.46 27.3 564.43 27.51 564.34 27.81 cv
562.63 33.54 li
560.26 26.1 li
559.03 26.1 li
556.54 33.54 li
554.95 27.93 li
554.86 27.66 554.83 27.48 554.86 27.18 cv
554.89 26.7 555.04 26.4 555.4 26.1 cv
550.75 26.1 li
551.17 26.4 551.38 26.61 551.68 27 cv
552.04 27.48 552.19 27.78 552.37 28.35 cv
555.07 36.48 li
556.66 36.48 li
558.91 29.82 li
561.07 36.48 li
562.63 36.48 li
565.51 28.44 li
565.69 27.96 565.84 27.69 566.11 27.27 cv
566.41 26.79 566.62 26.52 567.04 26.1 cv
553.09 35.85 mo
553.06 35.49 552.94 35.19 552.91 34.83 cv
552.22 34.47 550.87 33.69 550.87 33.69 cv
551.47 32.28 551.44 30.75 550.93 29.4 cv
550.42 28.05 549.43 26.88 548.05 26.22 cv
551.05 18 li
547.3 25.92 li
545.89 25.47 544.39 25.59 543.1 26.16 cv
541.81 26.73 540.73 27.78 540.16 29.19 cv
540.16 29.22 li
539.41 29.04 538.66 28.8 537.94 28.56 cv
537.37 27.09 536.26 26.1 534.61 26.1 cv
533.56 26.1 532.12 26.82 531.34 27.45 cv
531.34 20.88 li
527.71 21.78 li
528.04 22.23 528.4 22.8 528.52 23.25 cv
528.64 23.7 528.73 24.27 528.73 24.84 cv
528.73 36.72 li
531.34 35.91 li
531.91 36.3 532.66 36.72 533.38 36.72 cv
536.53 36.72 538.36 33.87 538.36 30.96 cv
538.36 30.45 538.3 29.94 538.21 29.49 cv
538.78 29.64 539.32 29.82 539.89 29.97 cv
539.56 31.23 539.71 32.55 540.19 33.69 cv
540.7 34.89 541.6 35.94 542.83 36.57 cv
538.51 48 li
543.61 36.9 li
545.08 37.41 546.64 37.29 547.96 36.69 cv
549.01 36.21 549.91 35.43 550.51 34.41 cv
550.51 34.41 552.22 35.4 553.09 35.85 cv
526.69 33.54 mo
526.69 31.98 526.09 31.35 524.77 30.6 cv
523.21 29.7 li
522.58 29.34 521.95 29.07 521.95 28.23 cv
521.95 27.51 522.55 27.12 523.21 27.12 cv
523.54 27.12 524.32 27.57 525.67 28.47 cv
526.36 28.92 li
526.36 26.43 li
526.36 26.43 524.89 26.1 523.42 26.1 cv
521.41 26.1 519.58 26.88 519.58 29.16 cv
519.58 30.66 520.15 31.23 521.38 31.98 cv
522.85 32.88 li
523.39 33.21 524.32 33.66 524.32 34.44 cv
524.32 35.22 523.75 35.79 522.97 35.79 cv
522.31 35.79 521.41 35.19 520.03 34.23 cv
519.37 33.78 li
519.37 36.27 li
520.42 36.69 521.5 36.81 522.64 36.81 cv
524.65 36.81 526.69 35.82 526.69 33.54 cv
517.99 33.54 mo
517.99 31.98 517.39 31.35 516.07 30.6 cv
514.51 29.7 li
513.88 29.34 513.25 29.07 513.25 28.23 cv
513.25 27.51 513.85 27.12 514.51 27.12 cv
514.84 27.12 515.62 27.57 516.97 28.47 cv
517.66 28.92 li
517.66 26.43 li
517.66 26.43 516.19 26.1 514.72 26.1 cv
512.71 26.1 510.88 26.88 510.88 29.16 cv
510.88 30.66 511.45 31.23 512.68 31.98 cv
514.15 32.88 li
514.69 33.21 515.62 33.66 515.62 34.44 cv
515.62 35.22 515.05 35.79 514.27 35.79 cv
513.61 35.79 512.71 35.19 511.33 34.23 cv
510.67 33.78 li
510.67 36.27 li
511.72 36.69 512.8 36.81 513.94 36.81 cv
515.95 36.81 517.99 35.82 517.99 33.54 cv
509.23 31.26 mo
509.23 28.05 507.22 25.95 504.01 25.95 cv
500.59 25.95 498.16 27.69 498.16 31.26 cv
498.16 34.74 500.23 36.66 503.68 36.66 cv
507.01 36.66 509.23 34.68 509.23 31.26 cv
497.32 29.25 mo
497.32 26.43 li
497.32 26.43 496.78 26.19 496.42 26.19 cv
495.34 26.19 494.23 27.27 493.6 28.02 cv
493.6 26.1 li
490.21 27 li
490.45 27.45 490.66 28.02 490.78 28.47 cv
490.9 28.92 490.99 29.37 490.99 29.94 cv
490.99 33.69 li
490.99 34.38 490.9 34.68 490.78 35.13 cv
490.66 35.58 490.45 36.03 490.21 36.48 cv
494.38 36.48 li
494.14 36.03 493.93 35.58 493.81 35.13 cv
493.69 34.68 493.6 34.38 493.6 33.69 cv
493.6 28.14 li
494.71 28.14 li
495.16 28.14 495.61 28.17 495.97 28.35 cv
496.27 28.5 496.75 28.8 497.32 29.25 cv
489.19 33.09 mo
486.37 35.13 li
485.83 35.52 485.32 35.58 485.02 35.58 cv
481.87 35.58 481.03 31.71 481.03 29.25 cv
481.03 26.7 481.9 22.8 485.11 22.8 cv
485.68 22.8 486.04 22.98 486.25 23.13 cv
488.95 25.29 li
488.95 22.26 li
488.95 22.26 488.08 21.78 485.56 21.78 cv
480.67 21.78 478 24.78 478 29.58 cv
478 34.05 480.49 36.72 485.02 36.72 cv
486.13 36.72 487.63 36.45 488.74 36.27 cv
cp
549.34 32.76 mo
549.01 32.55 548.65 32.37 548.32 32.19 cv
548.5 31.56 548.44 30.93 548.2 30.36 cv
547.99 29.79 547.6 29.31 547.06 28.98 cv
547.45 27.87 li
548.29 28.32 548.89 29.04 549.25 29.88 cv
549.61 30.78 549.67 31.8 549.34 32.76 cv
547.78 31.89 mo
547.27 31.62 546.28 31.14 546.28 31.14 cv
546.28 31.14 546.25 31.26 546.85 29.55 cv
547.24 29.82 547.51 30.18 547.66 30.6 cv
547.81 30.99 547.87 31.44 547.78 31.89 cv
546.55 27.51 mo
546.04 28.59 li
545.44 28.47 544.81 28.59 544.27 28.83 cv
543.76 29.07 543.31 29.46 543.01 29.97 cv
542.62 29.85 542.23 29.73 541.84 29.64 cv
542.26 28.77 542.98 28.11 543.82 27.75 cv
544.66 27.36 545.62 27.27 546.55 27.51 cv
545.77 29.13 mo
545.02 30.72 545.08 30.63 545.08 30.63 cv
545.08 30.63 544.09 30.3 543.58 30.15 cv
543.82 29.79 544.15 29.52 544.51 29.34 cv
544.9 29.16 545.32 29.07 545.77 29.13 cv
547.45 32.7 mo
547.21 33.06 546.91 33.33 546.55 33.51 cv
546.1 33.75 545.59 33.81 545.08 33.72 cv
545.89 31.92 li
545.89 31.92 546.94 32.43 547.45 32.7 cv
548.98 33.54 mo
548.53 34.29 547.87 34.83 547.12 35.16 cv
546.25 35.52 545.29 35.61 544.33 35.31 cv
544.84 34.23 li
545.5 34.38 546.16 34.32 546.73 34.05 cv
547.21 33.81 547.66 33.45 547.96 32.97 cv
548.29 33.15 548.65 33.36 548.98 33.54 cv
544.78 31.44 mo
544.09 33.24 li
543.73 32.97 543.46 32.58 543.31 32.16 cv
543.19 31.77 543.16 31.35 543.25 30.93 cv
543.76 31.08 544.78 31.44 544.78 31.44 cv
543.88 33.81 mo
543.46 34.92 li
542.65 34.44 542.05 33.72 541.72 32.88 cv
541.42 32.1 541.36 31.26 541.57 30.42 cv
541.96 30.51 542.32 30.63 542.71 30.75 cv
542.59 31.29 542.62 31.8 542.77 32.31 cv
542.95 32.91 543.34 33.45 543.88 33.81 cv
535.63 31.53 mo
535.63 33.36 534.82 35.46 532.69 35.46 cv
532.21 35.46 531.79 35.25 531.34 35.25 cv
531.34 27.78 li
531.79 27.63 532.12 27.54 532.6 27.54 cv
534.91 27.54 535.63 29.55 535.63 31.53 cv
506.29 31.26 mo
506.29 32.82 505.93 35.79 503.8 35.79 cv
501.31 35.79 501.1 33.18 501.1 31.26 cv
501.1 29.46 501.4 26.76 503.8 26.76 cv
505.81 26.76 506.29 29.79 506.29 31.26 cv
true sop
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
612 -81 mo
1836 -81 li
1836 873 li
612 873 li
cp
clp
set_def_flat
-23.143 804.857 mo
1256.25 804.857 li
1256.25 762 li
-23.143 762 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.471 .498 .518 colr
f
grestore
set_def_flat
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: WLQAAA+Frutiger-Cn Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /WLQAAA+Frutiger-Cn def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1991 Adobe Systems Incorporated.  All Rights Reserved.Frutiger is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
def
/UniqueID 36374 def
/FontBBox {-105 -250 1000 929} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-7 -0 698 705 510 517 750 762] def
/OtherBlues [278 282 392 396 -222 -216] def
/StdHW [68] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
21 dict dup begin
/space <1C60D8A8C9B87A8F8B> |-
/hyphen <1C60D8A8C9B8425761E36286FBF3A2DD0967C1B59C71BA4CE9EB73C
A8541> |-
/A <1C60D8A8C9B7FD84CD08F29C7A3ADBABA9D1473C6D4D530525F5D85D023F
CE3592136B546210833A1094D423249E25BB6F42ED189B3CE0A366FDF7A279CC
7DC7A8BC89BA467CABB27FF0E7C6BD5E1B1F9729698AD02176D23D> |-
/C <1C60D8A8C9B78256A1CE1ACAD5A9908FF736390F29AC635848ABC9357A95
B6C273A4DAC33CE80EFE4E069FD0948A8E104BA0BA06A07B2EFE587E73549888
28F07000AF48EB65D99FFE30DDF0CEA863764B8C088FDC3C> |-
/D <1C60D8A8C9B7FD84E670E2D4C181350F012F93E3EEB66C540FC166ABC126
AFD20C45C4FF08A4F87305BE4FBC31DA6CA024AA6959A0F0AC08EAD6AE4E668C
240FF63916FD4B9920CCDD7FB77BD599> |-
/E <1C60D8A8C9B74CDDE559FC349C72821B6A877A2B15E4CCE2F5587C15267C
8DA9F8188A1073702C1E35257AC91B5CF025656AD41E096208DB> |-
/F <1C60D8A8C9B7113187732E713FEA3B552950E9463DA68A2BE6F35E17A3C9
A4EA81E2494AC8CD95CDA69DE44DA71CC79DDB89> |-
/G <1C60D8A8C9B7D7E8A054F013935C2965F47C953E7E60AE0D72921CD10761
F2C3AAC5BEAA9D4102D667D3AC037827D4952D287D97C4E03C2A90B0A011B861
61B6FFB6795B386B89848ED131C1839EB30F793FFDC92D35995A5D965B28F50A
6249CFA581B48ABD94104ABE> |-
/H <1C60D8A8C9B7FD84CD08F29CE877625840FC6291C6963387F53330EDD46D
90F530CA09E31861EF313A0EE741E4D2676B19CBFC5EEDC964E9109015> |-
/I <1C60D8A8C9B878E8B4ED0097223001F2264002D8B6492F0FCDF50CC7BF> |-
/K <1C60D8A8C9B7B4A1684D51760D8E74F200D79EC2CD163B7319FB1E5DC7CF
A6B5327F88269209787A2192B850006485D2F9A4635039275986DB9C289796> |-
/L <1C60D8A8C9B704CCC7DE5E4CA04AE5118D9E84B22EBA5F5E2B46C6179051
23B69781D9> |-
/M <1C60D8A8C9B6FF86A27735053857B16CEA702FBFDEFFD718C8528143A847
31CFE829051558DD3FD1B6C0BAA321955C4B6FF8723D7B38BE463F6EB74C85F5
79FC461A001E0231AA020A> |-
/N <1C60D8A8C9B7D7E88499B0BAAF72F96C908471894BEABB6914A71D71BC32
52B83B9E2A7165F8495EFB0BC0EB2291C353A31EA352C19F06542DF4B7BBD32F
EB5216D806E741A72C9867E777144194BD7E49C4BA4BEE7BFF632741CCFEBC> |-
/O <1C60D8A8C9B7D7E8A050B64C6E8A8930E9CBC90C728257410A3DCFB046E4
D41D0E8F03637B58FEB57D6CD876FA59374C583B69A2489BFB74B7A72BD7C7BC
531131F680A35BF5FF632A5AE10AFCD9B015D0FE88845E088C9B35FF59> |-
/P <1C60D8A8C9B75A17982D11D3BD0EF4EDEB5EE1FA9D0370AF12525755EBE6
A304ED0BC14286A8F891E8BF3ED87870F78117300AECEAE9CBBA9C7E1FBEBA42
2F2D5AF97C8BD76A17CD073E92C9D289BF> |-
/R <1C60D8A8C9B7B4A1684D517830B4AECECC99054E41914014C4EFFA3F6ACE
E49AEC7C790358E7AAFDECAE715E025BC3B1C5DDD26F628DE10518FFD2677F55
6B7126D7DD96EF1CD76BCC1BD850C1892F9AF32A5CBEFB7C4ED315B5F9579186
72A795788AF82D9DBB4687> |-
/S <1C60D8A8C9B77FE2BDBECFB17D2E1C0D8F119E5BBE37A455B702EDAB9448
C5EB431AEF939AF9469B0F3A6F3117913A56ACEBC895FCD40ED2C1DFA6BFBEF9
D992F5FEABA9C0675728F702556E066176F58803999D5D6CD0ED89A46623BEC9
043D351933347C096B5A4FFC566A11E34F82> |-
/T <1C60D8A8C9B77FE299176F62626AD488D38C59475C17C2B94C1384BA593E
58BA95CF19E6F30D93E8E6B4> |-
/W <1C60D8A8C9B6D179680A68D71C67D01DC53B7FFAB3A1845410B706440669
A3547596B2A7D2205539222414CC9B5347439C087F6BB70468FA956DBAAFDCDD
82288E63A0451C65BE1B8004BF94B4C1A467D57747E6E9BBF094FEC632FB98DC
2F2D2FE29108158D26> |-
/.notdef <1C60D8A8C9B87A8F8B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLH+Frutiger-Cn /WLQAAA+Frutiger-Cn findfont ct_VMDictPut
/JTSFLH+Frutiger-Cn*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C 
/D /E /F /G /H /I /.notdef /K 
/L /M /N /O /P /.notdef /R /S 
/T 2{/.notdef}rp /W 168{/.notdef}rp]
JTSFLH+Frutiger-Cn nf
JTSFLH+Frutiger-Cn*1 [9 0 0 -9 0 0 ]msf
45.8812 91.8994 mo
(HIG)
[5.40905 2.42104 0 ]xsh
59.4622 91.8994 mo
(H)sh
64.8712 91.8994 mo
(-PERFORMANCE WIRELESS )
[2.90704 4.57203 4.40998 4.91397 4.07695 5.751 4.91397 7.245 5.40904 5.751 5.07603 4.40997 
2.51105 7.40704 2.42105 4.91397 4.40997 3.90599 4.40999 4.239 4.239 0 ]xsh
165.275 91.8994 mo
(S)sh
169.514 91.8994 mo
(ENSOR )
[4.40997 5.75099 4.23901 5.75099 4.91397 0 ]xsh
197.09 91.8994 mo
(N)sh
202.841 91.8994 mo
(ET)
[4.40997 0 ]xsh
211.49 91.8994 mo
(W)sh
218.897 91.8994 mo
(ORK )
[5.75099 4.91399 4.91397 0 ]xsh
236.987 91.8994 mo
(N)sh
242.738 91.8994 mo
(ODE)
[5.75099 5.40904 0 ]xsh
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.357 .722 .804 colr
true set_gvm
%ADOBeginSubsetFont: TFSAAA+OmniBook Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TFSAAA+OmniBook def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1992 Image Club Graphics, Inc.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 73 /I put
dup 101 /e put
dup 109 /m put
dup 111 /o put
dup 116 /t put
def
/FontBBox {-70 -285 1129 993} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12.727 -9.53674e-007 459.091 470.909 660.909 674.545 727.273 731.818] def
/BlueScale 0.0454545 def
/StdHW [40] def
/StdVW [95] def
/StemSnapH [40 53] def
/StemSnapV [85 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/two <1C60D8A8C9B7CC0BC595CF0F6B8D02786AB0CFFC7BD3B9453C7F8F301B
B3886C5B6E102EF8308D5AB81AE9FEA64E79AB198F4C5F9DA23FB06453E2F111
27B952725EEA17EDCAB281E564A7F1A8C68A8793A3560AF83A7522> |-
/I <1C60D8A8C9B8B0004349629BE49DF7C61102D93F5F93738DD819C932345E
1A> |-
/e <1C60D8A8C9B79EE3C6271872C8B8AE3D211EF2D57E98A97A363845145E3F
10C4CCC03B434093EC1528ACB383537D637664D53BE760780E4D67EB538A0F90
74CC7CC500F3FA6E732D0BC70C575A47DE4EAACDBCEC5E047F6ACB347D32902D
23D5DDDE> |-
/m <1C60D8A8C9B6BAE57537BD778564CD392F997721209D5B6E5700F612DDD4
C87C77A985BCEACFA80E05DB5DD53E6A11AE8E6BB9A48D17B2AF778867F9D0E9
EAED332F1D3AFF8011A3CA02213037E68E3B2B6CC47170B2A8C280021920668B
AFF1CE626162D295F9FD0F7ADB> |-
/o <1C60D8A8C9B7C56C315EB6CCDFF53B1DCAD3FA07C772D43CBBF526425FBD
27CBEB93F9BDB5EDB49091770E51D048803CC23C0475AFF62CF3067E35DC2640
1F2F6685E81A7289041E4EEFC22614CC34F6DDF3C87770EC0432C32BA3B77FAF> |-
/t <1C60D8A8C9B80B0DC370383158E93714014527D4C4E1388A3995F5E8AA04
857C8644AB99DACEDAC80E90358CC608AEAD5F5001BA1F7D8CA36B74E1531B1B
C9AB6A68C4E2E6D98017680A7D3F42D1C3> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLI+OmniBook /TFSAAA+OmniBook findfont ct_VMDictPut
/JTSFLI+OmniBook*1 
[50{/.notdef}rp /two 22{/.notdef}rp /I 27{/.notdef}rp /e 7{/.notdef}rp /m 
/.notdef /o 4{/.notdef}rp /t 139{/.notdef}rp]
JTSFLI+OmniBook nf
JTSFLI+OmniBook*1 [28 0 0 -28 0 0 ]msf
45.1451 75.3093 mo
(Imote2)
[5.62813 23.9121 17.1642 10.3039 15.568 0 ]xsh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.227 .431 .561 colr
true set_gvm
%ADOBeginSubsetFont: TFSAAA+OmniBook AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
JTSFLI+OmniBook dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8622A94> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLI+OmniBook /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLI+OmniBook*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 22{/.notdef}rp /I 27{/.notdef}rp /e 
7{/.notdef}rp /m /.notdef /o 4{/.notdef}rp /t 139{/.notdef}rp]
JTSFLI+OmniBook nf
JTSFLI+OmniBook*1 [30 0 0 -30 0 0 ]msf
134.267 75.3093 mo
( )sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.357 .722 .804 colr
JTSFLI+OmniBook*1 [18 0 0 -18 0 0 ]msf
225.545 251.786 mo
(Imote2)
[3.61809 15.3721 11.0341 6.62393 10.008 0 ]xsh
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: BGGAAA+Frutiger-LightCn Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /BGGAAA+Frutiger-LightCn def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1991 Adobe Systems Incorporated.  All Rights Reserved.Frutiger is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Light) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
dup 67 /C put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 174 /fi put
def
/UniqueID 36371 def
/FontBBox {-100 -250 1000 913} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-7 -0 698 705 510 517 750 762] def
/OtherBlues [278 282 392 396 -222 -216] def
/BlueScale 0.0479583 def
/StdHW [54] def
/StdVW [58] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
45 dict dup begin
/space <1C60D8A8C9B87A8F8B> |-
/hyphen <1C60D8A8C9B8425761E4BA16F002DEDE2A442CBD54B81E0939EFC32
1ED3C> |-
/period <1C60D8A8C9B87A8F0E61E07E030DF761EE2EEE742EEEC08035D9> |-
/slash <1C60D8A8C9B869C10C79702113A53930CD05974918EA473AC9CE3A8F
FF9CECDFEDAF85> |-
/zero <1C60D8A8C9B75BE56A049B29039FAD6E04C9E8467D7F91B63D113026C
0C0AB5FEA910F61ED2A6655F018CF91422A691117B7DBAD0EDE8D7417655648C
70D0EA8393446DFEAA1855309536CCACF432025AD15C6259060EFB261ECE83D> |-
/one <1C60D8A8C9B75BE54E5BDF8324D09D0871606A297973756EB9897E8C3C
9BC21265AD0878B545CB7F9AA51AD93FF1A0868EEDDE1ACD14EF> |-
/two <1C60D8A8C9B75BE5657C58022DB05BBE278A09F20220565923F0DAC5EA
D198942AB95818C074621BC4995E725B18D25E08EA74E4131CE021B5E132FE51
62A7A4E624C9159AD9403DD8E2B10297E53D50712D76CF6A79> |-
/four <1C60D8A8C9B75BE54E5BDF8D41D4B2D6FAB1F99B9B79744B1A2FA5EB2
149EA9B945C5E086D740E9B44752F6D63D6E7BC7AA9E6173594FBF68EB1500D0
8A2639F114100A3> |-
/five <1C60D8A8C9B75BE56A049B2846030F45FF5BCAF0D7F88F16D33BEF144
55F2C9F0F9B6981CFA94CDD9C859CDC2C06D9F2F92D13F1C2E09DE8148704CB2
4D61C3733FF9E5675C7B32DA20982861D77C78BD8ECAB6D093E6C28D8A38FE94
3F6623D17FB46B150541EC9BF19> |-
/seven <1C60D8A8C9B75BE54E5BDF837EFC6188EFB0D6339DB23774BAE06DEC
F67D57B1510E2574014B755DFBE8AAF633> |-
/eight <1C60D8A8C9B75BE56A049B29039FAD1FD4DF7F03CEF7608C2BFC8795
4AFD5ACCA91ECD43A215256B31E670506B00C3C22A4D64E3848C2795FEC32A58
016B032ED1E2A3913309A910053929667A7A467521CFBAA91FA38EBBF3E2B111
BC28103B1D61A1CE0FCB45969E407472FE775330589368B787C763ADCF9F2469
9C77F2A26C90B224FA53BFB543CA5A73A8C5E6C1FDD1CB7032490880D4648F3C
3E7E38B40A30D8B3BC4240F6AF68DBBF77128147AB7F71F84A55CE8013075BD7
647059EC35A276E54361CA69D3D4D3E2D03092963BB4F53975DD6218AD16B031
C9A23EF5836C0365> |-
/A <1C60D8A8C9B7EF327C10274502B7806222DF01D4C7AEB07D17DAADA57B99
21E55B4615ACD7A708386CA10707099C6B990EB9003074A3BAD79827E65D49B2
BCE50ED0A80A4EF4205A02AC3CFD9BC12659> |-
/C <1C60D8A8C9B78256A1DC64A92FFED61A102D41E84FDC3D8F6A1927FBCA5C
F95C861D1A09CE26C691D480EBFF2A4E9A05A58B6C69585A58F2F1286FF482D2
01D22A4DFD02A87BD1DF59DDBCC0A1FCFADFB106050851> |-
/I <1C60D8A8C9B88C082599D5E8B421D930A511C200E9E97AC9E8CB0A564E> |-
/O <1C60D8A8C9B7C99617863ADE360357EB5E19BB0ECF9C67925EA2E752D98F
B324F1DB4CB863004BFF6F1A8557A1BF1B6C58630D7C3B296FFB49E50D614BA6
A01EECC98A560FA5069C7C1BCE8543105CE870A67DA8EE3655> |-
/P <1C60D8A8C9B74CDDCE74E2570F8B3A2B6D70AE958C93B067538C3D53F5C7
24C1A359DF665E80CC410C45179A928E0A1583CD9B774F8A180EFC75B2B716F6
2D0EA78FEA0D38A0186281487066F1> |-
/S <1C60D8A8C9B71131A35C86C6EC99BBFEB6FB3CC55F81AFF777833931A19B
02E180000B2DA319497FB4B23916B96E85AAB1A23FB46E1A73FA520E30931507
4AF18A8F6217F1C9BEF3A427C19FC5DDD124922E2752762C69D1AD97EEB527E0
39D6DE3C01153E7DFB54267F96694EE4807E2A685E01E4CAF23985F5E73535F7
8E986A9F203BAB5F9E30AF308D6E74376C> |-
/T <1C60D8A8C9B7113187732E7F25721BB1EEF8DCC6EBC2184938D69F5C1BAB
0BEC60D23FEA997ECF0E4BC63353> |-
/U <1C60D8A8C9B7FD84E9D7C060EC048EDE817C9CB9903C8BA5A8080533041B
8A469E1E59B9D64BF7362144B331B4A52FCE6989B433CD3A0459B27911B94A18
B76124C3B03C0779> |-
/X <1C60D8A8C9B7B4A1684D51760D8E74A9FE1B9E98CCCA76DDDF25130F55D3
4F8D030C3A375F32AE4647046ED456011C8517B471C02CC1A4F275FB69FA3579
C33C2AC14BE4FA> |-
/a <1C60D8A8C9B77FE2BDA810F7EF55E874302EC81D98E98F56FECE313C0C12
8A2F58C73A8F2995E73A38E47E3DEB3AC7ECC544841E085C5894C84C395B4147
4465A21FA8697F5B5A426894B450BBDB24AFBB68C3FC37C70283A50E23DD399E
787DCF1748AE5FD20D665C47195DCC8A205D79BD8C5460B76C99E519378FAAAF
5681BF390D97C69A63868482F7AA9A79D7782E9CF4CE3D9E23B45FC3B6E37C1A
47> |-
/b <1C60D8A8C9B74CDDEA5764D5088B4B01A6C40D15265606DDE0A96F1D830B
00074E97E72214766E2705D3D97F5B0F87E5BB4800A5DD3D3ADF5C98704F44D4
4BC6AADC3E38C1ED6992373BECCEE2DFEDA49550B721D553A7A2371D34A16370
91B1D480E78CA21C116E0C51E6E2F072E7CB028A6C3D46930DD5E18B539A45D5
9F891E6FA5541A7B4FCF67D51A4A58CA6288E0B624789857E5> |-
/c <1C60D8A8C9B7299AC8B0650089B01C10053FF44A2D9D0B8D4FCC76DB6CD8
6A19D527E5E80CEC869CA53A8520C2C61141F81D85B4CA7D185EB075D3F4581C
791E68481BC2E7226819F0D9B3FA7CD08C827AB7257382DA853516B578E210CE
F2> |-
/d <1C60D8A8C9B74CDDEA5764D5088B4B01A6C40D6AA43082AD8671FACD64F3
A5BE0DB6C166984F57DB44EDD60F1C12052AFF08BF97008CE69B37F3E863026D
5DF95C3977DB6B4F31F8374FF26DFD57766D2113D5CD637268EE6260CF1B78B5
AC3B43D91F6ACDDAD9FFF10357790BAF377367051353A0BB6C88414E7CDD731D
424EC10AB5BCBF852687E3336E026CDF0D1D444CB36DFBBA81> |-
/e <1C60D8A8C9B71131A3584CE65639820D39C48E31E839A1ABBB1C3FBDFE1F
A9354AD79FCE684F39B75A23A2B5FA873C334D0DE979717865A3D0A68BDAC7CA
0420E1424631E01F42B0825A2177478419D9819FB5192550523CE3963809> |-
/f <1C60D8A8C9B869C1356944972C1921C58DA73A6743434ABCAA9381456E73
4C1FA96D238851CAFC766E5127E9C5A0943FA53CD87E8453263D8D799A5844D2
7328BD8CA166B8FDC41C2BE6A9C471A6BB9338A29A812B4065EF9257C7BD6ED9
9BB5803C6C7B7DE4B22E6A25EE> |-
/g <1C60D8A8C9B74CDD95794B5F8BF4F776572A081AEB55DD739BCFB67A4C67
53F920DE7BB53F325595535FFD59C7F6EBA768B0B0F2E9DA595F1AF9C828782C
7918C01ECF54A48D13C94724C089700531AA17BAA870C99677BC3310422D3EF7
015CAD802E80682960EEE134029E37636CC353DE3881E4C1BDE67E249BD05B25
3126C3081505AF61AFAF6EA1BC11F0CD48D15C65E4A8192447901776F1E1C77B
5857E903BA320506884CF3C8F3DB442AEBE55468C5> |-
/h <1C60D8A8C9B74CDDCE74E258F9594A748D939636801D1F0E6EF22B15D43C
EE259FEB01589EFB968E5B06507FA14422BA29D1CE3A9BDFC78EFBB9B4E10E43
1E99AE3532DF54AA23EAEAB2> |-
/i <1C60D8A8C9B89E84FD5C426E4EB393F1CE59A11258AD084DAE82465C55B2
B260F6570D58B6EA1191FECC6F440DEB6E737988294470F7BC> |-
/k <1C60D8A8C9B7113187732E7EF0BA5C38D73665380F18506632B9A41F64B8
5C5DD97C7347312543A58FFB94E62C6BF9F87BDCCCDA6B7E80AF7A14375FD3A2> |-
/l <1C60D8A8C9B89E84FD5C426F29FEF606FC333EC9651EF7CA0EA7AD60C2> |-
/m <1C60D8A8C9B6232B20DA2F07C5F6B4A56D2A9DFB40CB73078B5FD4B98F94
38CD8AB06454F562DC74865FABE9154C881CE8FB6ED1F72EEE4EA029B71F1E8E
66056E40D3058AC916CE56203400FC8CC0C4DBD61DB76D102128D5D271B1B4EB
AF071D93A2560EBDB503D20082CC21D266C09457E270795C5D153C30551AB578
334D1C8F243851F978> |-
/n <1C60D8A8C9B74CDDCE74E258F9594A427B3B1DDBA9125530703117ADE541
F86E18EB2CD30E74D57EAFA635826325E44D047C2467C7BDC701C1F367D62213
F03355FDBECA84E81B4C7F2185CB2F6B0659611052FB70D4DB9805848994D1D0
EB621E> |-
/o <1C60D8A8C9B74B0CC96C5CF3F33326024A61774C1D4650CF79DACD029BF6
7D19DDC224BB6B161631052EEEB6405217F7C04E092BF06BAB03E1C550C05C5A
6371E9A1057458022E4C93326E45BF1AAF7AD09AE7617F394FFB130FDD> |-
/p <1C60D8A8C9B74CDD955C5E33AEC07412AD76E47467E5276F332A4FC86387
B10796B4412EC3AB43340408846D10AF054F7E7B07D7999002C97B3BE4E15C98
D694ADFB5CCFC8BF5BF25AA98CA490D42294F4095B6AC433C3089ADEC114BBA0
E667B298E9E528F6A11564A5C21E3174D88F1876A274543B8CB8EE712F6471DE
ED62D725EE602B7017A210909EA6771EA4FC3FF26A9438E331> |-
/r <1C60D8A8C9B854D0A3953AFC3D1A75C47167CD5F745334DD77DDF5D731F6
E6D9F16FA2DFCE494F19E0E1548A2D678DA052036373C6F4A22AC776CDA1F4F2
E00701C98765076A9A> |-
/s <1C60D8A8C9B80A3FF107ABD9E42152DB738FF1A4DCF243F623892EB8AD3A
93C0A5B2AC880F47087F6FCD48A044CE9EA4DBC167F19AF8C2A01E36F046BA4D
D3EF82068F676BF169CC0B08804D02A696EC61747B2A036040419EFEA629D99D
713E48EEFD66CE55F829A2109507> |-
/t <1C60D8A8C9B854D0878EB212D5947DB2A9CA86BC553166A550530DC17792
95BF03A40F5FE6C0DF74FE018CA3B37327DD0BF06FBEE74C052B471A73F25455
DAE293EC5EDF84DE892947> |-
/u <1C60D8A8C9B74CDDEA5764D5F9E9728B1EACE0D8D1C34DC1E64F72284531
2B71225FA8E3761317FDD1964ECE9804B3B476AEBA7B232E992270E935E8C8D6
45E78230549F57E47767EFB34A3BC0DFF8E9209625004264ABB49BF968353771
CBA75EDFD4> |-
/v <1C60D8A8C9B7354998C88B1A07653804CD5808E45C00E771D089C23BFA96
CD673EBD5371763E13E72407868CEBED1BFFAA9E55B1E8D309C6F28195DB> |-
/w <1C60D8A8C9B67DB5F46C6869F8D45226369840DFDFC11D091FF4C50BFC7C
4BF559C0CB1D5A49AD538844CC3CF83E0775B3AAED24589DD2C1D933FCD5AD30
F088C0C5A8A140B048F9F29C75FE2F1E7324F073B882> |-
/x <1C60D8A8C9B7361F55E947F9E0BC6FFC8EFD8B42DC4C9BC2F1F46FE1D59C
D315A08E84D121C6C2C8EA325A194DA4B0E447BF115D89AAF86FE78F55823F2C
6B227E0823> |-
/y <1C60D8A8C9B7299AB7B20183929A830B866A09468A7BE0E510E6EE552368
798C336BCA4798D4770A08F3D4CBAE090477FCDED21EDAC7C3E5178E6C2246F4
10C2DE18B951F0855E8B925DA1074911AC5D5E1D6025D9F0554C68FB7937E39B
3A2BF82EE5A293F77D6A8FC2F2A1D8> |-
/fi <1C60D8A8C9B74CDDCE74E258C6B823A925C2C1578599FBECB52C4029A20
DD3A4A3E912237EC7B1D13C45FE16DE846920DF3116B099ED39C41D53C0E04A3
0A5021538E17765204EAE42D17D59B90E6202263BE155A03642B62B1A79A1112
D176DDFBDC7147301E6A8827C0D6D9285C6532C5413BD708A0FAFC5CB1461C82
8A719BE327D40B239D8671D66D7534CA3CF9B4080264FEEB515D630BC9C05F21
87D5C010A182C46DC64C1275ECDF31609C3EE939165584B8BBE86> |-
/.notdef <1C60D8A8C9B87A8F8B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLJ+Frutiger-LightCn /BGGAAA+Frutiger-LightCn findfont ct_VMDictPut
/JTSFLJ+Frutiger-LightCn*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /zero /one 
/two /.notdef /four /five /.notdef /seven /eight 8{/.notdef}rp 
/A /.notdef /C 5{/.notdef}rp /I 5{/.notdef}rp /O /P 
2{/.notdef}rp /S /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u /v /w /x /y 
52{/.notdef}rp /fi 81{/.notdef}rp]
JTSFLJ+Frutiger-LightCn nf
JTSFLJ+Frutiger-LightCn*1 [9.5 0 0 -9.5 0 0 ]msf
225.545 275.586 mo
(The Imote2 is an advanced wireless sensor )
[4.06595 4.41748 4.06595 2.41306 2.12799 6.53606 4.42703 2.66002 4.06595 4.57895 2.41306 1.95694 
3.36307 2.41302 4.237 4.41748 2.41306 4.237 4.41748 3.724 4.237 4.41748 3.53394 4.06595 
4.41748 2.41306 6.17496 1.95694 2.66 4.06595 1.95694 4.06595 3.36307 3.36304 2.41306 3.36304 
4.06595 4.41748 3.36304 4.42706 2.64099 0 ]xsh
225.545 288.586 mo
(node platform. It is built around the low power )
[4.41748 4.42703 4.41748 4.06595 2.41306 4.41748 1.95694 4.23701 2.65999 2.47952 4.42706 2.65997 
6.53607 2.29904 2.41306 2.12799 2.66 2.41306 1.95694 3.36304 2.41306 4.41748 4.41748 1.95694 
1.95694 2.66 2.41306 4.237 2.66 4.42703 4.41748 4.41748 4.41748 2.41302 2.66 4.41748 
4.06595 2.41306 1.95694 4.42706 6.17493 2.41306 4.41748 4.42703 6.17499 4.06592 2.64102 0 
]xsh
225.545 301.586 mo
(PXA271 XScale CPU and also integrates )
[4.41748 4.94946 5.30099 4.57896 4.57896 4.57896 2.41304 4.94946 4.06598 3.53394 4.237 1.95697 
4.06592 2.41306 5.12054 4.41745 5.47205 2.41309 4.237 4.41745 4.41748 2.41306 4.237 1.95694 
3.36307 4.42703 2.41306 1.95694 4.41748 2.66 4.06595 4.41745 2.66 4.23703 2.65997 4.06595 
3.34406 0 ]xsh
225.545 314.586 mo
(an 802.15.4 compliant radio. The design )
[4.237 4.41748 2.41306 4.57895 4.57896 4.57896 2.29904 4.57898 4.57895 2.29904 4.57898 2.41302 
3.53397 4.42703 6.53607 4.41745 1.95694 1.95697 4.237 4.41748 2.65997 2.41306 2.66 4.237 
4.41748 1.95694 4.42703 2.29907 2.41306 4.06595 4.41748 4.06595 2.41306 4.41745 4.06595 3.36304 
1.95697 4.41748 4.39847 0 ]xsh
225.545 327.586 mo
(is modular and stackable with interface )
[1.95695 3.36304 2.41306 6.53604 4.42705 4.41748 4.41747 1.95695 4.237 2.66 2.41306 4.237 
4.41748 4.41748 2.41302 3.36307 2.66 4.237 3.53394 4.06595 4.237 4.41748 1.95694 4.06598 
2.41302 6.17496 1.95694 2.66 4.41748 2.41306 1.95694 4.41748 2.66 4.06595 2.66 2.47952 
4.23697 3.534 4.04694 0 ]xsh
225.545 340.586 mo
(connectors for expansion boards on both the )
[3.53395 4.42705 4.41748 4.41747 4.06595 3.53397 2.65999 4.42706 2.65997 3.36307 2.41306 2.47952 
4.42703 2.66 2.41306 4.06595 3.71457 4.41748 4.237 4.41748 3.36304 1.95694 4.42703 4.41748 
2.41306 4.41748 4.42703 4.237 2.66 4.41748 3.36304 2.41306 4.42703 4.41748 2.41306 4.41748 
4.42703 2.66 4.41748 2.41302 2.66 4.41748 4.04697 0 ]xsh
225.545 353.586 mo
(top and bottom sides. The top connectors )
[2.66 4.42703 4.41748 2.41306 4.237 4.41748 4.41747 2.41306 4.4175 4.42703 2.66 2.65997 
4.42706 6.53604 2.41306 3.36304 1.95694 4.41748 4.06595 3.36304 2.29907 2.41306 4.06595 4.41748 
4.06592 2.41309 2.65997 4.42706 4.41745 2.41306 3.53397 4.42703 4.41748 4.41748 4.06592 3.53397 
2.66 4.42706 2.65997 3.34406 0 ]xsh
225.545 366.586 mo
(provide a standard set of I/O signals for basic )
[4.41748 2.65999 4.42705 3.724 1.95694 4.41748 4.06595 2.41306 4.237 2.41306 3.36304 2.66 
4.237 4.41748 4.41748 4.237 2.66 4.41748 2.41302 3.36304 4.06598 2.65997 2.41309 4.42703 
2.47952 2.41306 2.12799 2.47952 5.66193 2.41309 3.36304 1.95694 4.41748 4.41748 4.237 1.95694 
3.36304 2.41306 2.47952 4.42706 2.65997 2.41306 4.41748 4.237 3.36307 1.95694 3.51495 0 
]xsh
225.545 379.586 mo
(expansion boards. The bottom connectors )
[4.06595 3.71457 4.41748 4.237 4.41748 3.36305 1.95694 4.42705 4.41748 2.41306 4.41748 4.42703 
4.237 2.66 4.41748 3.36304 2.29904 2.41306 4.06595 4.41748 4.06595 2.41306 4.41748 4.42703 
2.66 2.66 4.42703 6.53604 2.41306 3.53394 4.42703 4.41748 4.41748 4.06595 3.53397 2.65997 
4.42706 2.65997 3.34406 0 ]xsh
225.545 392.586 mo
(provide additional high-speed interfaces )
[4.41748 2.65999 4.42705 3.724 1.95694 4.41748 4.06595 2.41306 4.237 4.41748 4.41748 1.95694 
2.66 1.95694 4.42706 4.41745 4.23703 1.95694 2.41306 4.41748 1.95694 4.41745 4.41748 2.83105 
3.36304 4.41748 4.06595 4.06595 4.41748 2.41306 1.95694 4.41748 2.66 4.06595 2.66 2.47952 
4.237 3.53394 4.06598 3.34402 0 ]xsh
225.545 405.586 mo
(for application speci\256c I/O. A battery board )
[2.47952 4.42705 2.66 2.41304 4.237 4.41748 4.41748 1.95695 1.95694 3.53395 4.23703 2.65997 
1.95697 4.42703 4.41748 2.41306 3.36304 4.41748 4.06595 3.53394 1.95694 4.41748 3.53397 2.41306 
2.12799 2.47952 5.66196 2.29904 2.41306 5.30099 2.41306 4.41748 4.237 2.65997 2.66 4.06595 
2.66 3.53397 2.41302 4.41748 4.42706 4.237 2.65997 4.3985 0 ]xsh
225.545 418.586 mo
(supplying system power can be connected to )
[3.36305 4.41747 4.41748 4.41748 1.95694 3.53397 1.95694 4.41748 4.41748 2.41306 3.36304 3.53397 
3.36304 2.66 4.06595 6.53604 2.41306 4.41745 4.42706 6.17496 4.06595 2.65997 2.41309 3.53394 
4.237 4.41748 2.41306 4.41745 4.06598 2.41302 3.53397 4.42703 4.41748 4.41748 4.06595 3.53397 
2.65997 4.06598 4.41745 2.41306 2.65997 4.40805 0 ]xsh
225.545 431.586 mo
(either side.)
[4.06595 1.95695 2.66 4.41747 4.06595 2.66 2.41306 3.36305 1.95694 4.4175 4.06595 0 
]xsh
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.357 .722 .804 colr
true set_gvm
%ADOBeginSubsetFont: TFSAAA+OmniBook AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
JTSFLI+OmniBook dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B790A83DA1E7BBEB44D2FFAD7CC9A37DDD553EA334852B7F16
3161A6341CC1D1D8573DBE94738C9958955F5C6B50B0C9A8E623ADB01EFA9F4C
BC01760603B07854E8AE97C72A5109E960194591> |-
/c <1C60D8A8C9B78E056F76BCEB366C65683EE9640A4F8FC9A2E480D255B1B6
FE14710FC19DB457822D28BAAA16FCA76D4A38D2E8C899CCD80E3A35C10A0CB0
392169F0C10424CB8FDFB8E641E25C2C102AE785BD530922AC2C77B3D6> |-
/r <1C60D8A8C9B813792C959115778271CCF11A69B6B61C80BA862636AC005D
A19A912CBFEDF54573F29C9175904F71345BFDC7C3B070F670768B7F> |-
/s <1C60D8A8C9B70B6B30C231F6A9663B88F1D79B4D0299C7D1406FFBA77B4F
0CFBC2CE16BE557D4041D3D8A2A7ED2EE29680BCC7313B793DEE3BDD50F1395A
968712CB91DF1CC0E68F8B89B7313C2689D1A03655133E427B292D36F0886DEB
7D6D7DAAA38935DF10258A77A10A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLI+OmniBook /Encoding get
dup 80 /P put
dup 99 /c put
dup 114 /r put
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLI+OmniBook*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 22{/.notdef}rp /I 6{/.notdef}rp /P 
18{/.notdef}rp /c /.notdef /e 7{/.notdef}rp /m /.notdef /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
JTSFLI+OmniBook nf
JTSFLI+OmniBook*1 [14 0 0 -14 0 0 ]msf
225.545 456.786 mo
(Processor)
[8.1619 5.22202 8.7641 7.74191 7.966 5.99191 5.99191 8.7641 0 ]xsh
289 456.786 mo
( )sh
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: BGGAAA+Frutiger-LightCn AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLJ+Frutiger-LightCn dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B869C16CF03AD63CAE6640F18FF2C6B6E8ECF811AE
91FDD9D3A19B07B0E4725FAD8793A88C856C34DB52746F089CE804C3A8B7E7C6
A330FAF10078D5B0F0800D1EFE0EFD0405972601FE35233322> |-
/parenright <1C60D8A8C9B869C16CF03AD672D96AAD7F37B4282C9C7502C2E
5581E2C4BA560660970BDD8B1BF249A655278C68A3C9AED1C1B6EEDB5EE955DA
690E15C0BB817EE> |-
/comma <1C60D8A8C9B87A8F7EC3833D2CAAF8A1454878EF7753F4B6E009C334
B01884> |-
/three <1C60D8A8C9B75BE56A049B279A227ADAC512AFC06778D20FF3CA9DBD
87B945CA2E5310C4CD8B3275696466EAB84FB5F43F8798FF584638FF6F805EA3
A1C56B52551AA4AC489B3514787A7AA0A1BB4625F12BAF00B0B627433F6D5756
C3FE030A89CFCA6F598FD01C6DA97CB8F1E4ACC6A0F6E77D6050EC75D2E43B5C
7C0FF4FF0CE427857F6DA955E45B5FA58E0F164046DC2170F1DF69> |-
/six <1C60D8A8C9B75BE56A049B285EE5C586C8E23E1095328AD5CD2D95CA3E
5FBE0CBDDE93E974B5E4074EABEBDB04C8A20E2A9B4BD34B6C4FA61EE0FD80A1
D929DE97F1B3F73E55F9E167CACB990602628664EB538322E25BF996767315BB
C16D8CBF7C5254396576A6DAAEAC164438214D50D4E338EB9B7D5223048FE319
5A93A72C8AA23832F1F2F2BEA311A29D> |-
/nine <1C60D8A8C9B75BE5774BB3E5E0C8864245EC12AEC0A18CDF6CB2A1916
049E8A4F843D402CAC011349253A31D91EF91AF723548D7F69D616E6BCAA839E
B9EC73C5E847E8D49456E4581F56C48D744D501ECCBCC4EE1442B8A1F87B5B1B
B8CB0E8470940383E631CDA0E6C9749E6779800E10F9F83F0B2EAE0DAD1E4D28
9F4002E9E302804C8ABAC605BDB1F> |-
/B <1C60D8A8C9B7A73DC516E50DADDBCA0BE541DCE3AFCD02647E0B48FFD7D9
5BDAA4CE01ED7F8BC5E7A1DA0487AD41950FBB82E29CEDD5F55DD7607F934DB1
2AF7F3378B93C57D27F4DC5A6766AF40CC6F243204465EB4DC826E18FD319115
A1CF074505D0BC10B5003A2A7FBE2A6E7667575043D8893F90F9885CA4B8DF9B
B6F1359B76CF96E93ED1F9BEF5D7DA6F4429382D0EEDAE78B43C2DCE1162B731
50AFBBFF29CBC5> |-
/D <1C60D8A8C9B7EF3257557950BD5ADEAD0FCC65DA8BCF22F3B419E6587FDD
23C2D92B3FBBBB2E01979F62A6CEEF3A5D7711042F2AFAC09D40A128470F868E
DCDE7677C05C7EE6BD99> |-
/E <1C60D8A8C9B77FE2B24FAB464FDE70CCCCA9F34974F621D1588811F5A39B
9A87EB7085F8F3E1EB9D1750643FEC104B1196D0024CA8DA8BED> |-
/F <1C60D8A8C9B704CCECA9F5B1DD0CD81FF314DA10443646BF58242D274DFB
9F85D690799E92C53E097A59ECBB75573611E665> |-
/G <1C60D8A8C9B7CA64594A4D11CB8611E2D7CFBBC7F34AC9DCB358DF2151C9
8AA88304B3A963FD9BC59963C5B6A65DE9520F4622628EFDBA00B385CBB7FC66
6E71731295DB19C3EF7363CE5D662F0569CE2EDA3277052B931133D9B1C218DE
2CD5DE8AAC0584A5D968F9DA28> |-
/H <1C60D8A8C9B7EF327C102745B43F1AC997EDF604B90AD8EFA07B4F12E22F
6AE7E1400BDB37A9308B8580BFB3AFC9CC25FDDAB9B7BF7E1AE10FECF7> |-
/L <1C60D8A8C9B7361F7E6B66403E02C8A4B4B2B9C3545EC5E13026DA432E07
74118175F6> |-
/M <1C60D8A8C9B61918354FF47FD42DC5AFB14AC7E4E01DEAD6C899355588E6
BD7108F1894E7E52445636618DF37EAAD2523A36B3558DDE5DD3952390F0C113
7EE7AE62965BCA33D81A5992FC11063180975F06CA4CC75C1D> |-
/R <1C60D8A8C9B7A73DEE9439F673700FEDE25941CBD062125D73CE7F2EA126
8EC3576AA16F44027564DD6F161F85933B1F82CEBC9ED9A786836451FB5DCEBA
907DEBA7AD447522BCA71B79EEAB6200DD47C8A9CE93B1AF15337290D7B960B4
A989FBA2770FFD> |-
/V <1C60D8A8C9B7B4A1684D51760D8E74A791F89A5CD2B3CB57573CC7F59F41
17F0248E4533AA67AC77A61F2EAD397965DCC8651E23511CEBAD73A448BF> |-
/W <1C60D8A8C9B6FF86890DA7F5DD1E3F5D81085942DA3841E81A04474536CC
12FD4712F024AF782E53EDA1274FFFAD6FFE5DFDFB209B9D90826FF268A6A270
D0A27A772939D6E0BA127E7992761B2577F4FDED44A26B7780AE> |-
/q <1C60D8A8C9B74CDD955C5E33AEC07412AD76E40B31054F25A70F4CADD488
204436F48A9D4C53226DC48CCB520C1580A5A45A6FE43703A357428649E42513
D3630EEE85E52C407BD5464F3A35CCDEF0223C37C8BE6745DAFDCE7734783B7C
C2B780D86DE26B468A080388FDDB9C5E929F2E8A0E648ECC91AD74A2B8B63F0E
75BFEA05C2CF71BA24F79F95E342234E88BC0A32B8773DFE26> |-
/z <1C60D8A8C9B7299AC7661F5F3A855829E9EE250077A12AD48D99C15740EE
DAC2FDA7FD55FBA13A948670F9862971B4634A90D7> |-
/fl <1C60D8A8C9B74CDDCE74E258C6B823A925C2C1578599FBECB52C4029A20
DD3D31D9A94E161284282D5A074671647C008BEE0E7A5D92F45836D3D58B1D6B
E864214A8DD78800DF056EAB7F0BC1DDF11DEEFB51454EB7F9421743B53BC676
5C237BC387D254A4272599BC818D4F1AA390F2A01328F02224328BF445F1641A
397956E2BFD85B01F346254555D7D0220C1E3F5FAC5640AC116D607C7CDE0F18
E74D721FCABAD2C99E8A5ECD71FFFF2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLJ+Frutiger-LightCn /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 51 /three put
dup 54 /six put
dup 57 /nine put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 82 /R put
dup 86 /V put
dup 87 /W put
dup 113 /q put
dup 122 /z put
dup 175 /fl put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLJ+Frutiger-LightCn*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight /nine 7{/.notdef}rp /A /B /C 
/D /E /F /G /H /I 2{/.notdef}rp /L 
/M /.notdef /O /P /.notdef /R /S /T 
/U /V /W /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 51{/.notdef}rp 
/fi /fl 80{/.notdef}rp]
JTSFLJ+Frutiger-LightCn nf
JTSFLJ+Frutiger-LightCn*1 [9.5 0 0 -9.5 0 0 ]msf
225.545 469.786 mo
(The Imote2 contains the Intel PXA271 CPU. )
[3.80945 4.51248 4.16095 2.50806 2.22299 6.63104 4.52205 2.75499 4.16095 4.67398 2.50806 3.62894 
4.52203 4.51248 2.755 4.332 2.05194 4.51251 3.45804 2.50806 2.75497 4.51248 4.16098 2.50803 
2.22299 4.51251 2.75497 4.16095 2.05197 2.50806 4.51245 5.04449 5.396 4.67395 4.67395 4.67398 
2.50803 5.12054 4.41748 5.47205 1.92853 0 ]xsh
225.545 482.786 mo
(This processor can operate in a low voltage )
[3.80945 4.51248 2.05194 3.45805 2.50806 4.51247 2.755 4.52205 3.62895 4.16095 3.45804 3.45807 
4.52203 2.755 2.50806 3.62894 4.332 4.51248 2.50806 4.52206 4.51245 4.16095 2.58401 4.332 
2.755 4.16095 2.50806 2.05194 4.51248 2.50806 4.332 2.41306 2.05194 4.52206 6.26993 2.50806 
3.819 4.52203 2.05194 2.755 4.33203 4.51245 4.04694 0 ]xsh
225.545 495.786 mo
(\(0.85V\), low frequency \(13MHz\) mode, )
[2.57452 4.67397 2.39404 4.67397 4.67395 5.04448 2.57452 2.04256 2.50806 2.05194 4.52206 6.26993 
2.50806 2.57452 2.755 4.16095 4.51248 4.51248 4.16095 4.51248 3.62894 3.62897 2.41306 2.57452 
4.67395 4.67395 7.14404 5.39603 3.62894 2.57452 2.50806 6.63104 4.52206 4.51248 3.80945 1.92853 
0 ]xsh
225.545 508.786 mo
(hence enabling very low power operation. )
[4.51248 4.16095 4.51247 3.62895 4.16095 2.50806 4.16095 4.51248 4.332 4.51248 2.05194 2.05194 
4.51248 4.51248 2.50806 3.819 4.16095 2.755 3.62894 2.50806 2.05194 4.52206 6.26996 2.50806 
4.51248 4.52203 6.26996 4.16095 2.755 2.50806 4.52203 4.51245 4.16098 2.58401 4.33197 2.755 
2.05194 4.52206 4.51248 1.92853 0 ]xsh
225.545 521.786 mo
(The frequency can be scaled from 13MHz )
[3.80945 4.51248 4.16095 2.50806 2.57452 2.75499 4.16096 4.51247 4.51247 4.16095 4.51248 3.62897 
3.62894 2.50806 3.62897 4.332 4.51248 2.50806 4.51245 4.16098 2.50803 3.45807 3.62897 4.33197 
2.05197 4.16095 4.51248 2.50806 2.47952 2.66 4.42703 6.53604 2.41306 4.57895 4.57898 7.04901 
5.30103 3.51495 0 ]xsh
225.545 534.786 mo
(to 416MHz with Dynamic Voltage Scaling. )
[2.755 4.52203 2.50806 4.67395 4.67397 4.67397 7.14404 5.396 3.62897 2.50806 6.26996 2.05194 
2.755 4.51248 2.50806 5.396 3.62894 4.51248 4.332 6.63104 2.05194 3.62897 1.98557 4.69296 
4.52203 2.05197 2.755 4.33197 4.51248 4.16098 2.50803 4.16095 3.62897 4.332 2.05194 2.05194 
4.51251 4.51245 1.92856 0 ]xsh
225.545 547.786 mo
(The processor has a number of different low )
[3.80945 4.51248 4.16095 2.50806 4.51247 2.755 4.52205 3.62895 4.16096 3.45804 3.45804 4.52203 
2.755 2.50806 4.51248 4.332 3.45804 2.50806 4.332 2.50806 4.51248 4.51248 6.63104 4.51248 
4.16095 2.755 2.50803 4.52206 2.57452 2.50806 4.51248 2.05194 2.57452 2.57452 4.16095 2.755 
4.16095 4.51248 2.755 2.50806 2.05194 4.52206 6.15594 0 ]xsh
225.545 560.786 mo
(power modes such as sleep and deep sleep. )
[4.51248 4.52203 6.26996 4.16095 2.755 2.50804 6.63106 4.52203 4.51248 4.16095 3.45804 2.50806 
3.45804 4.51248 3.62897 4.51248 2.50806 4.332 3.45804 2.50806 3.45804 2.05197 4.16095 4.16095 
4.51245 2.50806 4.33203 4.51245 4.51248 2.50806 4.51248 4.16095 4.16095 4.51248 2.50803 3.45807 
2.05194 4.16095 4.16095 4.16098 1.92856 0 ]xsh
225.545 573.786 mo
(The PXA271 is a multi-chip module that )
[3.80945 4.51248 4.16095 2.50806 4.51247 5.04448 5.396 4.67395 4.67398 4.67395 2.50806 2.05194 
3.45807 2.50803 4.332 2.50806 6.63104 4.51248 2.05197 2.755 2.05194 2.92603 3.62897 4.51248 
2.05194 4.51248 2.50806 6.63104 4.52203 4.51248 4.51248 2.05194 4.16095 2.50806 2.755 4.51248 
4.332 2.64099 0 ]xsh
225.545 586.786 mo
(includes three chips in a single package, the )
[2.05196 4.51247 3.62895 2.05196 4.51248 4.51247 4.16095 3.45805 2.50806 2.755 4.51245 2.755 
4.16095 4.16095 2.50806 3.62897 4.51248 2.05194 4.51248 3.45804 2.50806 2.05197 4.51245 2.50806 
4.332 2.50806 3.45804 2.05197 4.51248 4.51245 2.05197 4.16095 2.50806 4.51248 4.332 3.62894 
4.16095 4.33203 4.51245 3.80945 2.29907 2.50806 2.755 4.51245 4.04694 0 ]xsh
225.545 599.786 mo
(CPU with 256kB SRAM, 32MB SDRAM and )
[5.21553 4.51247 5.56705 2.41306 6.17496 1.95694 2.66 4.41748 2.41306 4.57895 4.57898 4.57895 
4.06595 4.76898 2.41306 4.06595 4.76901 5.30099 7.04904 2.04257 2.50806 4.67395 4.67395 7.14404 
4.86401 2.50806 4.16095 5.396 4.86401 5.396 7.14404 2.50806 4.332 4.51248 4.3985 0 
]xsh
225.545 612.786 mo
(32MB of FLASH memory. It integrates many )
[4.67397 4.67395 7.14406 4.864 2.50806 4.52203 2.57454 2.50803 3.9805 3.80957 5.396 4.16095 
5.396 2.50806 6.63104 4.16095 6.63104 4.52206 2.755 3.20145 2.04254 2.50806 2.22299 2.755 
2.50806 2.05194 4.51248 2.755 4.16095 4.51248 2.58398 4.33203 2.755 4.16095 3.45804 2.50806 
6.63104 4.332 4.51248 3.51492 0 ]xsh
225.545 625.786 mo
(I/O options making it extremely \257exible in )
[2.22301 2.57452 5.75694 2.50806 4.52203 4.51248 2.75499 2.05196 4.52203 4.51248 3.45804 2.50806 
6.63104 4.33203 4.16095 2.05194 4.51248 4.51248 2.50806 2.05194 2.755 2.50806 4.16095 3.80957 
2.755 2.75497 4.16098 6.63104 4.16095 2.05194 3.62897 2.50803 4.51248 4.16095 3.80957 2.05194 
4.51251 2.05194 4.16095 2.50806 2.05194 4.3985 0 ]xsh
225.545 638.786 mo
(supporting different sensors, A/Ds, radios, etc. )
[3.45805 4.51247 4.51248 4.51247 4.52205 2.755 2.75499 2.05196 4.51248 4.51248 2.50806 4.51245 
2.05197 2.57452 2.57452 4.16095 2.755 4.16095 4.51248 2.755 2.50806 3.45801 4.16098 4.51248 
3.45804 4.52203 2.755 3.10654 2.04257 1.98557 5.396 2.57452 5.396 3.10654 2.04257 2.50806 
2.58398 4.332 4.51248 2.05194 4.52203 3.10657 2.04254 2.50806 4.16095 2.755 3.62894 1.92856 
0 ]xsh
225.545 651.786 mo
(These I/O features include I)
[3.80945 4.51248 4.16095 3.45804 4.16096 2.50804 2.22301 2.57452 5.75694 2.50806 2.57452 4.16095 
4.332 2.755 4.51248 2.755 4.16095 3.45804 2.50806 2.05194 4.51248 3.62894 2.05197 4.51248 
4.51245 4.16095 2.50806 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: RCOBAA+Frutiger-Light Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /RCOBAA+Frutiger-Light def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1988, 1990 Adobe Systems Incorporated.  All Rights Reserved.Frutiger is a registered trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Light) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
def
/UniqueID 27196 def
/FontBBox {-152 -216 1000 911} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 -0 698 710 510 522 750 762] def
/OtherBlues [277 284 388 396 -216 -210] def
/BlueScale 0.0479583 def
/StdVW [63] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/two <1C60D8A8C9B7EF325757149415F1DA577098ABC966E5917836D1C2CEF6
74D76862E58C1FB2B3C6D697F3E6D27B5DD07B1C21FAC687E4FBBA349F0009FF
CF1D932BB7A9ECA6A6D1F82C0F69E735A674204561BB0427E0C8F7> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLK+Frutiger-Light /RCOBAA+Frutiger-Light findfont ct_VMDictPut
/JTSFLK+Frutiger-Light*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
JTSFLK+Frutiger-Light nf
JTSFLK+Frutiger-Light*1 [5.5385 0 0 -5.5385 0 0 ]msf
322.595 648.623 mo
(2)sh
JTSFLJ+Frutiger-LightCn*1 [9.5 0 0 -9.5 0 0 ]msf
325.752 651.786 mo
(C, 2 Synchronous )
[4.86401 2.04257 2.50806 4.57895 2.50806 4.16095 3.62894 4.51248 3.62897 4.51248 2.75497 4.52206 
4.51248 4.52203 4.51248 3.34402 0 ]xsh
225.545 664.786 mo
(Serial Ports \(SPI\) one of which is dedicated to )
[4.16095 4.16095 2.755 2.05194 4.332 2.05196 2.50806 4.16096 4.52206 2.75497 2.755 3.45807 
2.50803 2.57455 4.16095 4.51245 2.22302 2.57452 2.50806 4.52203 4.51248 4.16095 2.50806 4.52203 
2.57452 2.50806 6.26996 4.51248 2.05194 3.62897 4.51245 2.50806 1.95697 3.36304 2.41306 4.51248 
4.16095 4.51245 2.05197 3.62894 4.33203 2.755 4.16095 4.51245 2.50806 2.755 4.40802 0 
]xsh
225.545 677.786 mo
(the radio, 3 high speed UARTs, GPIOs, SDIO, )
[2.755 4.51247 4.16095 2.50806 2.584 4.332 4.51248 2.05194 4.17056 2.04254 2.50806 4.67395 
2.50806 4.51248 2.05194 4.51248 4.51248 2.50803 3.45807 4.51248 4.16095 4.16095 4.51248 2.50806 
5.21555 5.396 4.43649 4.16095 3.10657 2.04254 2.50806 5.74753 4.51248 2.22299 5.75693 3.10657 
2.04254 2.50806 4.16095 5.396 2.22302 5.32947 1.92853 0 ]xsh
225.545 690.786 mo
(USB client and host, AC97 and I)
[5.56705 4.16095 4.864 2.50806 3.62895 2.05196 2.05196 4.16095 4.51248 2.755 2.50803 4.332 
4.51248 4.51248 2.50806 4.51248 4.52203 3.45804 2.755 2.04257 1.98553 5.22501 5.21552 4.67398 
4.67395 2.50806 4.332 4.51248 4.51248 2.50806 0 ]xsh
JTSFLK+Frutiger-Light*1 [5.5385 0 0 -5.5385 0 0 ]msf
339.838 687.623 mo
(2)sh
JTSFLJ+Frutiger-LightCn*1 [9.5 0 0 -9.5 0 0 ]msf
342.994 690.786 mo
(S audio )
[4.16095 2.50806 4.332 4.51248 4.51248 2.05194 4.40805 0 ]xsh
225.545 703.786 mo
(codec interfaces, a fast infrared port, PWM, )
[3.62895 4.52205 4.51247 4.16095 3.62895 2.50806 2.05196 4.51247 2.755 4.16095 2.755 2.57452 
4.332 3.62897 4.16095 3.10654 2.04254 2.50806 4.332 2.50806 2.57452 4.33203 3.45804 2.75497 
2.50806 2.05197 4.51248 2.57452 2.58398 4.33203 2.75497 4.16095 4.51248 2.50806 4.51248 4.52203 
2.755 2.755 2.04257 2.50803 4.51248 7.505 7.14404 1.92856 0 ]xsh
225.545 716.786 mo
(a Camera Interface and a high speed bus )
[4.332 2.50806 5.21552 4.332 6.63106 4.16095 2.584 4.332 2.50806 2.22299 4.51248 2.755 
4.16095 2.755 2.57452 4.332 3.62894 4.16095 2.50806 4.33203 4.51245 4.51248 2.50806 4.332 
2.50806 4.51245 2.05197 4.51248 4.51245 2.50806 3.45807 4.51248 4.16095 4.16095 4.51248 2.50806 
4.51245 4.51248 3.34406 0 ]xsh
225.545 729.786 mo
(\(Mobile Scaleable Link\). The processor also )
[2.57452 7.14406 4.52203 4.51248 2.05196 2.05194 4.16095 2.50806 4.16095 3.62897 4.332 2.05194 
4.16095 4.332 4.51248 2.05194 4.16095 2.50806 3.80957 2.05197 4.51245 4.16095 2.57455 2.04254 
1.98557 3.80945 4.51248 4.16095 2.50806 4.51248 2.75497 4.52206 3.62894 4.16095 3.45807 3.45804 
4.52203 2.755 2.50806 4.332 2.05197 3.45804 4.40805 0 ]xsh
405.739 274.312 mo
(supports numerous timers as well as a real )
[3.45804 4.51248 4.51248 4.51248 4.52203 2.755 2.755 3.45804 2.50806 4.51248 4.51245 6.63107 
4.16095 2.75497 4.52206 4.51245 3.45807 2.50806 2.755 2.05194 6.63104 4.16095 2.755 3.45804 
2.50806 4.332 3.45807 2.50806 6.26996 4.16095 2.05194 2.05194 2.50806 4.33203 3.45801 2.50806 
4.33203 2.50806 2.755 4.16089 4.33203 1.93799 0 ]xsh
405.739 287.312 mo
(time clock. The PXA271 includes a wireless )
[2.755 2.05194 6.63104 4.16095 2.50806 3.62897 2.05194 4.52203 3.62897 4.16095 2.04254 1.98557 
3.80945 4.51248 4.16095 2.50806 4.51248 5.04446 5.396 4.67395 4.67398 4.67395 2.41306 2.05194 
4.51248 3.62897 2.05194 4.51245 4.51251 4.16095 3.45801 2.50806 4.33203 2.50806 6.26996 2.05194 
2.755 4.16095 2.05194 4.16095 3.45807 3.34406 0 ]xsh
405.739 300.312 mo
(MMX coprocessor to accelerate multimedia )
[7.14404 7.14407 5.04446 2.50806 3.62894 4.52206 4.51248 2.75497 4.52206 3.62894 4.16095 3.45807 
3.45804 4.52203 2.755 2.50806 2.755 4.52203 2.50806 4.332 3.62894 3.62897 4.16095 2.05194 
4.16098 2.58398 4.332 2.755 4.16095 2.50806 6.63104 4.51251 2.05194 2.75494 2.052 6.63104 
4.16095 4.51245 2.052 4.21796 0 ]xsh
405.739 313.312 mo
(operations. It adds 30 new media processor )
[4.52203 4.51248 4.16095 2.58401 4.332 2.755 2.05194 4.52203 4.51248 3.10654 2.04257 2.50806 
2.22299 2.755 2.50806 4.332 4.51248 4.51245 3.45807 2.50806 4.67395 4.67395 2.50806 4.51248 
4.16095 6.26996 2.50806 6.63104 4.16092 4.51251 2.05194 4.33203 2.50806 4.51245 2.755 4.52203 
3.62897 4.16095 3.45807 3.45801 4.52203 2.64099 0 ]xsh
405.739 326.312 mo
(\(DSP\) instructions, support for alignment and )
[2.57452 5.396 4.16095 4.51248 2.57452 2.50806 2.05194 4.51248 3.45804 2.755 2.755 4.51248 
3.62894 2.755 2.05194 4.52206 4.51248 3.10654 2.04254 2.50806 3.45804 4.51248 4.51248 4.51248 
4.52203 2.755 2.755 2.50806 2.57452 4.52203 2.75497 2.50806 4.33203 2.05194 2.05194 4.51251 
4.51245 6.63104 4.16095 4.51251 2.755 2.50806 4.33197 4.51245 4.3985 0 ]xsh
405.739 339.312 mo
(video operations and compatibility with Intel )
[3.819 2.05194 4.51248 4.16095 4.52203 2.50806 4.52203 4.51248 4.16095 2.58401 4.332 2.755 
2.05194 4.52203 4.51248 3.45804 2.50806 4.33203 4.51245 4.51248 2.50806 3.62894 4.52206 6.63104 
4.51248 4.332 2.75497 2.05197 4.51248 2.05194 2.05194 2.05194 2.755 3.62897 2.50806 6.26996 
2.05194 2.755 4.51245 2.50806 2.22302 4.51245 2.755 4.16095 1.93793 0 ]xsh
405.739 352.312 mo
(MMX and SSE integer instructions. For more )
[7.14404 7.14407 5.04446 2.50806 4.332 4.51248 4.51248 2.50803 4.16095 4.16095 4.332 2.50806 
2.05197 4.51248 2.75497 4.16098 4.51245 4.16095 2.755 2.50806 2.05194 4.51248 3.45804 2.755 
2.755 4.51248 3.62894 2.755 2.05194 4.52209 4.51245 3.10657 2.04254 2.50806 3.62897 4.52203 
2.755 2.50806 6.63104 4.52203 2.755 4.04694 0 ]xsh
405.739 365.312 mo
(information on the PXA271, please refer to )
[2.05194 4.51248 2.57452 4.52203 2.755 6.63104 4.332 2.755 2.05197 4.52203 4.51248 2.50806 
4.52203 4.51248 2.50806 2.755 4.51245 4.16095 2.50806 4.51248 5.04446 5.396 4.67398 4.67395 
4.67398 2.04254 2.50806 4.51245 2.052 4.16089 4.33203 3.45807 4.16095 2.50806 2.755 4.16095 
2.57452 4.16095 2.755 2.508 2.755 4.40808 0 ]xsh
405.739 378.312 mo
(the Intel/Marvell datasheet.)
[2.755 4.51248 4.16095 2.50806 2.12799 4.41748 2.65997 4.06598 1.95694 2.47952 7.04907 4.237 
2.65997 3.724 4.06595 1.95694 1.95697 2.41306 4.41745 4.237 2.66 4.237 3.36307 4.41748 
4.06592 4.06598 2.65997 0 ]xsh
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.357 .722 .804 colr
true set_gvm
%ADOBeginSubsetFont: TFSAAA+OmniBook AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
JTSFLI+OmniBook dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/ampersand <1C60D8A8C9B60355FDA9B44A6762A6709116A47E7A5813D2D2B5
86CA80234831C4183D90A16AC9C0F3A8FB7ACCB6F102787C7A58E605504153FD
AABBCE7D8191547267EC9194E32A026904065B5A39CA69E9006C7FCC5869753A
70707C2EE1EDC9EE201F0F32B729F7D322CA6986D0DDDC0062A955C74354F5E2
C0490B0BC6F9ACDBB4C3A0A9BB118905BEA9A403F83748FC09F1A16023A23E23
2A001D91FEFC92B4761B94EB9182> |-
/A <1C60D8A8C9B61400BCF44374707120EBB323177EAFBAC8A4ED6DBF2C9D63
E92526784183CD830D981A35D88F94ED46152BA4359739B9C23A9FFBDDD1E188
574F50> |-
/R <1C60D8A8C9B7C63D8BF7B81294989FF4261455DE51C3B99487260FA0593E
BA4CE4F7BF30CED7295B984D6514F4B15A83499C51F8646C4C30653F97F0D1EA
90FF75279899527FC054088CE6CE5A05E6FCAC1904653D79754F10745FEFCB53> |-
/a <1C60D8A8C9B78D3420968B55E0FF531060947E599E4C5C5A3FB8BF75F44B
2BCA89A32C15246CF3C61A352552059E67AB3BAB413D0E3B781C89E7A2D3FE8A
576A2FDF1AE6278C8B1D401629B7F0FE9B0292EBA9C24DA45D2273F4CD1BE57A
8848F9FE9A46C71E0538F482E0CBC06ECF6E3D05F0989198A49810B7D70CA332
C01753DDDDA996E03876> |-
/d <1C60D8A8C9B7E2CEAD5FF341B1404CC1CEC7754E359FA31CA042FE398EF1
CF6538C526EABBDF49169FB5D66EE33464FD2C37511E684DE0AA9EC85708500F
069BA6ED9B6539E4BC9C0B009DD26A2240A03D3B3D91085B5D94D63C67E9BAA2
044ED07896DB> |-
/i <1C60D8A8C9B8BBE66BF2C828EF0C274862D98A0389077713C4C03A1D3EEC
EE4A21EAA33D913F27AB8B2534987AD0FD7EAB838F011F989551032256> |-
/n <1C60D8A8C9B78E05993C4FD1C3DAEE37E655DC7CC22DDAB4A67695E6AABB
6F4F739AEF4B76F47D05182DD24E38BD9F06792B9518D429A80535AC9B578840
6ECFC3C60383543B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLI+OmniBook /Encoding get
dup 38 /ampersand put
dup 65 /A put
dup 82 /R put
dup 97 /a put
dup 100 /d put
dup 105 /i put
dup 110 /n put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLI+OmniBook*1 
[32{/.notdef}rp /space 5{/.notdef}rp /ampersand 11{/.notdef}rp /two 14{/.notdef}rp /A 
7{/.notdef}rp /I 6{/.notdef}rp /P /.notdef /R 14{/.notdef}rp /a 
/.notdef /c /d /e 3{/.notdef}rp /i 3{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
JTSFLI+OmniBook nf
JTSFLI+OmniBook*1 [14 0 0 -14 0 0 ]msf
405.739 403.512 mo
(Radio & Antenna)
[8.75 7.75601 8.358 2.87003 8.7641 4.27011 10.444 4.27011 10.71 7.74191 5.33395 7.966 
7.74191 7.74191 0 ]xsh
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: RCOBAA+Frutiger-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLK+Frutiger-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLK+Frutiger-Light /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLK+Frutiger-Light*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 205{/.notdef}rp]
JTSFLK+Frutiger-Light nf
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
515.864 403.512 mo
( )sh
JTSFLJ+Frutiger-LightCn*1 [9.5 0 0 -9.5 0 0 ]msf
405.739 416.512 mo
(The Imote2 uses the CC2420 IEEE 802.15.4 )
[3.80945 4.51248 4.16095 2.50806 2.22299 6.63104 4.52206 2.75497 4.16095 4.67398 2.50806 4.51245 
3.45807 4.16095 3.45804 2.50806 2.755 4.51248 4.16095 2.50806 5.21552 5.21552 4.67398 4.67395 
4.67395 4.67398 2.50806 2.12799 4.237 4.237 4.237 2.41302 4.67395 4.67401 4.67395 2.39404 
4.67395 4.67401 2.39404 4.55994 0 ]xsh
405.739 429.512 mo
(radio transceiver from Texas Instruments. The )
[2.58398 4.33203 4.51245 2.05197 4.52203 2.50806 2.755 2.58398 4.332 4.51248 3.45804 3.62897 
4.16095 2.05194 3.819 4.16095 2.755 2.50806 2.57452 2.755 4.52203 6.63104 1.98553 3.63846 
4.16098 3.80957 4.33197 3.45807 2.50806 2.22299 4.51248 3.45807 2.755 2.755 4.51245 6.63104 
4.16095 4.51245 2.755 3.10657 2.04254 1.98553 3.80951 4.51245 4.04694 0 ]xsh
405.739 442.512 mo
(CC2420 supports a 250kb/s data rate with )
[5.21552 5.21555 4.67395 4.67395 4.67398 4.67395 2.50806 3.45804 4.51248 4.51248 4.51245 4.52206 
2.755 2.75497 3.45807 2.50806 4.332 2.50806 4.67395 4.67395 4.67398 4.16095 4.51245 2.57452 
3.45807 2.50806 4.51245 4.33203 2.755 4.33197 2.50806 2.58398 4.33203 2.755 4.16095 2.50806 
6.26996 2.05194 2.755 4.3985 0 ]xsh
561.318 442.512 mo
( )sh
405.739 455.512 mo
(16 channels in the 2.4GHz band.)
[4.67395 4.67398 2.50803 3.62897 4.51248 4.332 4.51248 4.51245 4.16098 2.05194 3.45804 2.50806 
2.05194 4.51248 2.50806 2.755 4.51248 4.16095 2.50806 4.67395 2.39404 4.67398 5.74753 5.396 
3.62894 2.50806 4.51248 4.33203 4.51245 4.51245 0 ]xsh
405.739 475.712 mo
(The Imote2 platform integrates a 2.4GHz )
[3.80945 4.51248 4.16095 2.50806 2.22299 6.63104 4.52206 2.75497 4.16095 4.67398 2.50806 4.51245 
2.05197 4.332 2.755 2.57452 4.52203 2.755 6.63104 2.50806 2.05194 4.51248 2.755 4.16095 
4.51248 2.58398 4.33203 2.75497 4.16098 3.45801 2.50806 4.33203 2.50806 4.67395 2.39404 4.67395 
5.74756 5.396 3.51495 0 ]xsh
405.739 488.712 mo
(surface mount antenna which provides a )
[3.45804 4.51248 2.755 2.57452 4.332 3.62897 4.16095 2.50806 6.63104 4.52203 4.51248 4.51248 
2.75497 2.50806 4.332 4.51248 2.755 4.16095 4.51248 4.51248 4.332 2.50806 6.26996 4.51245 
2.05197 3.62894 4.51248 2.50803 4.51251 2.755 4.52203 3.81897 2.052 4.51245 4.16095 3.45807 
2.50806 4.21796 0 ]xsh
405.739 501.712 mo
(nominal range of about 30 meters. For)
[4.51248 4.52203 6.63104 2.05194 4.51248 4.332 2.05197 2.50803 2.58401 4.332 4.51248 4.51248 
4.16095 2.50806 4.52203 2.57452 2.50806 4.332 4.51248 4.52203 4.51248 2.755 2.50803 4.67398 
4.67395 2.50806 6.63104 4.16098 2.755 4.16095 2.75494 3.10657 2.0426 2.508 3.8855 4.42706 
0 ]xsh
543.145 501.712 mo
( )sh
405.739 514.712 mo
(longer range a SMA connector can be )
[2.05194 4.52206 4.51245 4.51248 4.16095 2.755 2.50806 2.58398 4.332 4.51248 4.51248 4.16095 
2.50806 4.332 2.50806 4.16095 7.14407 5.396 2.50806 3.62894 4.52203 4.51248 4.51248 4.16095 
3.62894 2.755 4.52203 2.755 2.50806 3.62897 4.33203 4.51245 2.50806 4.51245 4.047 0 
]xsh
405.739 527.712 mo
(soldered directly to the board to connect to )
[3.45804 4.52206 2.05194 4.51248 4.16095 2.755 4.16095 4.51245 2.50806 4.51248 2.05194 2.755 
4.16095 3.62897 2.755 2.05194 3.62897 2.50803 2.755 4.52206 2.50803 2.755 4.51248 4.16095 
2.50806 4.51248 4.52203 4.33203 2.75497 4.51248 2.50806 2.755 4.52203 2.50806 3.62897 4.52203 
4.51251 4.51245 4.16095 3.62897 2.755 2.50806 2.755 4.40802 0 ]xsh
405.739 540.712 mo
(an external antenna.)
[4.332 4.51248 2.50806 4.16095 3.80957 2.755 4.16095 2.755 4.51245 4.332 2.05197 2.50806 
4.332 4.51248 2.75497 4.16095 4.51248 4.51248 4.332 0 ]xsh
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.357 .722 .804 colr
true set_gvm
%ADOBeginSubsetFont: TFSAAA+OmniBook AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
JTSFLI+OmniBook dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7A3FA37E79B995B8EB3DB6C54808241958B6A4BA43C7020F0
1FCE9C06CA430062D95AD9AF96281C01FF73ABC6C7949F5DAE0CE0863742E359
734AF20C60B43B22CEDBFD84E17E5AE52FB449C814CDE07EC5F49DCA98E18B1E
3FD027D96B379DDF518E43E0CDB38AA6610472578EDE539C759411ADB5> |-
/l <1C60D8A8C9B8BBE66A01DB73F4C5B22E5F9D0776D51B95B8D354E0819F94
A1> |-
/p <1C60D8A8C9B7E1F86E8F1F2320628ECEAC7B24AAC62D7973AD2BABCA120E
9A9D44C999D5B78088084BF4582F1C06D3D78FE5DF01A7C5C088268994EA4800
6B2726AA2145BD2E38AB8E6E498DDF5657A1ED2779BEA370521FBF36B5AE6BDC
999DF752> |-
/u <1C60D8A8C9B78C66693755D6F429BD81180BD1AB9EEE3FEE924056980FA6
0DCF129E2D4C50FFA15F8CD8C9903CA3AB86CCDC5E081E75950D95FA105FFC43
4C721E4DD4715D> |-
/w <1C60D8A8C9B6838275115303F6FD6F39A79FD5804B839B48A3552D9F5513
F2D6A4F9B179B85AC606BBACC2748B04C61C42152C27BF027A54E3C7649601F7
319D0B36543559C3A767> |-
/y <1C60D8A8C9B79D2DA7119ED41142DF50F7CA3432136AF2A02D554D756D72
6A039C2681625885685ED709D76DD0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLI+OmniBook /Encoding get
dup 83 /S put
dup 108 /l put
dup 112 /p put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLI+OmniBook*1 
[32{/.notdef}rp /space 5{/.notdef}rp /ampersand 11{/.notdef}rp /two 14{/.notdef}rp /A 
7{/.notdef}rp /I 6{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp 
/a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /.notdef /w /.notdef /y 134{/.notdef}rp]
JTSFLI+OmniBook nf
JTSFLI+OmniBook*1 [14 0 0 -14 0 0 ]msf
405.739 565.912 mo
(Power Supply)
[7.97989 8.58212 12.0539 7.784 5.04001 3.90613 7.26596 7.58789 8.19009 8.19012 2.68799 0 
]xsh
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: EOJBAA+TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /EOJBAA+TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLL+TimesNewRomanPSMT /EOJBAA+TimesNewRomanPSMT findfont ct_VMDictPut
/JTSFLL+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
JTSFLL+TimesNewRomanPSMT nf
JTSFLL+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf
492.594 565.912 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: RCOBAA+Frutiger-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLK+Frutiger-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D088C23DC0C46F745DD204262AB3CFE663CF9A> |-
/colon <1C60D8A8C9B854D0FBE67F60F0A48F6C6F91EA004862D81E4ED6A123
3DAB20AF67DFED855CDA968CEA80573857E2E49619C58B> |-
/B <1C60D8A8C9B7EF325757149A02452181435B027E149F59AC1E9C11898C20
77786DC58A2D741744C651A686CC0B3CA80B844296D2AC8288728690A2687249
78B8639D4856D0249FE44DD8EBD8BEEE24A755440BF59C06B18F5C38B25C332B
53D1148E8CD5D416A71B4BCF4D84EF173BB297D3584C7C121B2EC57FFFEC10AD
2B3A6CD9E91580D6F6774D39DB2F18C0115ECFA91EEC1D021962220E86E39137
709DF9EF> |-
/C <1C60D8A8C9B64EDFFAEC450F0774AEF4B9670CCD1EB69EBC5ECAE719C2CB
73AA367AE2D84EB1CDBC34278B95292BBD52AC6D1F2B6C17E268F82A754913DF
00CC7A68F31C47ED0E071328DC9B17552D9D3A58B93C6142FB1C1C36B68E25F5
A4985B0546> |-
/I <1C60D8A8C9B88C082599D5E8B421D933077987557AC14AC94A5CE6A77E> |-
/T <1C60D8A8C9B7A73DEE9439F8557EB85B45E362CEF761B0E82D8BAFA85D9D
53F56FDB93A9C3D209B1AD4B> |-
/a <1C60D8A8C9B7A73DC5666756B7CB45604480AD7CC2425DE195AACB25AADA
895F38090DE3907B5E8386BFBE35C2166221CAFFADD662E4B8ED9FA7F3D86ECF
60E8D9F9D58B712C9AB7E61C6F3932AF288D80BFAAFC530036D020B590EE7E95
A9630881FDF1534D619F25CAB76ABB8951DE72D64B0F8BB987CB0D773635E0EF
2DD366DF002E999443EDA474A47000> |-
/b <1C60D8A8C9B7EF325725C52AB0699EFFF3FEF1534A3AF6B70C0FC696F881
857ACB7429B4BCAA4D4488DE72558186294E2CB4F405690465273FD87BDE40EF
41492D791A52C2E57D42CF35EF1D450AAA6944E2CBEE46DD6E19F4277BDA1E70
39E3F664D9E15B3F9FF7993F0B0ADAACB32876474A> |-
/c <1C60D8A8C9B77FE2C128DB6F57DCD99435E014F99FD3862458F726F5E453
1D987624C721A62399224EFCE1A0AB71B2DE3269A8745F24D80759D99E84E847
BAFBB4F7E21984CB4AABF37182C8FB9AD873DB17465C5BF3163E7E0E5AC4C0D2
F9> |-
/d <1C60D8A8C9B7EF32A3182117895D234EEBFAD28ADE27ADBCB31381336DA4
850A737EA4C1DB44C8B2E0B4B494FBC7747AA48D3A29AD87F653967FC60E6143
B1F91132841191708B0F53A2A346BE4A1852B3C453E195BD42713E4889EF2451
6A7248C918C236DDD56BFE62672453DC16A79047BFCE5829604ABB7B1FF2C55F
BA7740F5789A76C317> |-
/e <1C60D8A8C9B7A73D31BD492600143F6F2009CFD8FC3D88ED58E530271414
3D87027B2D526C46C953580FEC49986B01F1768E32BE6FC6E3DEFCB4B4D0BC0C
8D3ACEC58A0393515031964AE0C323DE580A276D7D89B5A495061FDCE49BD60E
34173BE9> |-
/g <1C60D8A8C9B7EF3227B024A1FD4CE2202A1AC5AA6D24F25F4D3A5DB2D924
23A6CC7A99043BB2DC97D6C54445823B5F7E72148FFEA795BF378493268BC1BE
30BADA73E8CAAD5FF69C6D9AEDADCF270FB0EA1C86BA4CAE017F12F954AF2195
6892D95C77E360016F5F1634E91E8423A08465E29A56C06C6B7805FDB43E9C4A
1661BE127DDCD916799F84D8BAD4927EE365B59D900F24CB9A522ECAFE10EBC6
078D7147C37BE1EB99A5B7C0E5045FEE2EA6A68A2B705B3149765B75F16F> |-
/h <1C60D8A8C9B7EF327C10274A36A58B97BDDA67E14EBD3B4F978EBA1E5347
7461F980230E07E5D4B4088D02C03DC08D5162C81A40946C8F1FC9112134FB21
8041EC391FC9D7D9DE3651BDCA> |-
/i <1C60D8A8C9B88C082599D5E95B5A5C1C1C358965D2EAE0E54FC66607F391
8F8F031ECA34FDB2506E1B99E832A2D7A59E052AACCA17DCB6> |-
/l <1C60D8A8C9B88C082599D5E87882DEE05E630707F3AC923B1FA835A375> |-
/m <1C60D8A8C9B6B41C96510E68B7E51AD334B8746F6C8352322ED5D7055C22
6E92F38CDF788222B114D02F42870E90D0AFE2A4B52BA8E291A3FC4806336DD8
72221FDE1AE45E204F67F8B8575A581C3B8617761F8270546F1A5C5980455B31
9041EAC95294897F2E2F9FD144F69E2FDAE93DCEF5DCC045F86B8C6D0E194F10
04B60B19143ACC06B33FA25055B57BE858CCC1E088D8874F3D65EFCC6B> |-
/n <1C60D8A8C9B7EF327C10274A36A58BB468A350F2040E94FF23B7CECDCD9A
3201C4A4C1F329CB15BC1DF7B13DBFFA989BB585CA752F08B252AB06193C82D8
173B8CC269E6D09441E343D60F6F86D2B3B5A3C0738E4977> |-
/o <1C60D8A8C9B7EF32A3182117895D23046E1C275E0D2135DE735AEB8F2A42
E45DA7B6F611BB84A268CCA558BA2239B3A1F2EEE8D185F671DA25F7174F6D7A
FDEE1D9F667707AC124B5C1E25778C4FDF53F31C3E3845C6CADF9BBF52> |-
/p <1C60D8A8C9B7EF32278DDB15D88D3CF3B23BB94EC6007E05C2184FB2E63F
8207BA287BF54B27E3312FD9796B5D3A39C57F36599CE185DED956D975574BF9
B6C1B69790B0DC9A42521AEDCA04F7DEE4434C63199FA8DEA4FC2E8C0F561911
999F9D2BA2A566EBCEF9011C718742E27DC53FEAAB6CB19B984DA38494286DDD
C52176EBF2267C1B093D> |-
/r <1C60D8A8C9B81F2C6DADD0309A3974E79BD7157FF98ADE4C5D38B22FF68F
387928E45C6350DDD624EB4533A15E3D7EE0A4B00A440536FE90BBBA98883136
092A76C9C84D812991E24B23FB33262F85E753846B9D7969F1> |-
/s <1C60D8A8C9B7361F8A9A8B395E46829E2B8E1D070013909C73B5A0942869
A11BD35A89E5FCE0C3FFC69ADCF3016198749F16C125845B5496B5E55E1622AC
E184AE3C41193E400FFFE92C13D48ADC185EA6783EA913F2E130E6736B88C2FD
EFFB3ABB37F209E635666E5083728B5A809668B28D67AB08500ED06715FE> |-
/t <1C60D8A8C9B81F2CB2BFF293FDBA547343D8DBEAA55319FF088195752966
8EDED84B25B77F2036FA995BCB5C0C0C7824B55877E926954A45B336EBF64771
05E6427573AE3FE37E1A67C572E7585F0A09EF> |-
/u <1C60D8A8C9B7EF32A318211773A8560631426405972664402CA410FB37B0
52AFF8A368AF316E661DF425CDBA485D0F8E710773E00603E4EB8D65399F15E3
A538B6E34F17462A1528DEB447800CCE5FE09BC2A86EE8AF04B0F1> |-
/v <1C60D8A8C9B77FE2B25A88E3548892D1A85D87E1D67E4344969865ECE6ED
7AB55946EF23C7F94A725C00B3D7B9E1945C0F> |-
/w <1C60D8A8C9B6FF8689089F6D7554ED1487F4F740309950B9EE6EE7B7A8B4
23226063575B47A86BD43C074540429A7F5FE88B7F8E506A17B2F65351301275
303B66F892CCE55AACC0D04786B697D58CDFA2F1B0C8AD40> |-
/y <1C60D8A8C9B77FE2C21D3E71499C61F8191F542AFA924880104AD72A66BD
09EB5765F676C77AFACEACABA766E5E7E72AE1743C7AB85ACB57F79659EC31CA
74EAAB92E48BC87102F985DBAE445A70E7B1FE472CED8C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLK+Frutiger-Light /Encoding get
dup 46 /period put
dup 58 /colon put
dup 66 /B put
dup 67 /C put
dup 73 /I put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLK+Frutiger-Light*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 3{/.notdef}rp /two 7{/.notdef}rp /colon 
7{/.notdef}rp /B /C 5{/.notdef}rp /I 10{/.notdef}rp /T 12{/.notdef}rp 
/a /b /c /d /e /.notdef /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}rp]
JTSFLK+Frutiger-Light nf
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
405.739 578.912 mo
(The Imote2 can be powered by various )
[4.75 5.28201 4.75 2.64099 2.10901 7.91342 5.28198 3.16342 4.75 5.28201 2.64099 4.21802 
4.75 5.28198 2.64102 5.28198 4.75 2.64099 5.28201 5.28198 7.39102 4.75 2.99243 4.75 
5.28198 2.64099 5.28198 4.21802 2.64099 4.21802 4.75 3.16345 2.10895 5.28204 5.28198 3.69556 
0 ]xsh
405.739 591.912 mo
(means:)
[7.91342 4.75 4.75 5.28201 3.69556 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: CFRBAA+Frutiger-Bold Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /CFRBAA+Frutiger-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1988, 1990 Adobe Systems Incorporated.  All Rights Reserved.Frutiger is a registered trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 58 /colon put
dup 66 /B put
dup 80 /P put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 114 /r put
dup 116 /t put
dup 121 /y put
def
/UniqueID 27216 def
/FontBBox {-166 -222 1000 935} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 -0 698 710 515 527 750 762] def
/OtherBlues [276 282 384 392 -222 -210] def
/StdVW [140] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
12 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/colon <1C60D8A8C9B854D0FBD3B9904D9F7582F3681233CCB4DC0DBE4F5EC1
A09AAF921AD603AFA7FE2F850775981FD3B030E15F64709F1E29593C74B555> |-
/B <1C60D8A8C9B7D8BE6A286F77872449D9F359D20F93FE188D8B1584199B42
15025B0C4000BE5E6C325BF34D3B1193019A442ACDE29B4C95BCB431EC1AFCBF
1C2556D697EAFA8AC2AA4E01D1F5A52F58C7B6FD82772B1AE5FBC524565C6D3B
57F0A4C4BE6A19BFE208E8E2BDDFE9D58A1CBA27E5137482B5D0C539641548F4
14097EF95138B1063F61CB087EF5F8CE9B9F0BEF7B8BEEE364AADD23415BBEA5
5AD17BD04E71C477EAA303D8> |-
/P <1C60D8A8C9B7EF327C102745CB7218CB3CA3582939CB53F3DFE6305F78F3
B85252C7786E45ECF9E103E1BC1C9F22BEEAF7E1BD6064BE8C863B43542A8F40
2034DC08662DC541377814EED8B9795C87B6CF3FA6BF> |-
/a <1C60D8A8C9B7EF3257710D805FCBF9EAA47A648309E8D0E039DC1E8D2318
C5DF760B51EF14D415F50880838759F5E4C02341483EAFA36DF82D6500DBECA0
11050BC74656F2EC7D390EB3450F0457BC0F40F8BFEB2F6652C9B6CA8504E263
4F1E2FB3AD726C34181B07ACF368A7D52C82F8093E6C3135B31093E2C5FCA81C
82DE852A78DEBE0EFC2EBF2FD08215A6D690F4177AD042DA51AE791E35B1D098
9B8A6F56412D202AB1CF706B0E772C54C75E86112636E09F0226320696A0DA2F
1A3BF65B56A267082B2E4E73408BBAED54> |-
/e <1C60D8A8C9B7EF32A334B5DE2C42D0F02AA3245E4F60605B088816C3AB46
6055F7B3ECF7742807CF90C977FA1F942ACE4D42471D8BBCC6CA80515F564D3C
F4F1A14592D2113D0D0448E1AC6E168AE0FBD310FAF29C1DBB2889EF79062272
D8FC2F299FCD11> |-
/i <1C60D8A8C9B854D0A3953AFCF18F5CDCE5A083708C698BE0EB9E338CE0E5
F8F18DAE651159559CB2D1D6FDD656E5295BC70F847C43AA9AD196DD92B86253> |-
/m <1C60D8A8C9B59F85DE72AB938DF55B8A3F8EC68E00C6EDC9EF904FDB8FEB
013FF2B37A3002C69DD85FB30EC5BE12BF6D4DF256527FF00A31101983C67E24
EC4014FDCC5E6F55E88D511EA5796CFFE29D45ADFAF71522316CF739F378D746
9F6B951CC358A19D380D6F1AF32889B5CEA49228CE78878ADD406B1B4DB5F9BB
8095EA46> |-
/r <1C60D8A8C9B7361F55E947F9518BA2122389CA31C4D8342941005B940237
97E0371F7340186242100425078DEB66F18AF089730A3FD888FB76FB36FD2604
040263CBE2F1E35D8BAC3486211F15FE238EA235ABBA8ABBEB955431912698B0
49BEA018D8FBF94CE175A1310E60AFDA0D84> |-
/t <1C60D8A8C9B7361F8AA8D526ECFC163D40864CB20801B233A892DBD04529
FFFBE25C9C21082F6AAB713A161CA608081BE0DFD772E26610B8E0EF674358F5
8ECDE6C799F9CF24BD8C0AE949B705E2812C6F2E1EB29B660B84B22FE4E965D3
41AA4DACE451C269589E> |-
/y <1C60D8A8C9B7EF3227AEBA61232AC6F1E1A3094416655E9DA2E7845F0240
76D6506B52FA2B20BF3DE539DE59CAA8839F1B2413C1AF275B68921C7D7A6E1A
5E05653AD333DD5FE524849F77A90FBD0846560C> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLM+Frutiger-Bold /CFRBAA+Frutiger-Bold findfont ct_VMDictPut
/JTSFLM+Frutiger-Bold*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 7{/.notdef}rp /B 13{/.notdef}rp /P 
16{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 
4{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]
JTSFLM+Frutiger-Bold nf
JTSFLM+Frutiger-Bold*1 [9.5 0 0 -9.5 0 0 ]msf
405.739 612.112 mo
(Primary Battery:)
[5.28201 3.69556 2.64099 8.44559 5.28198 3.69559 5.28198 2.64099 5.80444 5.28198 3.69559 3.69559 
5.28198 3.69556 5.28201 0 ]xsh
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
478.081 612.112 mo
( This is typically)
[2.64099 4.75 5.28201 2.10898 3.69559 2.64099 2.10901 3.69559 2.64099 3.16342 4.21799 5.28204 
2.10895 4.21802 4.75 2.10901 2.10901 0 ]xsh
539.82 612.112 mo
( )sh
405.739 625.112 mo
(accomplished by attaching a Crossbow )
[4.75 4.21799 4.21802 5.28198 7.91345 5.28198 2.10901 2.10901 3.69556 5.28201 4.75 5.28198 
2.64102 5.28198 4.21802 2.64099 4.75 3.16342 3.16342 4.75 4.21802 5.28198 2.10901 5.28198 
5.28204 2.64099 4.75 2.64099 6.33655 2.99243 5.28198 3.69562 3.69556 5.28198 5.28204 7.39099 
0 ]xsh
405.739 638.112 mo
(Imote2 Battery Board to either the basic )
[2.10901 7.91342 5.28198 3.16345 4.75 5.28198 2.64099 5.28201 4.75 3.16342 3.16345 4.75 
3.16342 4.21799 2.64099 5.28201 5.28201 4.75 2.99243 5.28198 2.64099 3.16345 5.28198 2.64099 
4.75 2.10901 3.16345 5.28198 4.75 3.16339 2.64105 3.16339 5.28198 4.75 2.64105 5.28198 
4.75 3.69556 2.10901 4.21802 0 ]xsh
405.739 651.112 mo
(or advanced connectors.)
[5.28201 3.16342 2.64099 4.75 5.28201 4.21799 4.75 5.28201 4.21799 4.75 5.28201 2.64099 
4.21799 5.28201 5.28198 5.28201 4.75 4.21799 3.16345 5.28198 3.16342 3.69559 0 ]xsh
JTSFLL+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf
400.513 755.297 mo
(        )
[2.5 2.5 2.5 2.5 2.5 2.5 2.5 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: SFAAAA+Frutiger-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLG+Frutiger-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF327C10274B620E8F75AE3A1B933CEE58620190014486
5B3895489115A5B18B3C212127F58B0D6E641D321BCDC84E> |-
/seven <1C60D8A8C9B7EF327C10274AA2A74A6A2E095E7103F00CAEF7A00684
AE6502EBD0D1E1AEB929393F6D7278AB476CD5> |-
/A <1C60D8A8C9B6079F3517E07A8D7AB59C1709B62FCFE5FD0198884314308A
13504A92BC3A08036428CE0A3218E5823026BC741079247E81FBAD525C9EEFA9
C28A22D2795580E7> |-
/D <1C60D8A8C9B6079F1E35321B1BF261C5DD9752F20FBADD57CEFAA8D399DD
3C17790772140FD8E24B5918F6ACF767BD2F8C5FE5315177352F06E67748B2F6
2E4DE2332A83D2A09F05CCB4> |-
/N <1C60D8A8C9B6079F3517E074BC98D33AC495BEE29FE266E74FB2C378A7A7
CC988ACBA8515B7DED676EDC9E672F854E14BFF8E70EFA7E92F1347AD8F61AE9
D132557BFF303A6E7AD03949D51B6463CC686C9BA8B45A1D535DF9043EC306> |-
/R <1C60D8A8C9B7D8BE41A64DA547975BB297E3217E424539FAE8D1911B4DBF
BF7942C31AE9645DA2E70588464B9E576E6BD510F7482DE459FF64212FEFB116
379ABB1B37B81735188F2710647746626FBDCBC06F68A8C81561FCE58A471EC2
4309D4526CA5B1> |-
/r <1C60D8A8C9B7361F55E947F93EFB8566A6A745E54FD6B47381EAD4A33916
936C8C739BC32877116090F93E51C636F764461E4AC5086066972CB7555F37FB
F78206F97DB9F739C05F15346E5D60E78191> |-
/t <1C60D8A8C9B7361F8A8C415C3D5F63EDD82C574CAC7DCA9E54424201A6EE
C3E9A6B8ED6A35CCCE40DC1914F1ABBA814EB9F37B6D72416A52BE75CA3FC35A
C17722A9713E18D797F9AE99EA972707132A2F> |-
/u <1C60D8A8C9B7D8BE6A144CD5F07C4AD1D8324321E7754806416F30A4DBE2
558D0642F536DA8BBA0825ED431372C85B85D77F555F4D5DFE82DAA91A42AAAF
3799B294F36A7E013A33119EEF5A5778AD13C82236898E874E729E6008B9A78F
EBE8CBA2DDBB6D> |-
/v <1C60D8A8C9B7A73DEE9439F987D2DB7C9E2324C47F07D8871C2636F27314
3330A4D08C7434C015F9B5813EDD341290D0A2D5A73BCDCE12C6AF5494> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLG+Frutiger-Roman /Encoding get
dup 49 /one put
dup 55 /seven put
dup 65 /A put
dup 68 /D put
dup 78 /N put
dup 82 /R put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLG+Frutiger-Roman*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon 5{/.notdef}rp /at /A 2{/.notdef}rp /D /E /F 
7{/.notdef}rp /N /.notdef /P /.notdef /R 4{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /.notdef /e /f /.notdef 
/h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r /.notdef /t /u /v /w /x 135{/.notdef}rp]
JTSFLG+Frutiger-Roman nf
JTSFLG+Frutiger-Roman*1 [7 0 0 -7 0 0 ]msf
420.513 755.297 mo
(Document Part Number: 6020-0117-02 Rev A)
[5.05399 4.27698 3.10797 4.27698 6.22302 3.89203 4.27692 2.72308 1.94598 3.892 3.892 2.72305 
2.72305 1.94598 5.05402 4.27695 6.22305 4.27695 3.892 2.72305 1.94601 1.94598 3.892 3.892 
3.89197 3.89203 2.33093 3.89203 3.89197 3.89203 3.89197 2.33099 3.89197 3.89197 1.94604 4.27692 
3.89203 3.5 1.94598 0 ]xsh
1.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
44.921 81.026 mo
262.154 81.026 li
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.82 .827 .831 colr
@
.25 lw
340.125 55.25 mo
340.125 237.661 li
566.875 237.661 li
566.875 55.25 li
340.125 55.25 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.616 .647 .671 colr
@
82.984 732.926 mo
178.204 732.926 li
178.204 723.226 li
82.984 723.226 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: RCOBAA+Frutiger-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLK+Frutiger-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/registered <1C60D8A8C9B6D5A0DB71111ED7A97C78B7BBB8C62391687E8D4
68DD6D607317AA3D9C4701E7DDCCF8B115863D2DE66693125D4D1BD926F831D3
A33816E6C414CAAD7B6FF8A03D72AE1C0501E0BB833858C1ED221716455C8BB9
6EE306C41E24B65BAE131D1E7EBA015EA6E40ABEAF243EBDC02A78724367753A
40BEFEC7E61E51613FDE67085CA29BBFE244809BC75EFCD6E372B12F335C1C1A
3577CF589CC4F383F6FB2A54B9895558722A425A956> |-
/comma <1C60D8A8C9B854D0F877A796F99689CCFB3B46B4900A002B16B1E396
E27438> |-
/hyphen <1C60D8A8C9B81F2C3AC44A83B0710BD21654A23ECD825E2CA869AF5
54D2B> |-
/slash <1C60D8A8C9B854D0974075831445603CA4E2972A8C781372658A36AF
CF706C45CE> |-
/zero <1C60D8A8C9B7EF32589818E16FFFDD1D767FF429FC91CBDC29ABC44F9
835910589B492462622968BC361217B1328A4F21A9A0EE46CE1FB40C98549FB3
C2D5AA32FF5ED1BECE8B48A5A16026A99589CF209DE81B8FEDAA334BBDEF16CE
17701ED> |-
/one <1C60D8A8C9B7EF327C10274AC361C06F9C7CC89571CFF316D01D66094F
4D4DB43CE7F45DD339B1520486B78465877E119AC76B49578B18C5EB8FCFF4> |-
/three <1C60D8A8C9B7EF32589818EF20316DB14B8D2A1EC9EDF56815B1B724
1D03CF1081960701FA6059BD40300B232FDAE4649910BBCAA211DB321C577856
EFD54A9DDAA9B55866B0DBA97832C266CC8BA1130EAE048BC996AD5429720D15
6BD2C7B9CD5EA0C7C849CB237AEA64F4CC1870AA9B7B07C6DF9677CD0241EB> |-
/four <1C60D8A8C9B7EF327C102745636E273610F3E42F86DD63BB277C6A30F
25751056E5C2CF05AB3F093408ACAF319EAC891CB74E3B2E618C14F6B1A1829B
041E2293B8B79A621C0E07DACC281EB> |-
/five <1C60D8A8C9B7EF32589818E0A27A22C105BE6ECF847533CBC020EC210
D5E7FC2B73022095268A8C797B235188F24E60857826074946A964ECADB82C8C
36AE50E57DAA8D4ACCAAA0E7C80DF493F908260D4959CBDA471C8366793F6887
10FE0C8F869D0413C326F38> |-
/six <1C60D8A8C9B7EF32589818E0B619FDF51348C28435DB4532AD12025480
B9F9359E986023FD70DAD76B6106647DE7583188518C3B6CFEB9AC41D6935032
2F2C8C4FA886752F46AE639C04F6727893F96893FF46F2F9E966208E4285B5C2
F903B2419A957D6941DBCF970AB9A21C3C0B5F16641D72F9C38B03E8428A54E6
A3E9D46FB8A3667DF2A8DCE4F9A59AD8BE360D627779DF77F91762B46756A1B9
D7E627227B3424F6CF> |-
/seven <1C60D8A8C9B7EF327C10274B3EB5805ECBBA24BCE3F72F183ED706EA
A57BAE1C3F5E1D466D6B1E6D49> |-
/eight <1C60D8A8C9B7EF322526AD625B89C8DC704878F9ED51A43D4D4B530D
F6421F4BD5248944344EF69755D853CE0142889DE37A02042694D1572E2FD246
C0A336AB609818505848A4046649BE73E3571511C13C25C66DC64C8FF61AA589
25DBAC09A0A71984A942F28590717B23AB2449C2514E6EC72506C3A966B86F2D
4968A091EDF6D070CAD0FF06C97BE8F0AAE0EDE32BEEA147733E104DE6B1DF0F
6D80DC08A81621944509D51B1ACDBA4C32B64D57002E365B07239BC483A539C7
55D46C55F2584CE6FABC3DA8> |-
/nine <1C60D8A8C9B7EF32589818EF55746B5F281EBD1C04C2302F3A6168A76
2A530D76E98087B3283263E608DE3C4928EEDB09C3044EFFAD119F9F54CB5F49
75554815D3AB8023ADFCF53D767CEA3639622A1470D5F7B78381FA0EECC308C9
9BBFCE426068D44654A323C11C50094D5FF282F2326AE46838B4140934E63506
445EA13E209DC7DA887112A0AA5C8B696D285C0AB207BC10A376B9FB9BFEAC03
B42194294505BEF> |-
/A <1C60D8A8C9B64EDFA3F30AE4279DD61AA02F38184A0AB3EB2611AC93AD18
0249E6A77BC04C2B5261AAAB7C2BDEB993D8244842EC2754275828652C2AF308
5A> |-
/D <1C60D8A8C9B64EDF887895696DA1A194B80182AAB7CCDC6D768A37D786FB
8886C16AC6F2006CB3FBE1E0ADE20256D2F42CBD1C8BD429ECE854BD6210958C
9CA0DBBCC9CB98A462D10DD515> |-
/E <1C60D8A8C9B7A73DC5144678EE98DDAA763FDC556D069D76D0BF86066D16
21E37BE67FEEF50EA4AD1157386C9FFE4357E5A4438BFB7FAC58> |-
/F <1C60D8A8C9B77FE299176F6CACB7EC379CB26DB773CFC6151EBB05ADB270
07CC980B32E15FCDE0BDC0B0E1AE698991937E1A> |-
/G <1C60D8A8C9B6079FEA930A4348FF438D2F7C5E54ED8994F29E0F50466333
4C6CF39648AF0FD2155A769BACB5F3BBFC72A75B5D4642211A5BB38F9B123085
2238AF451275E9D755785748A67F510EDE61F369BE9D442F29EB72714F5BB8DE
6EF8049BFABB1A3194DD954B43F98287BE99EEF02303A5B81B2D84DAFAC26873
159A5C59EB78D8387BBE61A5> |-
/H <1C60D8A8C9B64EDFA3F30AE4B51D46C448AD4262885513A070BE1EC4CD0F
9599CD8106778C776D4606028F5DBB4FE1A7AF06D5C1DA28184BFE6392> |-
/J <1C60D8A8C9B81F2CB2B91DF21B78E8064FB8EAF59D82E4590A73C89DEFAA
0691754A621D5C12777C863000F8D669F1CB31DB436EB77ACE8B9BF05B75DDF7
2D225AB536C710B598BE2EAAEC3A> |-
/L <1C60D8A8C9B77FE2B24D0CBE5E9598A4BCCCF38D535CEB7BC78164399AB5
2F6D8364D8> |-
/M <1C60D8A8C9B59F85B01BCAF182D670CA9FCF5F20136DC0B4CF29C17C6D58
BA72769B9E97E980087D4EAEFE0D1EAAAA1B050002F37DF507F10CB95D43746B
EDCE84D6BCE108AA1A9BF2D5A984EF8F092070> |-
/O <1C60D8A8C9B6079FEA930A4DB49112EA29ADB7A01C51390ED7C5EA24D183
312A12BC8460A5C93A5A8F48F21875BCBB2D4C9AC4A847B3BAFA81BF2C0231B1
F23DB0A308CAB450D35085ED5A7EA84CC5DBD68155BF88BB250F9C5ED08D49E4
0287608C26A6B7609B6E299F> |-
/P <1C60D8A8C9B7A73DEE9439F66810031A4918B009B0B9AB574FEF1E680D99
4CB5D4977CA076C7F82630DD191313499B4A6F285C57F5C5E827A0493D127A82
45F32E16F812ED689C1DD1B4> |-
/R <1C60D8A8C9B7EF327C1027458B2DDD2081EC6F38D8BD61971455F0964FD2
BF4012DF64494DD02E2402E8797A940F4E5693309D4B89969395BD7B72633486
B3C54F76BE20917782849FC312AEA5CA1C78090F0A474CDBCC7A0853EC25AD14
EC51263101C0C89A26FB> |-
/S <1C60D8A8C9B7A73D31BBAA2D3154A42F91F5B76B66E266AEC42157254AD5
E3A85228221E3C96388835852D9B49FAAF389788CF69F39B255D29F0E3ECE5DA
396F3840AB27B885E14F87F6F979E39F9ACD9F043417828B3B310F49D320A491
766A11AFE90D998661B834F8D8D89D9573E7FAEF81BB632B102885A34273275A
AA53E7> |-
/U <1C60D8A8C9B64EDF7CD555CC9CECC9CB74725E8A1E194B1052EBF38D0593
911603B08CD2FE85929ADB079F587F9BBBC6E954FEE638A65CB071EA19C5CB47
5A8186B6F1556693> |-
/W <1C60D8A8C9B5D6EF3EA252B5484140294E50DF5B9F08C8B56CC03A82DCFC
5FDEFA30545344A22761D4C5909F16F731DB1BCF86D479176757751BEE15F607
90B8EB35F496D66F23F807E960354093B876AD86153E0B77> |-
/X <1C60D8A8C9B7D8BE41A64DAB2AC7FCB8FA3DDB220812ABA38B46A747EB02
9E0E1D71F43731FEB8AE8D14FAA66DA3B0B0887E0DE155170DB20BC322027240
48FBE798> |-
/f <1C60D8A8C9B81F2C6DADD0309A3974C4409634C8C321ABCD3BC972A6E50F
D363905D29B005401C2165DB6BCA96BAC97A352ED798D3B139A1EC08B803B00C
CF5CBF50C70CDCC7AAB6550BDCFA8434DF5943528C67E5501E18DDBC79836985
FF7415C23A4B61DF7484> |-
/k <1C60D8A8C9B7A73DEE9439F66F0A650CA9E4212BF1CC98C050C9DAEAEBD7
2154E08168BD061F249FE5583AEB72AC6BFFF978915BC4D2F7851F1BB034961E
77BE> |-
/x <1C60D8A8C9B77FE299176F63BDCF6709ADBF6D4F396065EFFAEF23FD4010
A45700AD971B69607562146505D5845D460B8B2DE039896C408852CF86BDC40C
776D1C73> |-
/z <1C60D8A8C9B77FE2B24B717B27D4E6C33AFAF4F3DC1FC98367AC7D7A689E
C83BB7C6BF400FA55C7944125524B0677FE04BAA7E> |-
/fi <1C60D8A8C9B7EF327C10274A02B7B1601F9F8FDA2D5F70B01565997348C
EDE1A7C40852C2C4988CBB97AE0307D9C23B0A2FB82FEE26A7E24F960FF53141
701274714C2AAE7EC6EF1A8D4ED30D83E8FE9E8252D2F9EFA01DB38CF1E1E1A3
04BD1757415FF604EFEC60177F0642472123027998D7C20553406AA4FABF1F9C
6C97A7A99963B93E7A5A70B7C780A093BFD966684CC6ED165AB2AE6398245573
3DC6B8E0907> |-
/endash <1C60D8A8C9B7A73DB9A39817EDE0361A2E1C2775A44ACDD8911B1BC
EF7> |-
/bullet <1C60D8A8C9B7A73DB966DE4CE538FAF2AB95E6DB8132B0953A83845
7E03FA1890997D9F9D1DBF35C9EE45D92BD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLK+Frutiger-Light /Encoding get
dup 33 /registered put
dup 44 /comma put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 102 /f put
dup 107 /k put
dup 120 /x put
dup 122 /z put
dup 174 /fi put
dup 177 /endash put
dup 183 /bullet put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLK+Frutiger-Light*1 
[32{/.notdef}rp /space /registered 10{/.notdef}rp /comma /hyphen /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 6{/.notdef}rp /A /B /C /D 
/E /F /G /H /I /J /.notdef /L 
/M /.notdef /O /P /.notdef /R /S /T 
/U /.notdef /W /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y /z 51{/.notdef}rp 
/fi 2{/.notdef}rp /endash 5{/.notdef}rp /bullet 72{/.notdef}rp]
JTSFLK+Frutiger-Light nf
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
45 126.323 mo
(\267)sh
49.75 126.323 mo
( )sh
58.4995 126.323 mo
(Intel PXA271 XScale! Processor)
[2.109 5.282 3.16342 4.75 2.10901 2.64099 4.75 5.80443 6.33658 5.282 5.282 5.282 
2.64099 5.80443 4.75 4.218 4.75 2.10901 4.75 7.60002 2.64101 4.75 2.99243 5.282 
4.218 4.75 3.69557 3.69557 5.282 0 ]xsh
188.383 126.323 mo
( )sh
58.55 139.323 mo
(at 13 \261 416MHz)
[4.75 3.16343 2.64101 5.282 5.282 2.64099 4.75 2.64101 5.282 5.282 5.282 8.44557 
6.33656 0 ]xsh
45.003 163.12 mo
(\267)sh
49.753 163.12 mo
( )sh
58.5025 163.12 mo
(Intel Wireless MMX DSP Coprocessor)
[1.8715 5.04449 2.92593 4.5125 1.87151 2.4035 8.9585 1.8715 2.75493 4.5125 1.87151 4.5125 
3.45807 3.45808 2.4035 8.20807 8.20807 5.56693 2.4035 6.09908 4.5125 4.51251 2.4035 6.09908 
5.04449 5.04451 2.75493 5.04449 3.9805 4.51251 3.45808 3.45807 5.04449 0 ]xsh
45.003 186.918 mo
(\267)sh
49.753 186.918 mo
( )sh
58.5025 186.918 mo
(256kB SRAM, 32MB FLASH, 32MB )
[5.282 5.282 5.282 4.75 5.282 2.64099 4.75 5.282 6.33658 8.44557 2.64099 2.64101 
5.282 5.282 8.44557 5.282 2.64099 4.218 4.218 6.33658 4.75 6.33656 2.64101 2.64099 
5.282 5.282 8.44557 5.28201 0 ]xsh
58.55 199.923 mo
(SDRAM)
[4.75 6.33657 5.282 6.33658 0 ]xsh
45.003 223.72 mo
(\267)sh
49.753 223.72 mo
( )sh
58.5025 223.72 mo
(Integrated 802.15.4 Radio)
[2.109 5.28199 3.16344 4.75 5.282 3.16342 4.75 3.16344 4.75 5.282 2.64099 5.282 
5.282 5.282 2.64101 5.282 5.282 2.64099 5.282 2.64101 5.282 4.75 5.282 2.10899 
0 ]xsh
45.003 247.518 mo
(\267)sh
49.753 247.518 mo
( )sh
58.5025 247.518 mo
(Integrated 2.4GHz Antenna,)
[2.109 5.28199 3.16344 4.75 5.282 3.16342 4.75 3.16344 4.75 5.282 2.64099 5.282 
2.64101 5.282 6.85899 6.33658 4.218 2.64099 6.33658 5.282 3.16342 4.75 5.282 5.282 
4.75 0 ]xsh
173.582 247.523 mo
( )sh
58.55 260.523 mo
(Optional External SMA Connector)
[6.859 5.282 3.16344 2.10899 5.282 5.282 4.75 2.10901 2.64099 4.75 4.218 3.16344 
4.75 3.33443 5.282 4.75 2.10899 2.64101 4.75 8.44557 6.33656 2.64101 6.33656 5.282 
5.282 5.282 4.75 4.218 3.16344 5.282 0 ]xsh
45.003 284.32 mo
(\267)sh
49.753 284.32 mo
( )sh
58.5025 284.32 mo
(Multi-color Status Indicator LED)
[8.44558 5.282 2.10899 3.16344 2.10899 3.16344 4.218 5.282 2.10899 5.282 3.16344 2.64099 
4.75 3.16344 4.75 3.16342 5.282 3.69557 2.64101 2.10899 5.282 5.282 2.10901 4.218 
4.75 3.16342 5.282 3.16344 2.64099 4.218 4.75 0 ]xsh
45.003 308.118 mo
(\267)sh
49.753 308.118 mo
( )sh
58.5025 308.118 mo
(USB Client With On-board mini-B )
[6.33657 4.75 5.282 2.64101 6.33656 2.10901 2.10899 4.75 5.282 3.16344 2.64099 9.19601 
2.109 3.16343 5.28201 2.64099 6.85901 5.282 3.16342 5.282 5.282 4.75 2.99243 5.282 
2.64101 7.91342 2.10901 5.282 2.10899 3.16344 5.282 0 ]xsh
58.55 321.123 mo
(Connector and Host Adapters)
[6.33657 5.282 5.282 5.282 4.75 4.218 3.16344 5.282 3.16342 2.64101 4.75 5.282 
5.282 2.64099 6.33658 5.282 3.69557 3.16342 2.64101 6.33656 5.282 4.75 5.282 3.16344 
4.75 3.16342 0 ]xsh
45.003 344.921 mo
(\267)sh
49.753 344.921 mo
( )sh
58.5025 344.921 mo
(Rich Set of Standard I/O: 3xUART, )
[5.282 2.109 4.218 5.282 2.64101 4.75 4.75 3.16342 2.64101 5.282 3.16342 2.64101 
4.75 3.16342 4.75 5.282 5.282 4.75 2.99243 5.282 2.64101 2.10899 2.64101 6.85899 
2.64101 2.64099 5.282 4.218 6.33658 6.33656 5.339 3.6955 2.64101 0 ]xsh
58.55 357.923 mo
(2xSPI, I)
[5.282 4.21801 4.75 4.75 2.10899 2.64101 2.64099 0 ]xsh
JTSFLK+Frutiger-Light*1 [5.5385 0 0 -5.5385 0 0 ]msf
87.0495 354.759 mo
(2)sh
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
90.1289 357.923 mo
(C, SDIO, GPIOs)
[6.33657 2.641 2.641 4.75 6.33657 2.109 6.859 2.641 2.641 6.859 4.75 2.10899 
6.85901 0 ]xsh
45.0039 381.72 mo
(\267)sh
49.7539 381.72 mo
( )sh
58.5034 381.72 mo
(Application Speci\256c I/O: I)
[6.33657 5.282 5.282 2.10901 2.10899 4.218 4.75 3.16344 2.10899 5.282 5.282 2.64101 
4.75 5.282 4.75 4.218 2.10899 5.282 4.218 2.64101 2.10899 2.64101 6.85899 2.64101 
2.64099 0 ]xsh
JTSFLK+Frutiger-Light*1 [5.5385 0 0 -5.5385 0 0 ]msf
159.312 378.559 mo
(2)sh
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
162.392 381.723 mo
(S, AC97, )
[4.75 2.64099 2.64101 6.33656 6.33658 5.282 5.282 2.64099 0 ]xsh
58.55 394.723 mo
(Camera Chip Interface, JTAG)
[6.33657 4.75 7.91344 4.75 3.16342 4.75 2.64101 6.33656 5.282 2.10901 5.282 2.64099 
2.10901 5.282 3.16342 4.75 3.16344 3.16342 4.75 4.218 4.75 2.64101 2.64099 3.16344 
4.104 6.33656 0 ]xsh
45.003 418.521 mo
(\267)sh
49.753 418.521 mo
( )sh
58.5025 418.521 mo
(Compact Size:)
[6.33657 5.282 7.91344 5.282 4.75 4.218 3.16342 2.64101 4.75 2.10899 4.218 4.75 
0 ]xsh
116.554 418.523 mo
( )sh
58.55 431.523 mo
(36mm x 48mm x 9mm)
[5.282 5.282 7.91342 7.91344 2.64099 4.218 2.64101 5.282 5.282 7.91342 7.91344 2.64099 
4.218 2.64101 5.282 7.91342 0 ]xsh
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.357 .722 .804 colr
JTSFLI+OmniBook*1 [14 0 0 -14 0 0 ]msf
45 460.323 mo
(Applications)
[10.528 8.1901 8.1901 2.68803 2.68803 7.55991 7.57401 5.15195 2.68803 8.58211 7.55991 0 
]xsh
true sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: RCOBAA+Frutiger-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLK+Frutiger-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B7D8BE6A0F444CA9BF2102D3ADC6F88CB1E340347C5238B5D3
57D01BE6A5A3338C10CB51B751268FD4CF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLK+Frutiger-Light /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLK+Frutiger-Light*1 
[32{/.notdef}rp /space /registered 10{/.notdef}rp /comma /hyphen /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 6{/.notdef}rp /A /B /C /D 
/E /F /G /H /I /J /.notdef /L 
/M /.notdef /O /P /.notdef /R /S /T 
/U /V /W /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y /z 51{/.notdef}rp 
/fi 2{/.notdef}rp /endash 5{/.notdef}rp /bullet 72{/.notdef}rp]
JTSFLK+Frutiger-Light nf
JTSFLK+Frutiger-Light*1 [9.5 0 0 -9.5 0 0 ]msf
45 480.523 mo
(\267)sh
49.75 480.523 mo
( )sh
58.4995 480.523 mo
(Digital Image Processing)
[6.33657 2.10899 5.282 2.10901 3.16342 4.75 2.10901 2.64099 2.10901 7.91342 4.75 5.282 
4.75 2.64101 4.75 2.99242 5.28201 4.218 4.75 3.69557 3.69557 2.10899 5.282 0 
]xsh
45 500.72 mo
(\267)sh
49.75 500.72 mo
( )sh
58.4995 500.72 mo
(Condition Based Maintenance)
[6.33657 5.282 5.282 5.282 2.10899 3.16344 2.10899 5.282 5.282 2.64101 5.282 4.75 
3.69557 4.75 5.282 2.64099 8.44557 4.75 2.10901 5.282 3.16342 4.75 5.282 4.75 
5.282 4.218 0 ]xsh
45 520.917 mo
(\267)sh
49.75 520.917 mo
( )sh
58.4995 520.917 mo
(Industrial Monitoring and Analysis)
[2.109 5.282 5.282 5.282 3.69557 3.16342 3.16344 2.10899 4.75 2.10901 2.64099 8.44557 
5.282 5.282 2.10901 3.16342 5.282 3.16344 2.10899 5.282 5.282 2.64101 4.75 5.282 
5.282 2.64099 6.33658 5.282 4.75 2.10899 4.218 3.69557 2.10899 0 ]xsh
45 541.114 mo
(\267)sh
49.75 541.114 mo
( )sh
58.4995 541.114 mo
(Seismic and Vibration Monitoring)
[4.75 4.75 2.10901 3.69557 7.91342 2.10901 4.218 2.64099 4.75 5.282 5.282 2.64101 
5.86142 2.10901 5.282 3.16342 4.75 3.16344 2.10901 5.282 5.282 2.64099 8.44557 5.282 
5.282 2.10901 3.16342 5.282 3.16344 2.10899 5.282 0 ]xsh
gsave
38.31 729.356 mo
218.308 729.356 li
218.308 570.709 li
38.31 570.709 li
cp
clp
.249 lw
62.03 692.836 mo
62.03 709.367 li
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
171.698 705.122 mo
57.84 705.122 li
57.84 590.896 li
171.698 590.896 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.273 lw
171.698 705.122 mo
57.84 705.122 li
57.84 590.896 li
171.698 590.896 li
171.698 705.122 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
64.98 611.523 mo
79.215 611.523 li
54.766 622.363 mo
76.606 622.363 li
@
66.978 620.312 mo
60.405 620.312 li
60.405 595.097 li
66.978 595.097 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.313 lw
66.978 595.098 mo
66.978 620.312 li
60.405 620.312 li
60.405 595.098 li
66.978 595.098 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
114.635 692.713 mo
114.635 709.243 li
126.888 692.713 mo
126.888 709.938 li
@
true set_gvm
%ADOBeginSubsetFont: UEFBAA+Frutiger-Cn Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /UEFBAA+Frutiger-Cn def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1991 Adobe Systems Incorporated.  All Rights Reserved.Frutiger is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 39 /quoteright put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
def
/UniqueID 36374 def
/FontBBox {-105 -250 1000 929} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-7 -0 698 705 510 517 750 762] def
/OtherBlues [278 282 392 396 -222 -216] def
/StdHW [68] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
32 dict dup begin
/space <1C60D8A8C9B87A8F8B> |-
/quoteright <1C60D8A8C9B87A8F7D97A822CB9227D90EDD4E1330D9C4BDCA3
C921CBE6897> |-
/two <1C60D8A8C9B75BE5656E11B05678FE58CC2BAC0B7EF40979E9EFA19509
472921CB88F29CAA704B66B95BF712D65A0D4073E0117CD258CC87321CC7011D
513AC84D7F028E53F4F9FDD796BB21EF098DD646> |-
/three <1C60D8A8C9B75BE56A12E51A2C0F68A869AD520A317E09B01560FEB1
058002039728EFC7B88DA41E53CB6F3F77E5101D98D186F5055533FA08A01EC5
385AE9A5E920D455BED09EDFB196A6F351D747D62FEE03DC31BB2937D730C334
BA7CA942E44E969F790562FF0A6F9E0A045854F24AD9D6E6A4CC16C45F594A5F
6A98B431E1F47DDA9BE7E4718734F0674C917D772B0076B74B46B19F5F9881E4
0D134E6E4E6C9EB46CC367> |-
/seven <1C60D8A8C9B75BE54E5BDF8368ABCB122B253C289165871DEFD30724
EE4323AC300C71B5FEFB17E5B7> |-
/nine <1C60D8A8C9B75BE56A12E51A60180980CAE2D7B0985F3B56A5C767E22
6FB10FC8FBF2FC55A50938562436CC96D0EE70194C5F30A506E90F5BC5F05E68
4117F0A559999F0264694EFD4615299CEBE0CE066787D1C64C18F5C5D380F559
CFF3C74670443BB9B54BAB217A67460A3A89EFC66FDC96B1E80C05E46C96BCD1
494607E59D15C10F930E49BE6FD13EC54A9F79E5D628060171D3C3DE0BDF787F
9B9B9C4> |-
/A <1C60D8A8C9B7FD84CD08F29C7A3ADBABA9D1473C6D4D530525F5D85D023F
CE3592136B546210833A1094D423249E25BB6F42ED189B3CE0A366FDF7A279CC
7DC7A8BC89BA467CABB27FF0E7C6BD5E1B1F9729698AD02176D23D> |-
/B <1C60D8A8C9B7B4A143B6A8B2701EAEAEB910CE50EC816D25C896A215B56F
A59343A680C1580D775E1296A8E8735AB970053E87CED99487031EE7DD7CCB45
1D66950107A9B498A0B24BBA617F392192B02A3DAF422DC5019E57C18922A9D5
47E004BB00C3F900A4E6655102549E4DDA6036710E6C0C61D46CCA2E976BC68C
85619023542A31EFFCD05304CB> |-
/C <1C60D8A8C9B78256A1CE1ACAD5A9908FF736390F29AC635848ABC9357A95
B6C273A4DAC33CE80EFE4E069FD0948A8E104BA0BA06A07B2EFE587E73549888
28F07000AF48EB65D99FFE30DDF0CEA863764B8C088FDC3C> |-
/D <1C60D8A8C9B7FD84E670E2D4C181350F012F93E3EEB66C540FC166ABC126
AFD20C45C4FF08A4F87305BE4FBC31DA6CA024AA6959A0F0AC08EAD6AE4E668C
240FF63916FD4B9920CCDD7FB77BD599> |-
/G <1C60D8A8C9B7D7E8A054F013935C2965F47C953E7E60AE0D72921CD10761
F2C3AAC5BEAA9D4102D667D3AC037827D4952D287D97C4E03C2A90B0A011B861
61B6FFB6795B386B89848ED131C1839EB30F793FFDC92D35995A5D965B28F50A
6249CFA581B48ABD94104ABE> |-
/I <1C60D8A8C9B878E8B4ED0097223001F2264002D8B6492F0FCDF50CC7BF> |-
/O <1C60D8A8C9B7D7E8A050B64C6E8A8930E9CBC90C728257410A3DCFB046E4
D41D0E8F03637B58FEB57D6CD876FA59374C583B69A2489BFB74B7A72BD7C7BC
531131F680A35BF5FF632A5AE10AFCD9B015D0FE88845E088C9B35FF59> |-
/P <1C60D8A8C9B75A17982D11D3BD0EF4EDEB5EE1FA9D0370AF12525755EBE6
A304ED0BC14286A8F891E8BF3ED87870F78117300AECEAE9CBBA9C7E1FBEBA42
2F2D5AF97C8BD76A17CD073E92C9D289BF> |-
/R <1C60D8A8C9B7B4A1684D517830B4AECECC99054E41914014C4EFFA3F6ACE
E49AEC7C790358E7AAFDECAE715E025BC3B1C5DDD26F628DE10518FFD2677F55
6B7126D7DD96EF1CD76BCC1BD850C1892F9AF32A5CBEFB7C4ED315B5F9579186
72A795788AF82D9DBB4687> |-
/S <1C60D8A8C9B77FE2BDBECFB17D2E1C0D8F119E5BBE37A455B702EDAB9448
C5EB431AEF939AF9469B0F3A6F3117913A56ACEBC895FCD40ED2C1DFA6BFBEF9
D992F5FEABA9C0675728F702556E066176F58803999D5D6CD0ED89A46623BEC9
043D351933347C096B5A4FFC566A11E34F82> |-
/T <1C60D8A8C9B77FE299176F62626AD488D38C59475C17C2B94C1384BA593E
58BA95CF19E6F30D93E8E6B4> |-
/U <1C60D8A8C9B7CB35154D0FF2E2BC2AD42D372FEB267C7508FE162B7D6861
7688E879DA99DEF79DE01B909FD6D435122886528E08ED2D510D01BE7E27A4B3
2F4E6DCE6E33D26B3C131E97B1000366AA31B412> |-
/a <1C60D8A8C9B74CDDEA5D3A1A2896F7BFE1F6945AEED9F725BD5DF815E5C6
B6433DF6D2661765551755A2060D754AE411ADC4F005490620DD93B30CCEE7AE
CC1B23A4A2E8EFB34176A061A7E838D65A81862AED2E9E32A154D4C119C3E9E9
161B543792565D7271455E6FD7262129BD7418D482C3CFCF5D509A090CCD80D8
DE78E635BE362165B95840D0C37AEFBC1A318E69D2FF734F76473FA73A6D8A7A
D597121066D45CE0ACB2DE5E11EC413615F39975E0E882132EDCA3C9D4F9EA37
A2773E> |-
/c <1C60D8A8C9B7361F71E0E920743429FCAD2E4019F6427E114DA20F78B801
D9A3BCB4B54820926701C0AADFC71FBF5C1D3930573592299E88475E19B444E7
76C99FA22221FE730523A069DD5AD0754E190792BA089CCE027A79286D2702E6
CE> |-
/e <1C60D8A8C9B77FE2BDA23BF9E0F79F9F0CD7A55E3C9FAC4562232A94D4C2
2A48B2962AB82B0E443B2A157FE4AAF7584C4B7C715E5B7A985A056C37597A49
3FF453556FF981338D2F173254F969F5B13D3A68D953725EAA4BE5AE689BA47A
B3> |-
/h <1C60D8A8C9B759462356354CA3F88C9C77B88F319D9A7BD5DB1DB4E2FFF1
5AD1DE34539E00BBF5F284A0F372A27329E60D6AA20DDB30402E84E7CA83D58D
E44F8111E1450551F31089> |-
/i <1C60D8A8C9B88C082599D5E95B5A5C1C06C2F40B4BE87E1A75F952FAAA55
33143F32B5FFB3AAD176CD88BF4C102B2479BA97E9A2D3> |-
/l <1C60D8A8C9B88C082599D5E87882DEEA7BC8FB85F5656B2718AA473A2A> |-
/m <1C60D8A8C9B6079F5D7DB662FB2D212A37A7402EE62B507C156D7FC20B5C
ED455E438CD5AF68AC1166B9F387EDBA4C3AD0156E55FCE9B0D1778652D8F714
1F276D0DD707B910347A4A01E1015B0DB0253CBDA38171FE8FF79C2DD2934DA0
4EE526F927BFBFF08037AC79E580155194C7B18138B4E7A702FF8CD3814D02B1
E21E1670> |-
/n <1C60D8A8C9B759462356354CA3F88CAD7570A49423761F4FAEA4F73D019A
F70C80A69A643FCC556BDE58EFE191214A1454C92CBFBA0E4D7260283F32F2AA
AED095381C817C0ED55F9AF7F55B3A5A24886ADBE78764F9A4F9E1E695A8> |-
/o <1C60D8A8C9B759460743FF84DCB5F68656F3E5189C1006A6F617B28461A5
9F2CFD6132237CC4160BD02BC0EF2B1E741F9E3B3DE9F4F635A01AA7EA4D1960
38929B2B1E00ED5848553CDD1E9D9676BBB403E87CBF> |-
/r <1C60D8A8C9B8425736C8FDF012BC19D226EBCD11D010ADE749A1CAC205F1
F21068EACABA50AFB553603D5D08D8990C550967A75FD8C38A429DE374532C37
D2C8193F801AB602907E04FB015BD1127A6A6F3A9D42C0A3A2> |-
/s <1C60D8A8C9B7299AC8BA751F40913218343C74525B3E1A20FC3DEC1C5A24
DE924806A3C9F828FB7D01EE892AD44938A33C93C369B6269400844D1F5C98DA
E757765EB449F6DA75CCAFDCC8801F0889B90E8F820F58A7FC82694D3EA8E1D2
0D54E19D3E0F3DA9E9F81E01B06B6DFCB771FDD4010F27A915877A436F7257D3
6ADBC7690B635A6A35A3E3A9DFBE34D2F4F541> |-
/t <1C60D8A8C9B842571278C252E294981B49ECEC94A89A264D86A0ADCC418F
4B4424D4632BAACF1A27A999EC458CC673E407405E37E40976C0D7220EAF5A6B
952169E7DF999201D0F027E7> |-
/x <1C60D8A8C9B7113187732E7EF0BA5C554F39ABDB407BCB272F66195DFA3D
DD7F968230CA237F06BC6B8F7CCA916682771CE2C238B4067EB2C1AD09CC6ADC
27> |-
/.notdef <1C60D8A8C9B87A8F8B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JTSFLN+Frutiger-Cn /UEFBAA+Frutiger-Cn findfont ct_VMDictPut
/JTSFLN+Frutiger-Cn*1 
[32{/.notdef}rp /space 6{/.notdef}rp /quoteright 10{/.notdef}rp /two /three 3{/.notdef}rp 
/seven /.notdef /nine 7{/.notdef}rp /A /B /C /D 
2{/.notdef}rp /G /.notdef /I 5{/.notdef}rp /O /P /.notdef 
/R /S /T /U 11{/.notdef}rp /a /.notdef /c 
/.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r /s /t 3{/.notdef}rp /x 
135{/.notdef}rp]
JTSFLN+Frutiger-Cn nf
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
180.153 603.644 mo
(GPIOs)
[4.27328 3.3586 1.6898 4.27328 0 ]xsh
180.153 612.621 mo
(2x SPI)
[3.35158 2.9745 1.67584 3.10023 3.3586 0 ]xsh
180.153 620.601 mo
(3x )
[3.35158 2.9745 0 ]xsh
188.155 620.601 mo
(UA)
[3.87526 0 ]xsh
196.039 620.601 mo
(RT)
[3.36554 0 ]xsh
180.153 629.579 mo
(I)sh
JTSFLN+Frutiger-Cn*1 [4.0708 0 0 -4.0708 0 0 ]msf
181.843 627.254 mo
(2)sh
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
183.797 629.579 mo
(C)sh
180.153 637.559 mo
(SDIO)
[3.10023 4.00798 1.6898 0 ]xsh
180.153 646.536 mo
(USB host)
[4.13361 3.10023 3.6239 1.67583 3.36554 3.36552 2.5835 0 ]xsh
180.153 655.514 mo
(USB client)
[4.13361 3.10023 3.6239 1.67583 2.71625 1.55013 1.55011 3.10023 3.36552 0 ]xsh
180.153 663.494 mo
(A)sh
184.036 663.494 mo
(C'97)
[3.74962 1.67584 3.35156 0 ]xsh
180.153 672.471 mo
(Camera)
[3.74962 3.23288 5.04137 3.10023 2.06685 0 ]xsh
180.153 681.449 mo
(I)sh
JTSFLN+Frutiger-Cn*1 [4.0708 0 0 -4.0708 0 0 ]msf
181.843 679.124 mo
(2)sh
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
183.797 681.449 mo
(S)sh
138.014 675.592 mo
106.895 675.592 li
106.895 667.979 li
138.014 667.979 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.326 lw
138.014 675.592 mo
106.895 675.592 li
106.895 667.979 li
138.014 667.979 li
138.014 675.592 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
102.614 625.161 mo
72.156 625.161 li
72.156 594.703 li
102.614 594.703 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.328 lw
102.614 625.161 mo
72.156 625.161 li
72.156 594.703 li
102.614 594.703 li
102.614 625.161 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
103.054 664.503 mo
72.156 664.503 li
72.156 633.605 li
103.054 633.605 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.333 lw
103.054 664.503 mo
72.156 664.503 li
72.156 633.605 li
103.054 633.605 li
103.054 664.503 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
137.794 625.428 mo
107.069 625.428 li
107.069 594.703 li
137.794 594.703 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.331 lw
137.794 625.428 mo
107.069 625.428 li
107.069 594.703 li
137.794 594.703 li
137.794 625.428 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
137.485 664.021 mo
107.069 664.021 li
107.069 633.605 li
137.485 633.605 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.327 lw
137.485 664.021 mo
107.069 664.021 li
107.069 633.605 li
137.485 633.605 li
137.485 664.021 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
102.834 702.025 mo
72.156 702.025 li
72.156 671.347 li
102.834 671.347 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.33 lw
102.834 702.025 mo
72.156 702.025 li
72.156 671.347 li
102.834 671.347 li
102.834 702.025 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
137.794 701.618 mo
106.997 701.618 li
106.997 680.228 li
137.794 680.228 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.314 lw
137.794 701.618 mo
106.997 701.618 li
106.997 680.229 li
137.794 680.229 li
137.794 701.618 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
169.002 700.162 mo
143.527 700.162 li
143.527 691.171 li
169.002 691.171 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.321 lw
169.002 700.162 mo
143.527 700.162 li
143.527 691.171 li
169.002 691.171 li
169.002 700.162 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
true set_gvm
%ADOBeginSubsetFont: UEFBAA+Frutiger-Cn AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLN+Frutiger-Cn dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B87A8F0E7BDC166D2A2EE7F00903802B90A2697FED> |-
/zero <1C60D8A8C9B75BE56A12E51413C678014FCC62EE8BA829F0B82DD58CA
C38D88F43FB755C3AA6D8FF0E8D45A35DE0047512EC3219B690515FA60A1EE94
F209886A881250543966C57E9B79C3AA5810528FF0C3DD2C643FBA5> |-
/one <1C60D8A8C9B75BE54E5BDF8324D09D08A7D7F31B8D1206D200669E85F5
B88C9DD90C8C5507D3775F3EE6> |-
/four <1C60D8A8C9B75BE54E5BDF8D48656B5DE2DA35C0EBA9BB978F0E85B30
833A895C6E71F31A66D8EF8B803A6A2619C124B9BF7ED1C4F4C70B9558EF1D1B
045F323B414CC4CD69813E52556253DFBB7B05B6D3C000D> |-
/five <1C60D8A8C9B75BE56A12E515EADEBF1FE768774852177AF98B89B7C21
2FBEC388EBD0E6B2AD211A9C097D08A85C78E356843AC435AD533C38AC9B526D
1429B3605A72296F6EAD80B4467C0950606DE4693A96C56C652357FC724A988F
4EA43BA> |-
/six <1C60D8A8C9B75BE56A12E515EADEBF1FEC1084AE9F02608305D36586EC
0FE357535DCA2553CE2BA7510F89E5EE50E22D52A7119D95FB764EB084C62285
4B1072B98DF59CCAA65167A73247250D694430616DD3E7F7ADEF5AF168DC4CA3
08004082255013C81D65E3E1BFFFA4AE39769C6F23135864DB6748E7017C6570
1815787568B68A10DCBE63A91B1D08EC25CDF197D551CFDF06A13834362B02AA
98C911F4> |-
/eight <1C60D8A8C9B75BE56A12E51413C6780F157F23E5EE58FACEC38723D3
FE866473303CB2F456202AA94EF5F5040DC8E557ACAF442426BEDDEEF105136D
6E3CE202DD21A09D04007E07EC580E719B9DED62FACE6A558690F7AAEF62EDD3
7143E513D3A59985676B32D70592E67B412AA912FD188D5A9F6644ECFECF0EFD
31C705B17B24DB404EFA9DB4DB58213E71CC4C3E4DF2700594874BCFD823DE67
C7BFADC16319C34F191BFC83CC3FE797F332313DBA6BB378C15FD3316D0EC279> |-
/F <1C60D8A8C9B7113187732E713FEA3B552950E9463DA68A2BE6F35E17A3C9
A4EA81E2494AC8CD95CDA69DE44DA71CC79DDB89> |-
/H <1C60D8A8C9B7FD84CD08F29CE877625840FC6291C6963387F53330EDD46D
90F530CA09E31861EF313A0EE741E4D2676B19CBFC5EEDC964E9109015> |-
/L <1C60D8A8C9B704CCC7DE5E4CA04AE5118D9E84B22EBA5F5E2B46C6179051
23B69781D9> |-
/M <1C60D8A8C9B6FF86A27735053857B16CEA702FBFDEFFD718C8528143A847
31CFE829051558DD3FD1B6C0BAA321955C4B6FF8723D7B38BE463F6EB74C85F5
79FC461A001E0231AA020A> |-
/X <1C60D8A8C9B7825685F30FFBD33CF2CD00C302DD964AF82814C911EFE48A
5B10DD1F02FCBFEADBD18C1A4C6FCF0456C0B19D55CC2AB59C557C57602F7E74
7FE7E2AE> |-
/d <1C60D8A8C9B75A17BCAC2E522F6F086CB7386AAA790B95A92112EC373601
8BF085E464C020C5D143AF67559B318AFF21F63B4106053EBD074B034251E815
91A72449B4D11B17F1876DC76908EC25FE00B5D647D01EE7A2B0ED6A6E6B6B2F
4A0885BC39302EEE174E4FC98DA050DA8FE8EC9B477D15359CA58115E61F3800
3AAE7D> |-
/g <1C60D8A8C9B75A17C37AC5ECDED9D58DE77058069848DE9C60048F9FCECD
EE88EE344D4ADC7960CF6AE57E99E7EE0AAA49760065068D55174E52C307C031
1F5072BCCF81CDE85D4EAF560D205035A3F498C9EC15332B0BA76A354AF2AE4D
DBFDEA66BBAF6C26E5FE3909ED8D020BAA205FA203FF4D8C55DC0811216D0666
5408E6E34AC7DE8269E231843D4C9FE59211254E863FF2A6BB93289202306FE3
E2BCF5FC59B13F8E251AE3E66CC2E498BF4CB5> |-
/k <1C60D8A8C9B77FE299176F6CB2317F7B4AD8E12F43299322B2D8ADA2EF49
10834DC5DF4C58B9B6EE2A8FD3871C5BC0F715B1E0A0B5A80A1575B09A2EA849
5F30700FFE> |-
/p <1C60D8A8C9B75A17C35F273C3F159B7206AF6DA5EC639A061702E861F148
0B623B9806E566495680B3008775E0B5D9D6E662C5B07D382811425EE7E6C511
D5DB20D5FE2F399DD7948B154A386D5982880F7C561A57C72AB7C69656874ADA
3E090F4A59669990B247B41FF390230D8514F3912C8B8688E50892EC10E8F8F4
9DE581> |-
/u <1C60D8A8C9B75946075F93B1C023512DCE5DBF162706C194BEC0B168A014
8D0D5CC3A31E75C4A74768A480CB456BBDD0C8D3C75E311425B673F1DAF4FA76
EDDC7CCEAD5FBAA35D97282CBE9BBC22139A668CAE3960C598178A0BA4F6A8F9
9E> |-
/w <1C60D8A8C9B620B78F842973377CB729D6B9FEF4B01EC02194FEB1B026BE
55C91DB1B1DEBE736199EF481FD366D231912C10F36AAAEFE4949919CF81F812
E0BBD4A48761C65A4400397CD5B9836B8D7532907E1D> |-
/y <1C60D8A8C9B704CCB775788DD7C1C1E6CB09FAED9DC76EF8B528812CEA46
F082523516516EAFEAB4482D213ABEECAB0072E24941A9A1D4089A6AAC8F4A42
9F3F890129284FC668A90A69A55E49213679D093A907A9C1D60DE604B1AF7A6E
5215C4E76DFBC9BBE21D1EE0F230D310D71A0F03A46A6C1EF8D5A14920> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLN+Frutiger-Cn /Encoding get
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 70 /F put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 88 /X put
dup 100 /d put
dup 103 /g put
dup 107 /k put
dup 112 /p put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLN+Frutiger-Cn*1 
[32{/.notdef}rp /space 6{/.notdef}rp /quoteright 6{/.notdef}rp /period /.notdef /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A /B /C /D /.notdef /F 
/G /H /I 2{/.notdef}rp /L /M /.notdef /O 
/P /.notdef /R /S /T /U 2{/.notdef}rp /X 
8{/.notdef}rp /a /.notdef /c /d /e /.notdef /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
/x /y 134{/.notdef}rp]
JTSFLN+Frutiger-Cn nf
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
44.0226 619.008 mo
(SMA)
[3.10023 5.43238 0 ]xsh
91.544 713.88 mo
(Supply)
[3.10023 3.36552 3.3586 3.3586 1.55012 0 ]xsh
131.204 713.88 mo
(Battery Changer)
[3.6239 3.23288 2.06685 2.06686 3.10023 2.06685 2.84186 1.67584 3.74962 3.36552 3.23288 3.36554 
3.3586 3.10023 0 ]xsh
152.124 697.849 mo
(RT)
[3.36554 0 ]xsh
158.59 697.849 mo
(C)sh
113.407 609.182 mo
(32MB)
[3.35157 3.35157 5.43238 0 ]xsh
112.821 615.167 mo
(FLAS)
[2.97451 2.84186 4.008 0 ]xsh
125.745 615.167 mo
(H)sh
JTSFLN+Frutiger-Cn*1 [5.985 0 0 -5.985 0 0 ]msf
115.31 647.708 mo
(32MB)
[2.87277 2.87278 4.65633 0 ]xsh
113.419 653.693 mo
(SDRA)
[2.65734 3.43542 3.10619 0 ]xsh
126.054 653.693 mo
(M)sh
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
79.0509 648.367 mo
(XScale)
[3.74962 3.10023 2.71625 3.23288 1.55011 0 ]xsh
75.6922 654.352 mo
(CPU core)
[3.74962 3.3586 4.13361 1.67583 2.71625 3.36553 2.06686 0 ]xsh
75.7068 609.166 mo
(802.15.4)
[3.35157 3.35157 3.35157 1.67583 3.35158 3.35156 1.67584 0 ]xsh
80.6504 615.151 mo
(radio)
[2.06686 3.23288 3.3586 1.55012 0 ]xsh
78.0369 686.374 mo
(XScale)
[3.74962 3.10023 2.71624 3.23288 1.55012 0 ]xsh
81.5276 692.36 mo
(DSP)
[4.00799 3.10023 0 ]xsh
JTSFLN+Frutiger-Cn*1 [6.4837 0 0 -6.4837 0 0 ]msf
107.228 674.437 mo
(256kB )
[3.01489 3.01489 3.01489 2.78151 3.26777 0 ]xsh
123.229 674.437 mo
(SRAM)
[2.74909 3.23535 3.592 0 ]xsh
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
113.065 689.999 mo
(P)sh
116.165 689.999 mo
(ower)
[3.36552 4.783 3.10023 0 ]xsh
115.135 695.984 mo
(Mgt.)
[5.43238 3.3586 2.06686 0 ]xsh
JTSFLN+Frutiger-Cn*1 [0 6.9825 6.9825 0 0 0 ]msf
61.6473 596.761 mo
(Antenna)
[4.008 3.36554 2.06683 3.10022 3.36554 3.36554 0 ]ysh
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
58.0913 587.563 mo
(Block Diagra)
[3.6239 1.55012 3.36553 2.71625 3.10023 1.67583 4.008 1.55012 3.23288 3.3586 2.06685 0 
]xsh
91.5719 587.563 mo
(m)sh
128.774 711.238 mo
128.774 712.294 127.918 713.15 126.861 713.15 cv
125.805 713.15 124.949 712.294 124.949 711.238 cv
124.949 710.181 125.805 709.326 126.861 709.326 cv
127.918 709.326 128.774 710.181 128.774 711.238 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
128.774 711.238 mo
128.774 712.294 127.918 713.15 126.861 713.15 cv
125.805 713.15 124.949 712.294 124.949 711.238 cv
124.949 710.181 125.805 709.326 126.861 709.326 cv
127.918 709.326 128.774 710.181 128.774 711.238 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 601.381 mo
175.554 601.381 li
@
178.465 601.136 mo
178.465 602.192 177.609 603.048 176.552 603.048 cv
175.497 603.048 174.64 602.192 174.64 601.136 cv
174.64 600.079 175.497 599.224 176.552 599.224 cv
177.609 599.224 178.465 600.079 178.465 601.136 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 601.136 mo
178.465 602.192 177.609 603.048 176.552 603.048 cv
175.497 603.048 174.64 602.192 174.64 601.136 cv
174.64 600.079 175.497 599.224 176.552 599.224 cv
177.609 599.224 178.465 600.079 178.465 601.136 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 610.225 mo
175.554 610.225 li
@
178.465 609.851 mo
178.465 610.907 177.609 611.764 176.552 611.764 cv
175.497 611.764 174.64 610.907 174.64 609.851 cv
174.64 608.794 175.497 607.939 176.552 607.939 cv
177.609 607.939 178.465 608.794 178.465 609.851 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 609.851 mo
178.465 610.907 177.609 611.764 176.552 611.764 cv
175.497 611.764 174.64 610.907 174.64 609.851 cv
174.64 608.794 175.497 607.939 176.552 607.939 cv
177.609 607.939 178.465 608.794 178.465 609.851 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 619.072 mo
175.554 619.072 li
@
178.465 618.567 mo
178.465 619.623 177.609 620.48 176.552 620.48 cv
175.497 620.48 174.64 619.623 174.64 618.567 cv
174.64 617.51 175.497 616.655 176.552 616.655 cv
177.609 616.655 178.465 617.51 178.465 618.567 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 618.567 mo
178.465 619.623 177.609 620.48 176.552 620.48 cv
175.497 620.48 174.64 619.623 174.64 618.567 cv
174.64 617.51 175.497 616.655 176.552 616.655 cv
177.609 616.655 178.465 617.51 178.465 618.567 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 627.598 mo
175.554 627.598 li
@
178.465 627.283 mo
178.465 628.339 177.609 629.195 176.552 629.195 cv
175.497 629.195 174.64 628.339 174.64 627.283 cv
174.64 626.226 175.497 625.371 176.552 625.371 cv
177.609 625.371 178.465 626.226 178.465 627.283 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 627.283 mo
178.465 628.339 177.609 629.195 176.552 629.195 cv
175.497 629.195 174.64 628.339 174.64 627.283 cv
174.64 626.226 175.497 625.371 176.552 625.371 cv
177.609 625.371 178.465 626.226 178.465 627.283 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 636.442 mo
175.554 636.442 li
@
178.465 635.998 mo
178.465 637.054 177.609 637.911 176.552 637.911 cv
175.497 637.911 174.64 637.054 174.64 635.998 cv
174.64 634.941 175.497 634.086 176.552 634.086 cv
177.609 634.086 178.465 634.941 178.465 635.998 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 635.998 mo
178.465 637.054 177.609 637.911 176.552 637.911 cv
175.497 637.911 174.64 637.054 174.64 635.998 cv
174.64 634.941 175.497 634.086 176.552 634.086 cv
177.609 634.086 178.465 634.941 178.465 635.998 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 644.969 mo
175.554 644.969 li
@
178.465 644.714 mo
178.465 645.77 177.609 646.626 176.552 646.626 cv
175.497 646.626 174.64 645.77 174.64 644.714 cv
174.64 643.657 175.497 642.802 176.552 642.802 cv
177.609 642.802 178.465 643.657 178.465 644.714 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 644.714 mo
178.465 645.77 177.609 646.626 176.552 646.626 cv
175.497 646.626 174.64 645.77 174.64 644.714 cv
174.64 643.657 175.497 642.802 176.552 642.802 cv
177.609 642.802 178.465 643.657 178.465 644.714 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 662.227 mo
175.554 662.227 li
@
178.465 662.145 mo
178.465 663.201 177.609 664.057 176.552 664.057 cv
175.497 664.057 174.64 663.201 174.64 662.145 cv
174.64 661.088 175.497 660.233 176.552 660.233 cv
177.609 660.233 178.465 661.088 178.465 662.145 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 662.145 mo
178.465 663.201 177.609 664.057 176.552 664.057 cv
175.497 664.057 174.64 663.201 174.64 662.145 cv
174.64 661.088 175.497 660.233 176.552 660.233 cv
177.609 660.233 178.465 661.088 178.465 662.145 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 671.191 mo
175.554 671.191 li
@
178.465 670.861 mo
178.465 671.917 177.609 672.773 176.552 672.773 cv
175.497 672.773 174.64 671.917 174.64 670.861 cv
174.64 669.804 175.497 668.949 176.552 668.949 cv
177.609 668.949 178.465 669.804 178.465 670.861 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 670.861 mo
178.465 671.917 177.609 672.773 176.552 672.773 cv
175.497 672.773 174.64 671.917 174.64 670.861 cv
174.64 669.804 175.497 668.949 176.552 668.949 cv
177.609 668.949 178.465 669.804 178.465 670.861 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 679.594 mo
175.554 679.594 li
@
178.465 679.577 mo
178.465 680.633 177.609 681.489 176.552 681.489 cv
175.497 681.489 174.64 680.633 174.64 679.577 cv
174.64 678.52 175.497 677.664 176.552 677.664 cv
177.609 677.664 178.465 678.52 178.465 679.577 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 679.577 mo
178.465 680.633 177.609 681.489 176.552 681.489 cv
175.497 681.489 174.64 680.633 174.64 679.577 cv
174.64 678.52 175.497 677.664 176.552 677.664 cv
177.609 677.664 178.465 678.52 178.465 679.577 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
.249 lw
161.25 653.596 mo
175.554 653.596 li
@
178.465 653.43 mo
178.465 654.486 177.609 655.342 176.552 655.342 cv
175.497 655.342 174.64 654.486 174.64 653.43 cv
174.64 652.373 175.497 651.518 176.552 651.518 cv
177.609 651.518 178.465 652.373 178.465 653.43 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.199 lw
178.465 653.43 mo
178.465 654.486 177.609 655.342 176.552 655.342 cv
175.497 655.342 174.64 654.486 174.64 653.43 cv
174.64 652.373 175.497 651.518 176.552 651.518 cv
177.609 651.518 178.465 652.373 178.465 653.43 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
116.584 711.238 mo
116.584 712.294 115.729 713.15 114.672 713.15 cv
113.616 713.15 112.76 712.294 112.76 711.238 cv
112.76 710.181 113.616 709.326 114.672 709.326 cv
115.729 709.326 116.584 710.181 116.584 711.238 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
116.584 711.238 mo
116.584 712.294 115.729 713.15 114.672 713.15 cv
113.616 713.15 112.76 712.294 112.76 711.238 cv
112.76 710.181 113.616 709.326 114.672 709.326 cv
115.729 709.326 116.584 710.181 116.584 711.238 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
true set_gvm
%ADOBeginSubsetFont: UEFBAA+Frutiger-Cn AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLN+Frutiger-Cn dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/J <1C60D8A8C9B831A9D4E5ACED9D76557AA7558FABBA044D9D91DA0A846884
67B2232DA3982A8BB6163663F4026549DC2CFE9F6D055E501FD37315C80A18AF
BE1ABC045AC7C5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLN+Frutiger-Cn /Encoding get
dup 74 /J put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLN+Frutiger-Cn*1 
[32{/.notdef}rp /space 6{/.notdef}rp /quoteright 6{/.notdef}rp /period /.notdef /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A /B /C /D /.notdef /F 
/G /H /I /J /.notdef /L /M /.notdef 
/O /P /.notdef /R /S /T /U 2{/.notdef}rp 
/X 8{/.notdef}rp /a /.notdef /c /d /e /.notdef 
/g /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /x /y 134{/.notdef}rp]
JTSFLN+Frutiger-Cn nf
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
66.4225 713.88 mo
(JT)
[2.1995 0 ]xsh
71.4083 713.88 mo
(AG)
[3.88231 0 ]xsh
63.979 711.362 mo
63.979 712.417 63.123 713.274 62.067 713.274 cv
61.011 713.274 60.155 712.417 60.155 711.362 cv
60.155 710.305 61.011 709.45 62.067 709.45 cv
63.123 709.45 63.979 710.305 63.979 711.362 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
63.979 711.362 mo
63.979 712.417 63.123 713.274 62.067 713.274 cv
61.011 713.274 60.155 712.417 60.155 711.362 cv
60.155 710.305 61.011 709.45 62.067 709.45 cv
63.123 709.45 63.979 710.305 63.979 711.362 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
55.459 622.056 mo
55.459 623.112 54.603 623.968 53.547 623.968 cv
52.491 623.968 51.635 623.112 51.635 622.056 cv
51.635 620.999 52.491 620.144 53.547 620.144 cv
54.603 620.144 55.459 620.999 55.459 622.056 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
55.459 622.056 mo
55.459 623.112 54.603 623.968 53.547 623.968 cv
52.491 623.968 51.635 623.112 51.635 622.056 cv
51.635 620.999 52.491 620.144 53.547 620.144 cv
54.603 620.144 55.459 620.999 55.459 622.056 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
169.001 682.934 mo
143.527 682.934 li
143.527 597.47 li
169.001 597.47 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
.274 lw
169.001 682.934 mo
143.527 682.934 li
143.527 597.47 li
169.001 597.47 li
169.001 682.934 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
true set_gvm
%ADOBeginSubsetFont: UEFBAA+Frutiger-Cn AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JTSFLN+Frutiger-Cn dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B869C10C79702113A5392D3818523A163DB9007B53AAF6
91B17E72> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JTSFLN+Frutiger-Cn /Encoding get
dup 47 /slash put
pop
%ADOEndSubsetFont
reset_gvm
/JTSFLN+Frutiger-Cn*1 
[32{/.notdef}rp /space 6{/.notdef}rp /quoteright 6{/.notdef}rp /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A /B /C /D /.notdef /F 
/G /H /I /J /.notdef /L /M /.notdef 
/O /P /.notdef /R /S /T /U 2{/.notdef}rp 
/X 8{/.notdef}rp /a /.notdef /c /d /e /.notdef 
/g /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /x /y 134{/.notdef}rp]
JTSFLN+Frutiger-Cn nf
JTSFLN+Frutiger-Cn*1 [6.9825 0 0 -6.9825 0 0 ]msf
152.826 639.343 mo
(I/O)
[1.68979 1.80849 0 ]xsh
grestore
gsave
354.462 220.401 mo
558.94 220.401 li
558.94 76.401 li
354.462 76.401 li
cp
clp
354.462 220.401 mo
559.902 220.401 li
559.902 76.4011 li
354.462 76.4011 li
cp
false sop
gsave
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/0 /CSA get_res setcolorspace
clp
[.291976 0 0 -.291976 36.6837 766.228 ]ct
[703.619 0 0 493.191 1088.37 1869.42 ]ct
snap_to_device
<<
/T 1
/W 286 
/H 201 
/M[286 0 0 -201 0 201 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
img
Gb"-6Km-a([dO#Ggi;5]n!n`"GBH2$*&C0lR$j?oaT>\T%'hH@1G^gCZX\qCFr]Y?P,_K=.hshWh6rMH
WiNbhlZ'L3GLuLHk1JNg[N`oK^HK?>p0;D#m2bFMXkg`33sW%`0"1Lt[Xk?#Iu_4USY+rUh)?uIgtt1U
D#M%lq\HqkaZo8*EMOiX9m&kTOcK).csKAqhVRN`C]YmK*lRd/f"9R_"32Q4S,;^`A2`>'5P'n*3mqq6
7q<Y)8:M0KA[6dDeIMQ7X8U\!Fl;H`ReF0"ign1QGk_KSh08kf%5N\L%UZL4o=H+/8A@;.O`dHErB9dc
RJPBfltu.Va#8GVi"Gd20K/Xuj8H[ui8OAqr;Uqdn&'LJ,Q/s27+RK\oQS[-`obk+qS''n3;L$B[l-2>
],(rS3!<c-DtfgggOHl@]=#5\q0HOtlej(-%t"<Pe`T^LGPAMc-\Zbff"ZP$FDpWuk18hV)f9D-]QqP)
d.8csH))\`2Y73IS\q#Sm@EY3rG8gH]*lR>cH^n*mVM:Yr_1o*caTNi[Wd1Jrqr8S^[E*]bULX-p%OTi
"`,75f2jmeeIR`F]P)N`kB$moDf<C_]oL/pdVi(irT`/'CO99Tn"8?QZdjM@m/:br[e@/<%Lue%fQm,b
j2&RWXR+$LE/dNu;ooSg;FHnE+>;8,/QUD$jnJ,B+X!%eCqeQWHMN<=m<u:s6g]],,Q0M(:pga_!lTP)
`Vt,m#Y81s8a:/ag3>7NXM4]5lcIi5if]0a99<E(B<i(jW^D#uX>hl;W\gHX3oPHn@<YXZ7=i1XdW]p0
Vk)XDJ?8/*otttVaP,<mLXm&?8,A51rQ:t=NNLIuXdslUGaPfIBj09GqsO.B]e?"\gpnA&QkPjUT^W:6
0dJ"ob<mZ'8i*hRR7>m4Vn,4k.kNVmmS17giOXQ"E^=ROFF([s`Tnn`HU#2gq;'WQIT,R*3pP>3`_d9E
Oa^O2)67l[X+SQPr=aQqEtcVt!!t;;2K!s:=^uZ:?W]9n."\^<-pA$^Q=.g^3fEIeV(!o%)"3A'B_JLM
Pnh>3F2E/jZ,44ITCZpRL3uI<MXf]&Z(IV;rkjdmT0Ih6[^NWP\T:0iOacoUh#pn`lbI[VA+bg#gtR8V
nc`D&mll&"e_K4!CuNIr,S$0^jc]Fe=-:Rl,6<uc0YA<Tk-8X]\1k`iZi=:>?Vcf[+[K6I-Z;\C%i0Fa
\&p%d`%fBVP)@0co0!U+?$l)1p=#pHYHItMnCPFqOYJuHDbKuhkWh4FI=DVa[I)4oO$9&#RLG172#@%;
'ljqVKr$SE$mp_F5ga6f52VgG!QZI+HuMI[)@#_P8%+au#HCd62=@69!CK;)USWELjefjDp/!WEVE$+O
6<@EX\9)HUimR2\gNR#>gA'pco3_G77q<Y)^K5@=@(5jA`8A2IoWIY#BE+RjepcrHm3n$t^$VA-^tPo.
D6IjFXfib`qVLB&IXUS6hT":+%cHn9?gk*\hqQIO>J#7.=82-3p7h<ZHt#C@dbf_E$#jo>R)OYtjXtX$
M!j]RdT^3Mp*:6)b!HYRE#KD/jFBfI/=29m'"'3<>C"_#?/S\ICpKKegVTA[V[l`_-^nV)NJdEDI""2Y
\NX_RDXl0:qtD.Zs7.Ofj6$Z4]a*@3>6d=e)fH(+O*%2t%fJi%2KsB&OS-%+I;=%Rqrc\Gc0[[0mB+.[
=oIm`:YRtsqdaQHYHP[mgjBQm"iTFS^RVkhRo<GN@>^`d<Cd<1_5<u\C^>gT7&'cnJJ`8)=YPkk'1E49
\`"E21.OkLL]P"*0Go<k":djH6IR17\r/`7)q5O$bb9(T80tOUMU>MASun:%f#Rlt&nA<i4oH2ZY0AWV
H1La.=3nY<gkY3OX<[Zgp$:V4S__0jUO=0TjLr7U\ouGe[s7u1mU8T=YDh;jh:M_Ue:+"mOM(;$r:+@M
oTbZH(5&6G5UjOU3(UU\:7$KF65P@^!6U]UF_3+r/>ESMj+MQ-'&:<*4p355A)qU'ROIkS.t^)<G::dF
NFK[X,X*0>*Mo0?%@h=coG3NYb#pM0b)%&$:^M?F?.WC6cAWCcPf-?-%4kde^3T,6e#sfWJ+<L"p;VPO
jR1ETiZnD3oP:b@GBOM=gAT!9\as_:e,&D'e^lH42I6IjmN,mn^^YbaobSDtcB_O2pkD2B21?C6R`9"!
kTgS-8`VDkHo6R0Z6s^aksBnO(REL;U347$+XAXnDe=fb'YZaTWRg""@>ZZIc#2O1@_lmJ.9@.M_8Dt:
!o6FRV:t`'_e92mLq.-jCm/VDPW)npSnKu>'RD,p(b,pb(T%t7(,"KoE9l9I^0KDpI@mU3XWt35o\ZH/
=3u8\XU_BLhKOg'lTafS^GmVlH?JEppC5`4]mCQ6pXHPr7tp6Y1)c]SVDD=j%>gcDnW^0b0ppr)Tt!1H
<-C6o@3rmKoanPOc;HX]`=?P^Ja]T09Ce"^0EaeAQdk6C@HsKkF)%u$S4lmd!2Cr^O.t#i>RE[MMr0Zc
2-T6%>c]"ueG&%&]1Z/K\`/`drEt>+?8sl*9&&**5!LiKmDd]&^\IAt=0L5bhL321mJS;WUa,h^kg,Ca
Mdj>OfK(GPgY;Yj@.;Zp4Fd@Jb,(B3qR2RZ&g*s:Lr9l[.DA8g6=P%[IXsL%d1sW@,&mVg#c2<AWENr?
g6(U]8.djZ`ADdG[_"b_Tsd>Z?rT(Y3`p6VAB>62\^hWc!Dtj6N?;.:V@(W]q]s>WYsP.=KQIq?Ct&;2
I7;l[$Er;k9k0p%1nImCa`#?;O4G-pRNa7<b_></kD':Sk:bW%IJ<!8h`ZIs^:CXo7+RM"62KWaeMf=u
*H_WEX^:D_^"D2rf\?=DrRn$f%pI;O:G+1Rq?BLC1bQp/fF<u(LMSFQ&%?;bRj:7`B4AOgs3$u`F/%n=
8U>`8(2-^q'L<-d'4.IGH$O0V_/uN/1QcU2&\seQU=^DU@IEQGA?ps4<f5BrVHff*12BPf[8,rKc107m
IGLtKNK2QRm"$'\DhXlFa,h2)=e-YkSF,05A/q_X'ZZ#]:&M)o\=TCF$]E2PmQ^^5lQ9KK>i4:]ds+"'
OoB_#s$>6$md?##S`a4h*IXJ=A\%(k5Fauh@PGb.F^/TfD-#_"?-Huqs*0;pJ"s<`N%r\^*,LpR`ONF^
<$8&n'A3B$7?gqSjtrJTS1&A%8>L,(JHCHgckZ^=(IdI:1W@e-k)bZe(<[@6M^-\;aV;<[%$6a9&t4ql
l=u,h/_-\QTQ;?_mD\Yq.aO\a^WtQ_[]6.34FLW`-d3U4Tmb(]3XCGhL:3DAo91\+D`rRAo[sa.[Pt[V
8hc:tpX%LBf(Lbt^^mibnTo,#ID;+eHXh-Wp#c+jqb4]YhS1H1j4<)*o$,gg@]b+s6R63"750H!cBP&+
>]Y_IE.@"hZhI/"FJsfARRLsb,IM-&q[-mjASqn+>+Ikea21(J-j5f0i#>Vr$&5Ae_!*jWKi"ob_N^hJ
.\+:[V"<%?7BhI98?^q_%kinB04im?]YVRTjRsMc8/lccS^gqs+)7UZQ]b5tOHa-F;dj?XD*_c;^<%37
B+dTXgAi6P0pjV\Tb&&fZ!,i-hRg.:F)gX5=-()PI(?ZYlJSi<gW&99Nq>7E!8#61`qoQ.k2teFcuq@!
fR?aDn`I"*p<Lt'cH\@5r%L%@OBGOn#RmDa<%,>.,'5'6QtRtgRE1*1`;j%5XY_]SUV0nifcV39A9[.a
gTp(73Pp>V`H8)"Y#:IRDrN8"/ncYd5f7WL4FOHP08cS:'`*K&N>@Nt80=A'1<4?6??.^*`m`O4U5Lf4
'dR!5oDL`9I7Ci."0Ia3C=637A"]DMfuY1M(6g.E;F@B;^-#0tSP!@DSIo<\-6Z2$ktB?]Q5:<iE.nEG
N>rq'd+(!oEW4\0>G(l`oLFG5UL*[>rQY$$CGkSi^t6U&lMB4M!3O.$[D'!Aq0,&/^%Wd4[k&XWM5Sk_
BfmkH^uC7@'KQFk'N0Vn1`qd?,<u<3B/1Nbof"Q0RmRB!gdZ(DK,)gc+oj.0=G_:.RQa`hR-JY6NhNt&
D"1&C,*C,oo9]6j$b^#ViMiDgaW.]$7YF#=T/%fB/3\m6-sU%-Bs<gbe&n.tU.j(Q(7HqDgPF%t\B,*1
6n)`AKtYj1m]B;bV+O*tBWU66KIba+"YXDC@`-+F;OUM.cE#0NlP4RS"Hb!*81>B?^U/%Gk(?m!?[fcI
8j(OarZ:o7?Kb+aC3=C\b)I@j%8B%&&KIc3OY$S87:d\M$keIKOfR#Y:J[`]Lj)CW.5j:Bhd%;K+Nk@)
(^5%34-nW&/"^M%9K'JSY>gIF9.%eme$Vjl`gW_+NBZTh;Do8Ma"uP1&Z3'I@rq`HlCj,n=8A8;C7^1s
4#pX#<p)]ql8-n`T5@U]FG]27(h;*XoAuY@3[?uA9Jpjj*-\*-51:o%WRpiFq;t)$,SVXEcU1#JY)Z=5
Qg8>s)bk@TY7a<T42T?>E.UDn.P#A-RU!@Jq<h=FIer<`TAKV/]DE<i7qq<\Ifo'K3S`=Lj9sTAql;f*
[iU%Rco(/+PtFu"_AN[`gC5[[@X)d(.N_$RdV0E'PTT1e8db,]%WkK)'CqnXD8iC7I%Q9in#/J]%JMRl
qb^)%k<QH4FL0;8Xa7X32d+CmBOm&\d/3EJQWhVHq'I1,P2pH&US&&WToVbh&qeF-\G.IMCR&qCa"Ui?
S?'W2[*gS9LhA4$(Ff_m)d-8.(`*PL(\29AW^U"S,YN9SKf]&u'lL)W1YGIe.X"Msre-9:6Fq\T&<*qG
MT?U=Q"jqo%SES-&d6Kn[OZplmMf<dftDLh`m$T;5C3)6i.MW=$eTf!ekrd>8H0F<I/3>PC6q<$HM-Rc
c'o@['>BbD[9"JPXs<G#8@BMS<5P"0-pp`DCLI>]N_J''h*TBC&O,VD5*bP^`e/J-a$(Q;!i6%*l3d[)
)Id2Cpgj"=@KWU;)2b\&O-r&RA<gQ&L'_6F>"]_c@P-*!VJ="i6e*qIQ@X\"X1@1tqVi,\;e'c6[7=#f
DPC,7O>UC#T.ELVf<E:&#sINJkAt&>V>0"+fBsKs<"=2fPW`*iSZScZYJ?)rTuJ#XUNQ@_6DTAB#EVBP
E*].#1E]aYQ!o;q,FJs"=UZS`D4tJs>oJom0g%XJl,qgD[m'iNLED&mr[q1kO`dJ7M,m\Z^\HfHR@0J;
U*<B/:F_W%Q?qK-Sk+DBb1=,-Fj;NiYQ]%=c6NG;:f/W@@K&a&MQ8)VWKEff:rd\]W"<LY#QMCCGK`Pe
.a.=_.SA5^)141b`[(#tosdhpRB%#(0ik"702N.FBuVZO(7Ls&$[iA6-mbS:d0fF*0'.<eias9F\Wo9S
l8k@A?S&$ZX5a^9_7F-t'3W32AAUkUC8%.]PRal(4OY;70TqJ90>UFb,,_G;e()MI[HP/)_JD*31lfhu
SO:49-mBT\ed8uU?sMq$2IJ49"sQV*EI9i!S)Pbj/1DL.T>,L@`oG+#^]4<1G8!+[@<JCGU;$U"gUXl*
]Y$@Z_8'Nb-km#J7Un3AE2FW#d6K^,&7#`Q79!K50nn"dh,K(ESfs=Kg`chp_)d^Elj/]\*uGP#*ji7C
L(tO'q_2q\F*1fFT=`;"h\el$Q5$gm$IsNh"Gl#7=_F&1,?rZ]Wu3P`X,iT[QnV7ViqXAWA2W[>'+UZ;
?t?7!E'>AsQN3Js`=8Xdg;7hG9@`&?e?0XTfb2G]@WHrJ@]#N9TosDhME4[g\PS3TXi!h4+XYB01R44(
$=eCl7O$bgfMX,%!MW5K!X4f@"L)p`M@aU3'9RbOmcnEXlPpq9?!P*jp[2*iIC6Mlp5f2>Nq>9^@7fe9
0B5<IC<"F5gUjY4p[?YHRGHhp\Fe&<Hol9CpU9eh7s8_8mC_.5R-J^9D0u01p=://OS[r3Mj]:\U?X(b
0o2n&`j&OH<&p2G6F&c4Ceknk",+]>87\/[jR-SOcH_oHT"k<hM`\BiKSN%DM+!=iOqJep/n;6X+L=@q
)WdM$)%[l2)W^=%&nt?Fa#FaE[k9Q^9SA2MYY^3NaK;L7*pU!eQ`*Qo1d0M@/Qpal$tP:n@Yq2kRk"63
"(pnj'#S`AB=*m_>Y-!;Ap.gK4!NT]8TlW[nG[+V:`OI3KfGJlSh6UB/7Znh;l5H"h&27999=4SeAW3C
9Kct"$@fdE1t=iQ?],r,7RnBE"L'Zhc6=qW'U__\(M8_>@^m=XU'OMV]&8qmQIHHa5IPTFEG=D2_gC9g
p\!hJlbb4Nr=]&nr]5M=o"pOg2>#L_p&;%sLLfdgm;-WU^DdgepmL<K?bBWl[D'8dnTGA@=0K?Q\2]tM
T;sns0t9P,KhZ#Jaa=OtA0;.@ODHM5Y'"=>!OtIZP&e_r#,\;:4S\9LYJ0u5bAZR1<beWR/:kVW)GS#E
a+jgt'rCX^Pq8GD]fOcSFCF7Q_V@iZq;1\.gi3#C#e.gJTQ#B-5Sb6^U>XEB(.DM_VP@$rT4f,qb3gl5
C<b&gcOp[7d09\XgH9;-!qFGOZAAY\5QR`B'@L0:S#MQGAhf(9:63G"O!Kel@gUW;N,-tl\O&bUPXB)8
j'2b]+ng"nP''PQBY4s>gIRfLU/099L+@4!c"$gW"Fh$lK>\lm34b%oE>KJiTldOAQ@$W*#U'Hod52(B
'e`NTjckaaO']Q3EqfR(-VqKZ?$j8uZaIO;C1H;s&R#/!H@K2YT;[M#I;^-W_\I,#%mAue5;g+lJ[hu]
Hu&]Bk18hcrp[grK:K@BrJMIJ2fD`?pR@o;.8gV>b^g=NBSM*ics`>_*(tj[nf]t"N'rimeEOsJ"-Z+(
=%;W8Rf;a@)_[dGHM58:n%\\rp7:M:6UM&R%k^XGTJF1X!a9pH(9Un(5<%=\csP\Xg=b60hU4X>2`9=D
e5B4IR%'mN$=,o%4@/@lVR!&"Ztt.l>=)gc6;q<%6Y/r*TtVZdhieB8M6q0kqQRg7G`1PQV'>JX!MM.<
CgDkq6CA7<T`i;5(@"L$D'Bo[Oq*p2`_I9m]9DWndN,28Lcmc$4ZS=iI,&ZYF1b71?7YIpj1"-U1+^ds
'Ae@7U-R'B&=uAM99`>b:*jo3_T6O0/=.^WK$fj,BW`RO8lGoC[5;0VS%X+Ef):@7If/H`m[J"B]=AK&
c.A*W2>#L`p%lYn[9%-J)d@5mB6d/$qmgWnCZE_=]+&UOOn%rm[2R'CfOKbWL4CGr1?G)Q^)"n4__>W(
"<O-`p'H^rmdFMsF5u8^CZjk.k,-iK06CL34EgVAm%%>sT00jbjNC'&DVZcl.1WY:OVqsZNThN'?I@-L
f&$^#F&-FqG?89[kA^1jq>Q\c]OZMU#*"@f+aa]!kmSfHTU\/=pkG6A_1mQmP*Eg7s4g:ZCCt-XJi9/+
*sf8h2kI'K*ug/YSBOA2Ur12maB.]8(Fp2palr8:pd,:)Xp?hJlJ*:t\g,%;VA-Ah5eTu_Su<o@W+4(0
M_6hYqF[+iZ1'a5M*Tb_[*8Or,Q*+RF<\:=&<:E:J^'Me(d\^?ER025N[P[/V/aE[*3af,WWI]$,V#P%
ZfCmV+@SMBqXmnpAafq?RN.I_0<Y&a\bGprjZ!(.)gOLg`Qm2gpA2e[_3qNM0[mt`XdtrB549D]9[5)0
pBmU62/&/oR4a0aPm!on-W8W+.4:Zl+ZKO1+ntX#bU^o)T'<q0F8GH*cbrZ55^2WeG?/otlu6V&dWFmD
90Kbe$pD,4nG/hp[r,PY]!>R;=Wu>\?*IiU,"#fJN6EnKX(X!Mkc=%fb-,^/.&[T4877A2:_XrV.sAqu
ST$VD`Qau>7<;9pZ[5A^J;:$r/>oK?m.>O6GH&VZY'_d_1EK+.1a>$i[Zb-UlNOru22]?sc>YhY58-+Z
8>lsprV8Rs>Qqi#e[[ijEOq=Iga\r!P>B[VH\u@a8aI-I/jSZsAQXfZa#W?ZojX;INKc.d4L,e)UU[%3
?kV]<eC>J\ZGJ<3,X)pc5bXlf.TAlY+G0Rm>UX%o;pJ1b?G1LU`gs_;^A__SC\,6Ss0)5Zd_CP9>-^%e
2g2[e?;hAp>?bJ5n\n:0!s?*1ji0On>p+n9Qr#=A:QmL:3hk%),uV?/"nm1q$^ntXpINR[kSYDOs2Fq0
=6>9.=uoiFg6seO)cBl)':Z$H8%[6jqm$4-Xt@"6c*gui2"okaV7ZJ>gq&!I@rNP?,u('&JC:s1<'H0a
6aEP!R@:-pV[1d/Sr,er6Vo$VSr'8CTN#i6Urnt"#1;'U6t\L9Ku:mYkX_8BfOU;7jEM-cq@2U:c6mV0
A!o[baEG6k^TZ\:FR&N3_-d>E1"6dXCVGPZ&:SF@gL[pUHEDn1d_qWUAWIO(gG;F?@?=TD[@Zn1I,t=g
U]*tZ3iV:'G`&155$5[T9,U%s<Jj8o6#a+M$MCZfj/3I*)'mH=b<ccm>+JlBO=iE?/^>mO_bk;T6[;E)
behg!Q)hC_5PXK^o-:Pi$T_NPi7Faaho*h60@p^<1=c*QTc=TXH.Fd^Qr%%!N(CdCh*Da[4cU&LaRMAU
M5s.q2(4V#L8WD/CopR,S/0r;?+"XVkK;?CQ0%lAT#AIJKRoGVT%^Eob0Y_)R#.-Yq4>HpSrAfjP*O4]
GOCEl>THqW132FKh"@-ET7)"Rg?krkNO<*lrW8pJ^gMdL3#J61##5+38j!F#45uY>ZH/:^F2f`U^dYCG
dj_*b'N4-[PEI3Z:07R'`!M?Y+>JQY[`$eYQQ6m2+6D1GTH2;(NCC,le]pnW[R5V-CY?'FA^#^)BM1*o
XH\1-6?^(>1fPSW?_SMkE3#"1-%!Hqgq[CCa$T-,$->rY5cAs=%?I[QcpUP?)LiN_5)DTm;$\E]$3e>?
c=j^&$?<qJH5b)56;Z#c:2#H1TGKZ*gV+th:S7g*F,^+7FfjIU$d7.>hgbLi&$ORaBV!^A2h'u%O7Y*"
^QL/+a_*85bUtL`Pa?_%7l'0e3(jN$o?hqE'N^:QlYp)LN2ckd"KhkFM5Ai$#+!e=/RM_mqr$c;d`B4#
<EjfrF(80d<Bttd\[ahqUXIRt++:jPH*T;EZ8HE2-uXF3k0DfA-VrlChj_-)F5lo,`S5U'mln>YmB^`B
#CB/G!=HLM:M65<F9\L3[R@8-JHK>;&1iYONpD?5J4V5;]UM&eCI`E#o=\.4WN#!=FI<b9,=KOAj/?3>
N\6O:6bV=9I3c3t8q="j#hDBl^!l1C+oQ(&aPfmbE3>GZPmP4X/A5/`^/1Nib$a:tSG_%^-rBq2%0%DY
e:4ErBCoH5;2f\]i<1Dc($823FX"V,#Sc$A\6r\M#jgR1iWsS0K7U/P88AVM#WiHI-Bq"jH1G[AB^,Om
?^['-EO0Y>,4O*LjNRUcnV'V;mlYjeq9s8BaSJucqYL'#rQWU3e^`2/`C1$hfC%eTroC>&X'pQtnb%>Y
`LB'b<sN5[^Kt3Zp#VMT9eD[p,aqgA,BJrg&Y>c;o<e^P%`+7%BJSL;="FMBTt)-7H,]RmA%eL?S%a<M
DuP./E*%3a;d<h/V6S1ueK!Gp*77UN#ILN-RZlL+&nZo7+'kAM4u^hE=?Nq:ErG^alse#SQ/5#,Q>bWN
^3&K7K1@El?XJ2+4"ig(VcW]iq2iZW,SFgPAL#l##;"DZa@%e7KZ1F@n>tPA0LP,!("qUAE/'jo?`[)g
D[T$t(^qaHXOg+_,Q5JG4I&f48XaOm/taAZ0p*dM#XT6;SL@L1)N6%MCGm`plWV_^WSZ-$3Dr4*bCb2`
!IlB7>%q,9UP'nj,BtIN'b)@]^dP7S&VIlnTL]p`,DV=r0t(Jg*?8Od'-Mo:m'o<[Jd4SOi3$`CnCrOD
,-"Nao/!oRCLs)X,aj9-Z!EG:**nY)>Wo]H@qH%W$@Voko2f_.qa9$0mggJ`P5Su&dNe^slAmFD<aWVo
ft[!_\[D.rjichj?b^u<UuAZ1<?Q0CIQT;J*Y]\lP=RYg"d()VE5cinZVNup7o1Bs@=jT[c?LC^,2oL`
@o@CE`l;rP\UF/%[J:3*;uQC&bulVuna1Jhh9GJl[:+4>^-HctL@quC?CWR9+"M-1:7U[OG]ITfMjq%3
mu?.K33dS9YHTi5-,[K9W-WolDg%iSdZoZ)2s-`]I;eZ8FD+c!PtD8+<?N_1GJQ9OGW&):!#L;>E5VfP
0KG#mq#lAW_Cu"rX:Zuh60R6!GCnlQ/=(tMW9!%/[#F4%\,_L$P8qa6.e,W.VB*ts9d[2m6]m?T`u6%T
EjK8=k(F!,s-9?CFMj[MaRW^uH>t'R[]:@t77_Bl_el>C7l&L1#BtoRD-cM1m;:/$>+G`93Xn63_LhT"
P(sl!,2%`sF,Mj!"FrWt'-PI6c#b:r?u-t3+WSm)Nc5%:6U_$B.2#kN'i<`927]s`i6dmA-[bmXm3%VK
mG6UcUR_#'WV$@1D!^oY*BnOH06&rrhtqiaJE?[eq+nf4O2(Ln[=9;W4[\/1jf6fSS_h6sS<B<Y*YB%u
)O6PWOdB.8P*0>G$'9t=AYm?j"7=\n:#&ni?C7a^kg(=:L]uEKBTK2E$*5cODm"n0XH%1uNZ[I7RN6=K
X[qhm._1"NqT7pP/mk$\H#)B]eX?8gU69oIkWn[_/%mP-8Jrs`rS;`8AfCPnbKc/+cHl1>\2jHOe^s!1
pW(9A,cAS=6m>i:Qn+a8_,5.[&Q>Rg\p5^:"*B+QG"<U;_F2kl?mH["B0frW/mhUa<SpnW<aM#S=-/l7
QQ-QI#R`L(B))rp6oAQ!#'8=S&aU28e;nFD7A"TfTA[TcTO^@MFL[\>&e`##!gnuL@9d[.:=]D>5ZVn/
ff7WU4E]e=PG`n[cLta<ctP!]foa,qYpFG$2S_[)j5PFpr2esER6iCRQiq^C:E.0u#-l[oGb,dFcoIg<
ekhMcQ=16>]&Mr4E>d"a_rmpMhRrU9fAHM9^@>g4Vk'sWh9Cqm5;>J%OoE/uY^/N6]c4\*aOJf?)PHt<
Xf];7o'7Z%ZPSc\1VElB3!L$jV3-HUJ18h&&?Rr80IYFVlQMD%kmcKhEG<tRbp0!I98h!:98cl;B,7BA
L:Tu]C(m$d6^oRMJD][-N+aaQmV>B2n',^PNGYXh>b:9Vp5@,#PO10h40P_Z/C"e!of$2\R9[9bQ!]Ue
*N#d9N*2N^-nbobqf#.86UjQq7Y[q4RrTl(g?09,^A[ca(LPt0Ed?ole`DaK$nrH8&&VM#i,BkZ^e/1D
!*FLL8)^s%(mTfN$IL+*R@tgfA9]<MjR(jP>hdh3>uagj?^MTL)ditmNsHA270kE-\8=gS%!SolqEp\"
n"l[A(s(84[Y'G>(QlKipfX]YEObtF#lE()V_\<U%Q5\bYdZW$C\=[7m4h,odkI"LQ3][0+TZOb3?t&a
?tP$P3Qa9(dMUmod2B;0A!"VG-I@MS4i:7]'T_/r02%GM-_05Z9bD)U+o'Lr:q=3;Yc;\dn_3p3Q+Qc3
IIlk#lYGgACK'Y;X<3StcRaSn+EP48_6IuVi:l9cMauYekntM!92@9t=?%LUg7U7uq7(bi4FKs'_85Z@
WHrK$!fb4_cqSgtIWiTh@)n8gWLJg@bEH3J8"3!&niNlcC@a#BZrMkT2T0ah8%2HOFge*Re>4]i\(nSZ
3Ao5Ae5a+;1N[bJlLMgQXip<sm]:LgQWj;d-2Gqe@gt<WM;c1CX>j^.@sU_$3Q-[Xpo&bhgp-k<$fc@?
DbiO+4Yo=Q4kSNAel5e:RiWGV(+@fh*9`oFX!7b.Vi-4#:PFS5`oO<Wpu<b8,YeV!`SmdU/1D?)k&\J/
abA!Ih9@OBko%$oOf9*hSCuZ;bDhdV+>/M7Gk2sOXs\Is:bDf%,fAh*B;k-1.)ZGu(rQmgE<&#Q=e.Wq
o(]2F55O?mZ/]KC=Za6G;&D-MJB-Tp#Sd2$mD+3j^fj#a&?JQDMY-BGB1Z*`(a=b]Jhn*+P7U?Q,0>3`
=\-AE$##T#+64ISB8TAmaZSru,R7DFd*8>k[UWoXjlXgCT07Mkm"ZBqHC9e6ej$!]KEWVM!2t+0$eSTd
>Pms@MoEl+$7\[mP@DLG-'cOE%13*n$4%*daNI.G9A*[G6RjsKKI!@iV<?uI?!4hN1']Y0DQh8:9_K"(
PVnf*\!A>lk(Pa\7eP7Wp,AkUP_V.2#7YmShHXg^n&f@E8Xc,bH@0r)qXV_pbL;O@>[!^:98O+[/'hRj
5Mt@$*FdT1Vca4N!1t#?AX:=?.4TCkJLJjPN:dlkRVTIJgbmS[1tZ*fgJLk1'pY@1*Z#Qe=3Eo39YS>4
$4$#&`EG>Im3+FtL!Pu3A9oJ+W$9[OmN1?G&NN.n$,BIN=/:bL.utiH9?:mclRj_<ccQ=ECdD0r7D_:i
A/3(><9-t7q[W\4R'$uMg^\/t0ar@4!]oZ6GS4tDG1J%eT)A5EO$ER@It$nOV^I!SFo&2QK+eXo#N11W
TIsX8J%'V#a9g2AKGjqK[9hfg/AhdN#8/GHXkX!lN"KcqiMf!a#sNo[-BAk3.`MZYLJfEL2fGSC"7WJe
&:u]ik\1Cg*?)\?q=_N!O.JQ2B'4,5jfQcPZMqrLnFcG<e&B;F^:ld0FL9E4K.<.2KES@RI+`PN8"a"%
o[J.(iY#_L1K00hnnP2J(ZoA5?Wjs\Bjkb^D5aqV]fE.(-D@k1]V[*MTfB9i.X\<FZaVB[^E[B+W+!3F
[\L*JA>&\bc"hNAX=R,,hRU:<A*H<MIG%G$e]N!k=Bep/[!-DpkAYLnE.(?k%jrT(g0#%l*9S@ZC+RSb
S/Q.TFJ3niVXreX@qU3^<C(;HEFa7*B3LNX+[hM2U5KK1qPZCt?8A:J&5KU<EJ@XWTPU.gE#]B_j,eO!
DfZhdlbsN^F4hT_,gj^GChmesKu.,$?1iMl8U4'B9jpt!=*[ASLtR^eSP"m=Agam<e5&p7+5fC4\0D[l
\$^?@mJoFt`qI>@a8bY$+9(\P++EeNVe8esFuj]iorJo#bZVl`dkG0F@tf*1_`Km<?(?bdF0\#a7Yj2p
3D*Wu>t/EU%AqL.\1Ba0M.<S_HjPr``_)LI]oTrRKl9KdE5Ss20X;OKirO!L0Uh*^,\+p^K[f@^+i#7.
^N8`?o4L8gDX]&erA3ciX&ffQ4;]%X9M8$"GB]t6l#IjfZ-fMZ"Qe4cKVkUP2&a5cY^hOKT0U0Vg8_];
R0WJ)0/(SrcV4rBG-na.[l!8LQR.k1K\)GX[aY>D0;bd.$Ac-ZaS)(4WKE'n2l:MpN0!V>Sf]"uE9HBC
L%0kRObYkJc&D9a"aR"8q@C&:Njb6#"`$Ktm)mPf[\E7&G@HLIZbIu9ZlsF$Uigs[n&Ees:hN3k@;Je1
5[q5Q3Du%\Y)X#n,_`3q,4o:jBs:GQl)+U@173:tltJsk'T0\9n?l0%5?$PGON$:-gXqW/SS<$k(CWXA
34mo!4+]^/(DdkhJ`%@&Occ3]h*'QEgli9aKn5hR%RT>*F5;(RWN];h="N"D"UmD(D1Coij8]+pZ2aUt
a8btoV]Qp@H040*4+OCGVd)ug#+`(effKaqYdMJQT0q;cTH*='`t;.,9WS[qFN/8?@8no[=E@#bP:Jq5
#go(#]ODM%'2hP]WOdlgSj!J*$fG_$D4i^%//POA2D?nV^]td:Fs*SGW[]U&SXc.^\8^\ja.L+qq.bE0
o)H>CgA6`ta"pV2m2[hYoPTYJ]jFa"^U^,H^\6.-hDu3dc.h1[b<,0pBX[s$TQBR@,3/W3ei(5ISmHo[
qsqd/]:3#CerekH?JF5HrUd/,jicV:76HbE;C:p+M<B3Lk^",g>p'Y4#3Vl%jJI\Z7AjaoF`c/?^,Yo*
e&?Z8g6ZH0/e"WO226;+=ZU="X)j9Fjfrqs&[d>Oh=[`LD7Od8d9TK"TAQ32Rr#&U:E8f'\p&5\d`'%<
QcJOO>F:iH8r<.1NV=F\/Y4#a8Vo5mLT2k_A'54RJp_)o,fc:pnm`Rfdt`:M0$\Pl:3Uii("JNrB-`q@
6Zg_lWlQ;oR'.df>8V(?-\Zmo7=%B*BRN#i-A0O_W:]c289b1_M2?hY,=A1<j&3-1U9bNW`>NQ3%s;kX
5p08`(^'+)iT,ZrZZH)pp=!M0a1tef6u51eH#7D8CM?p/Q,KJ^8TI"McbL-#NX2P(Nb:Pa4n\p?bippU
fH("ErqOOB-Vo9<S;!NB7\?tP+1"FcClS5>%Xl23G8a.;"id&8ToV:Q:H?63+D@O".*F3\$H@;]N3bq5
3P*X<L/=M,;CGmr(;mAm:`WC9N`,1TN^jCLa'a9b]'_+AF:QTMPEdhlckX[=@"gL^8H44MhO_icV44r3
IJ2aFDgm$3H=PhD*o,<"hKT_&/\?DW-i_6MgHQ7.s0DX<AA*DX5=*lOf#BeW?GBZ*4D+!Rg:O)nNV0\4
5(>[U3gruFU,<139n!X+c]uQ6qO6DZb#<&u"#AoD1$4j\XGW^sSsf2fEte/g$P+=bqr-i[UO>Qr)QG7[
DC@En'm]r/>isL9&HoVLVQuSONk?kY=obVSh3cUAQ@E[]nEH^ebDX&pn'?K,GIFY8UUVFiA@N3o$c"5A
6s3G(do)MF?kR]tW#80U`OXrQkogdqEPjr)bHj?Q'CA0CQ&Sc]fdW6J31m]Oc\N]<W7`aH:_@8YMm]L6
Y]pI`/_YkscU5!s>-UgS:b2</1_q3l7\op.RfiUV:iMqa[Bl&A'T"*Q?j)!27n<?bF3Z..fE-'TN8q[$
no)S9NWWgkF<4%u:R0)?a#B*9URjUA#o/A=QZN*78rL0j<luRN*$%fp5C:WRoPs'#-_7BA&G?Sn>:5T!
,N5F]p5BCLKELom>K"R*aQ(Re1Tn6/0Us^':ZG'B&i1\A[4P;;)k,q'Qq$9'U(WA]'&si\%jTK$![F*g
[0r;e8.aM7jUO-7.C=cf(/.X0S-..n'Y2ZJ6D5l;#W`11%1c)L*1U27\,nLsT"eBUrpn%S&FF<50in=`
OS.qc\0(0oCqS.;rVN'fURg5M2+;F9;$WZQLYMc!q=^^\G]b^Jq<#N<NkMjPDdInfT7?n$G=r_g>$Dnc
ZIAaSr.K)NOio'?75-&)_</r>r'OE2bM$-@.SB"&CM'bE?FmajkOJ5k^V'I=nZ@T@Q<*/F]3DV2.V#K:
".H7,R]F=V$iTBA_oE!T"paE3l>uj6.rJ[_G]8#lo#6/QoA/"O%1[TK[+(m(:,H4ID(A<QN<tgNH#93#
.lH2,m*,d@<G?o,KLHanU2$i**uh.^=m27p"'T6s/Ths,RDDHL7Nb9*I,t?)^t.Km%J15;)2/hZ;4+Nq
Lep<IA=tQlU(9!EI8+I/<l#S+E-T0Z\[]4[ctG2,0*a03G#"U6"bT\Gp5mb$m7s1U5'+aCe7n4Zrc%3g
s5V!-IfIM]l]Y^%(]m2Mcie\C3!=o^Bt\pWI7"&<ZBF3g;PTF"![7_/9l<9Ibh;EJ&'l4WHg8-.fi*(&
[STJ,Zon\5j+9G]KKEe(g^aWHOL&b#'RL85)F6=f7[#j\`2mE\S.Nlk#)9&)fl@j0(*/b0Lh4D9iolo<
afG1%3X3-8SM`lmi#8?=ZCFcOK-eqj/E%6i/6cTj9s99!2/o#LPQQc\dc;0&O&)ra??u%uZgYX*B(\q%
or"3=,3pnE[BmEUs0qpV`$;=`hed9r#KYWf3-tJm00]DFEI#+*XXthN3S4u.m:A!82'u]!i5eI#=H)DL
`Ep8lSqnYUF&_RaK`qoK*Vg/TPF"a/kD/5$V?!on5.qJg2*P,L<>&<'(K=8if@,m:e<O'9Ane9%]!Bu^
nA3)kOf%ZrVAiUW<u1\rV`Om[mT^\]bd><AW#Nq?Ak-W/1BW6B39ei%RY!5#:QAaM:6,!`CWL1k:[`2G
SK+UJ+0'%V:'Ea'OM@MWh#W>UhSMX0(`&bOn<WENjXUAQ$8G*rr"[')in+f*5ZXP=daqFVjf-V:M+M6b
S\<Q6.m#gS0G[<H8i;`nM+48n`l80ilI/PTrVlP`*^=NGLZ?Jj-6.SZYQrk73eItd$CaAVd4'/I)Fm<5
Lchh>/lHq-h>KHX5gEisTOak)J:nW"cjV2doI":3Iq!QuPI%/^3M*R3=?3&"3MK8/@VoO1+KXQ!@=og-
A3&X_?p"Nci>MeBXIot)h9Fam#*<CM#/nGmJ4Y+o=eIZCjOJH$kE_7@14+V;XU@eI.tSB^k1CAX7+)Aq
;=5*18Z?_SaDBcSB9^18_:BOBH3U750&B`;\bH$Tp;Yger<\/7@qtc-'_r3$p#eNd?RG)ERH;'U\K(;Z
lU/?;c.ma5*Y0"lrV>AQ0=S[klG_$6T=$M"`l05,L0<;k)O4VM(h?62M?"hY/g<&'8nTuC3PrS1A?j-I
l>BSeI%oV!>MHaK'7FM+3X,h(-:cc2hckPMpX60:j%Yg'F_-CU\\V:B&Q<2).i6re3t'bGZBm6<J+<?r
V2I]bDp@(P1YZ0$PnNOi?^X#t^9P7/"u'ukWICE2BaGqT2kFfP%j+>Hq,nm&75;].'h`UR'-hYUD$?1N
EUcmIAflTC/-uWIKio*%+`>(jJ?R>W`"2L'Ge8"uN8gcYG9Gm3%6t&BaaFRAPGc9jPt>Ng2O?k*dD0GR
,^9(JN2$h!6XWL()Xl[Sk)Q$1ThPF$-`?t<mm$`2%mI;-Z(k.[I(k\9VP;I?4IugKTL`TC%SN[\\24Pb
J>,n[$p']3FbTEX,RKs[-_XWZLmX&sYjat7_SQ)mfe]O$*'\W5dh=+S=Il^<Z$(\&5qk2N4:'8adj77+
El,)`i=p&1aUq*e5uH!.^,(=/O_TO/P)?8SqM.R%H?p<P?RjY:MW;P[Hl.D:6IW1`UM!OYJM!Z)A>/8,
9We,#-q!3j+:Ce^+:5.-GTocdK;0#LCh-LMDsunD\SHEWIJ)V2hlXVA\\%J,d_39+^]49WQq(]c2.UQA
*_b@pqqh@[cd]"2=0E&B:,Fp'`5SOQ<I/"ZJ);CKOQbVU[$^cCN/!(m`l@SFjB.[BD$c84M%p6p0SR>=
Tf9M$r)e=qNR!h=80^L0SK0"D4`ttPcec9SiTe:!F\tJ>DF@7"DaS[&m;)YbI'[qlqT+qerboN^g=BG4
>a3Um;n99^?X8s3'&](@@d[q\aA2HX.>[s-Al2#_?BTM)KVkFgC3lOhnNt:_ABRMnASjk6>,#qOKK^S^
mH5c$%?cJO.tdc=Ibq_)VL6(eJUX>,M\^gn,!ZS_W??,Y^P<@#:!>rQ#qf[N=Wum'B`r(1dlDc%3s]6j
YV6-:aHclTZTT"@Z:+Bp9LQfGgH)loI/MKnF#FS2(_0>0TeJ)O?jHm-,a&a11]S=/"G]<_5f,iTM#^\+
.bEX<'b1Wf0e%!FWec8h'+oU9N.H#h,$Z:!(L%iZ1M<i8g=Y.>6QKT;-T'ql$doMN"df@-*e;d$-jfBr
?lY(Lds5/,CAZ"4-5J[tce#RIUhAk(4ZpCZ,CM-5T&s._0i[BLW::AF"K*-4o.Y9h:M@+29SPEjD+g#W
@e/3lE'"-I%S[-GD#dVFG"u]Z+Y>9aC?@8_O$7p[h7$apYJ&dUTF&F![nG;Ee#u!ri@;G-Nt-Dak)`rc
oo?5XmJS?k&)1$<07*/)n#Ih>Hb)\ibA&4GUP"1dZa+VGULR"F;ak7h<^@W8RFqmLl#F[rWR[9Efib9t
_*JYfnUA<:EilO]2b`<Fi+%e1.QpQI4%I=O9FTGD\!?Zq'OR7M\3/Am@qhaH-G(rVX>D:3Y\d/WcJQ2g
dbe1ie6@3HAYcXj3@RW*YVY(+>>l4RB]K;B$Z]/C;r^T&UJ$F:l>.md*NG_oh_KPPB4ANU[N[R^1Ft"T
D`11>r8\I+mZAZ]E/VljaLCrZa\r1N5lU=5E@kd"9W2TS[lh`9k3^H*P<]Nr=MVd-8I1!M4e5('nCS!d
m\Gj@7q_57\0)c2$sO.p%a-j?Vk/WN3GonkAMmW0'j=CO1nHrTO8o;GcmT#:jpGp]"<7K'Kt62_BH!/S
"VMRjKS>'*-l4_WfbNK(6q&>S'HA%oARRh*&sQ16A^O>!4Ohp3cI'V^!T`GMK7_HP(G$Fr@6:2tB-;l6
Y!`h`a&!T^_$OOA"c_=_2/W<2/_u`R/>\u,,a!om7U9C]MC)b']lg23:]D]:B=LbY5a$F[)01]seMB%S
+:YV(W._mAqNss.=:%=1OXLGQhE`GQ$#)#*W3oC(XRGME=M/n?lLfq)4b!+RMiH!KSXo_>hm]qBrp"n.
buX?5D9.$).gr_^^4,qOjS37\Au2+K9'p6_0a2fIR/jNr>MDeDbMD"1K.R"ueV3Omd6YV*@DP,^;<IZ+
T[]5$K)Al+QVUk$2P'=!mUb?LFXDUR@V!&0_FR5`\aupjSJ>Fi"j8\b<u2(UHFUUAd?0b6ges^=nFkA<
DlsQBPU49cMfL&?`gW@>@jCo)E>Egu=\M,M^P@t[2Y(TUj/Pc4gD[BkVm*Zf4Od`e=I0Jm[^]FHJ>lq_
>@`PmZ6\u<:gHkDEH7SYVj84a.fkeL^_G]/UVes>-T(_iJcipq'jJPo9%YOA`npFM^VLmbWauTG%j`)(
@ku+6(*/.G!%.324U<1r*/jllLn.+(RaTqL-7p>uc-$`n24;!!.@&!VaF_=g:ad$17M>2m'G:mrEC(jg
:(D6!$Q90r_-AZjB/Bf^+M`dm-jjF#MZLEqaB/HT`?RW:Pl1Y2/e^l),>fj*0\"2J$?AVOSWRRj,i0D/
"V]N*N`,9c)O4</dP=q^5M\)6!GFjrKuKh>+u#ERPq/sJ-kqjid!>j`B,\u#!*Le48:eo72hW*d;SAe[
jkfMUQKK-==Ql"aP1r[\qO`M:+W."C8e2G3kGO[\_mEl**f0q;r6=&m@ge2f\*r,Lme\*Xp6UfpH<^=C
Vp;c$EO%J]IV*$]p#aQS^5:CjeUsLkT5f;>eKIruX1du(+,mhbLLh8m7Vb7Q3ga]#Dh"abh0ieC[X.]R
g"P-_rfaH3:S*N+:KCLsa2Q#CH@!/<jX+>/=G0IfIUYrS7<kVH5bN=4AS#\")M]V58kMX3NsZ3a#n&Fu
Vo4i:A/,nk(DiFX,c2L)Ob#5)1m*,u@]n9De/Xd1_U7TNfMHd%COL1m;q]r:fC_f"mp;L]m.P76>B+.Q
qSI@/UDoC[%9]ZmL;HpiQAU@TFFTLC']d@;G(<Un:6MTW.JqP0a47$cZ%8p0lL^8;kgZDYn.;/*T@2%e
&JhJBnWHY+[=3<!iglPTVT.B.K!cafRc$H=T1KCV7"uTWI:NO6E/p*KFKgtb#mZqq\MT7;_SRE8@:3lI
N#NDjB@(Ej(poRAZOI1[g&ZB@%dnjU@ef@(^GoLeQJ<Itf:2;8RF9R9c!VenW$i&e%!&4C#REE.ajD/b
7DiN9@'C"QN((U>0F.mD":(<'O>pbZ"leGIGD'E*F1K'D!`DE6ZNtM"dSW7qL]p23R\SJ-aYYQ27R3(B
=?=>0J[U;A!O>C]Be:S$XeQ8\Klq]7]NAsH$'YoR]H*FD@gb7[JVNqNMD!gHMID;%+m<fkFeG4J[+$l5
#e%b!PpUHi5uFV/s3QGgP[(dnj+O8!Fg`ZZ;1QpB84Y;EI7C:E\3(sT#U_/P5-K3QAo;&Ab0@O/p4o&P
CiA\,m3f*0qmR%^J,Da-iP2I;pU7P]<oi]:Ieh+Rf&k7dam7nnNL);jDf'?-n#UGEX_f+e!Z\t_Z$XjL
\$`XBl2\!3h7]A_^AduR`0c>/qQ6qcH1GY1dUG[88oANa:f+AkB*\kQMi*CLN3X._UmI<W'U>K%[TAc\
BDVBAdaHS/CHM0=fe_itdZ\FHMCXU*9(OfgD.-a_8kPO43*bhg=BsaS<`J5qQK7HK!ou!b4,AteBWWd6
b`:#mM!=B0>b2m:RI@n3F^jT%G>iVgOKECR&%,@^).Wk'2\H*l7Z9O`Mj'Xo2)A?`H+*,"AE1U9<G,fB
H!tf4H4]!=!P]H/VZ<YMqn!#9Zt<ZV@\!JKQ1MJf:QGuCG-mP\`;2lTl2dQ*]YkjPY#L(0]:O&Ks,`&G
PDHI:f#MUPIO#`V&g@Fb.KLIU+;HW[P2k>^;A]IQis7s_)0DQEUbh=gidbf.8a2"sR@L6c#94+@iG*dn
U`/(''dVb##T+Tf(dWt9ZQkR9ctF\d_2(&t&9nVK9OPG'h#4p<N:(!RVN?H21)J6tSF*j_5"7Qe]*[[%
#$J0s>>Ad0C0I">^CEb%0R4)/aljTR8/=f_"M-CT!TYfCglj..Vb.C*;j_c";KuZ:g+2Y,(jQaO!q@NA
M,k6'n!dW52+;La!CWM#:6@n7;LgNm^n%>V-kllL.2X1c.T66EXM#j5$n("apG2"nIKkA,QCXT)kA*s?
Y]+@pR_Y8SeC7im?bUOCrnW?j?`\,b['eb[C[4]e`o_2l/0Ia%T=Nh32up*oc[IkGJSXR)hdim\rJla5
lcRN(g;^2<mBunlq0$olq^[-jC#f3K05oXU1"b*LQP1;Sj.D\Ogt#U/^]cQiP*;*QbKFsI;tKS/dkg%T
$e&kUo:"E+r<%.J-;@c_;d*q%:`taWLoW!SbKnCmMhm0!%1P-!WRUdkQo%`\]MEcu5YMZB-&3%W<a_G_
1I<Q*1t5Q*<>?f,L6e.%9hkB+0+;*r2"oI`.hb8Z*K>>mc%S.a5&(SG`sl7>DeX&;lKTp-SEml$4?Utr
?<`OiRNIq1k8iP0#nN+f#"V+0KbbmP888-TTdChr:.h6lFJua`V)11U-oEG50$<Nj<,rgX+r8Cq+FtOL
LGQt8rng,FCN+f$,SEA9&0?mrQBi.!)@X!6&."ZV*#N2m;/#S7Q&!XD<9k>DcilaMZB+?k2HYMFRV.7`
_C.a)hDZc9S\l2r=BWPW+BK@l+@nICNC)a2fF!=!,$'MQ8g"7aWDqkho(J+MO0Jh@C"48<-m"EpKC'g0
5<]P^JLpetr/<UcDOnC9,,/O#i%nC]i"uT$,%cWV2Lo3\0l>kpCH)L6O91.j4M<!u]>?K^/[MN2]qbjG
Kit/V+J/HX#_jp*k/u/!>,"]VBV1qgs,`V`KRD+m'T#nq7p&ZP=d7hlL_%mZl:"6+<1oH^e7uQsbYopd
DAo*K-?[e2aZL@J$UU$2^c?-?TB<;-McXgM?+]^i[m'q,chcC.`6\&,rDq#97H8&opXtVR^3]WU9hc()
hTEu5If/__!2u6fT'b^<h9E@ZCYK(Mb3o#hlo2PbJ-S;$J+<KDB6/uhV%nt)AW<O_V6Nn6Ol>-s=eQF6
Fc?R4[C&:d5s@Ir!+Pa-)?+5X6;i&ODGj0@3@@%oU+.NK4sVa=W?Asolu2Fg2MVJ>`J-lPKnP*a"bd/9
=b7lC;Ct-LJZBBo#7.a:FpKRfbSR6@Bd@/*<bcu.I<9R]YFhht4s(p5g?%iTQUWS\%.proP\*AF-2Eh(
RsXH602L/*\U8jJUoCmJ[idU:aADD(`gAH^ahY1VLr.BA6a?]b_L2SQKQmSg:(mi%6,=THXai_@Zfh[s
MD#dp!Ln;q`:$MVH_XoEP]FQ7k9pIXCh-pA6l;=c`8NCY@3MU!8Q(BNO2niBWT2tOoj5@+JHA;K=[V[Z
0If?:#o<r9mcHi9\5K.+T#rQ;1,H+%.WZio#ln+A3"4FH\K#h$7\`lYqYKKaT'dMl:@##Z)e;j3>c(E0
BpCH5O=,`C",;_eJtPm]4*g84#sO9E<UfJ`-NqZEf(rl,X(*8R7l15K7\f=DE%;4b/-H-<AWLF'VA)W;
0bd*FVaY&#9Im8`ll5O'Mfg@$c4Ygr=ApKCcl<iQ'i&/REATA4Lh%ucE$B8b8n2b77aD6bWu8]aa3Wc4
*u=2^*ZgN-&JQ8G@Icc!aNgq:)],kES9d_l1CRcMN:.XU=L`bM`ncE2^ARi*f5&,Jlci/,Iq>po2VrhM
c1Sb?T7&RR30BSiW`JA_<4\9W$ZM7;%.q5_#C5@kcF^'rei)*/r9;nZ3tKB0/f'^/a2I(/7]5G4Q%__1
J4<..EC`f@>["Rc6Af\mAU.<g^72ta/0qs,\hQ)i.4t5mE;,r$DObp^kD)355O=0=BCD6/gTj4%1cq@m
1JfK!7\Pobc5C;gJOZDcc8g*Tfkfdr-BSp0;TtkuD+P5cfWo'm*d_]pfAeRYfJ=b5jWI^WaSUbHf(Il?
h/h`%[:XD"^8DkYG!c/akBRDg\$f&&4EpAGOi'[j/mUZH\C)poZB&8%EolFrAsNqXRo>6'Rq(J7r]nup
NDp-0!f9OT1/T(L([E$4=?YW'<4qb8am!rGe^A23_6]Gn`mQmAr)2S>cX$P82kU'8o/GNNmH(O"opI<H
%q!)!nAW^9r2"%$5BC?#r42bFqo0c([3K%.BQPX_23K!uN.P[C>jXn4Q*s];2C%h2Z+3nWEkIQ0HgFeH
af'brFSCE;c&eB!3Yq3G"?kQjR2C1?*hT[@<X,H@e`QH%_h!&u0UT_69P\IM3nQ"!*nD=K)3/*@KZPgt
EBAF1%M>CF!iRCt-JWX]YG0f#j)Y%VQ#b\uZIo\;(2B[:]gh7-\;L)[?_Q1eN#)i/<3DV0jSe&!fkrS_
=b\f\$ql[5f"Q72)92)>aaKe/5g[\U.`ArBIMu),7/SZDcX*#+/s&VJp$b$GE[bUbP@b![O:X=3f&VT[
3&%bSIc:r0W]Y@lo[/GtH'5"A%4<<),1MFs-<;e*)cU.5*nQ7FGl+FOO3XQ+KVla%!KSRiZ7`5;[:Vl4
Vku5%_u8UG'DkN60:ecl\Ls^Y`Pb&W6UF7q7;;fZY^G@GT_4RgIJ6t'rVk."r8kQ*Dspp!Dj0knT8m1W
=oYJQc1nb4r:l%3^4#VHiqut2R^JO='Zhic)P'Wa@>$rj>?m]UB'P@7^AHBOroiN0Ie-Y@qQ#,E`P9.W
qAZ(,iYNZMFE(mj_"?E.XZeNuZ[(i0a0%OJCNsBo<fK:hH1f>1IFmp-)4AQ^Coj6lEtN.d11&ZqE:ie%
o4K+jprMEXO']O#ABi=/$oZSFI-U3pj8$iRe"?>fdUQbpP>h'<<Zmo9gNS$Rh[/'NR9Dglne^kVq<II,
d1qSX9&mgkeYUrW(Jir$H1CIUj!PpP]D9Cuc[FdBDggeA5Q9WBYC?)RVf#jdil6i0QT%]Xee^e#KCqX5
R/sTYXa7'T#m+-`A(gBA'Zc_ZKGVX+$R9YACT(nO3UJe\$5lI-chaAES$7)qU)&`sl;Q^p)TS(?;5IB`
T:YSb!gm"1nj`K@_qB(DYL\553&!0/8YcZ]isDMeHniT$En0-__.f)dUEViVdL/Am1#/0$Z8@5/WI\*h
W+@GXXtUO!Kd75+N'adG+C*!RMoC6L/E[=mc#smu;d)<k`=41$4[s+lQrZrGZj`\&,pI3X?66;^7j@@9
Mg.:BSAGk+X->+L?+kWZ;BsXf.b[KT6Q4Onf5]PU+m&dj9neL":Td_8S_lPX.8ae/=hhi3lVWcSJ+Ugr
ajlgU`_n<%EsZtM.:nc"DQPc9nfdNWT$BA0).+L$C<k*+=e8S-ibi=T^F<:IBcMFl:;\Cj/e-782Mm_*
BDTn\\b1Z[IM9g!iD4t&jtD26^:mnM!;u<c4'DU*e)2$KG\(oC`U?OR/:NQsQV'),"iB_nFEd=qS:oHu
YLgMdPqTi?q9Rp-H1gS=2kRYZfurQ]*^4i0fTG2u#7h>&LU4trnG)Q^F/:n&5.:Nhn-C;Q<\o%#_Ut\T
V@FVPKFg*K'B8;^l,g>\Y('o$jKU5%cCI0/)^Akk_kRqp=X0]$dH8/jHINYsF/9+IM+YA-)OXpV<Ed+=
Z-o#c&'h.F?SF9p)C$S1[an\?RR7MD>[(=?Ic^LFkE"E3rUA/5jmQOSp@HUZiS)PScG0"okFVLnoa;Rs
*^@5^m-s@m[@sS)fLXg'2?X0jOI6sTYK[b>(FsQ:RA#LV]U9V>8&h!sacS,r/#Nh2S()m/NTp8OSkl!b
J#(V=BPT=@E[,>@5c&Spi)V=r`3ad1'-"*8(K*-*1S0GgVtV4Rf#M%c4DjbJ27QVB.C=?/5XlW.[*d./
_PG<2US)i=Q?K,,fk,M?2)?pZE^>HOW`>EmK=Nt*P@<hmj^]2<_t@c8cfp5"S&5uY8K5qlFX4+V2/9f?
+VBr.FZ?)B&ILB=;ilAMdaQr73NBEd\$LFb:b5GbUis)dkOJEH@@T+<)64`785QHn8Z<Pnc4U8W+:nlV
'B>*Q-^KZhlhQCf9Rk6!%oVNi::\.OVs;7[OLj<m4L::.QqeT:PfDdKZbC>$g;R//m]b4+ks-X/@F!@M
MF02MYr,=O(<VZi,?7C@lq@hF0pdQ4b%Zp&[4CmNNj85c-El6NqP@9mp)Dn;rC9*JVdFqX`lWSr^"]^g
s1]]Bmd91BNbE'\81I)TGuB*p9SX2K[#lUSNQ.ZH?bZHZS\$h`>^Zb5\p<Vq,A/&:-oPlW4%,=tR5pq7
:``fpJ+DC4pDU0a5U[/Bn&21-Q*S._^^W/<`Gue6<[LhiB*W(IpLQ-lVoq+Y4dOC38&q&s1Q@6jH8t0s
KtU-#-`4nlr.X+XfU=s,+t^P"i'_@$fbMZhXP`Bj2eNVaeg-&)B8s?%-sH'-+3c)E[iW:D2)3HoAH1U1
?i@rJDnPY3kO(HZnbNocNZMPsS?@p4Pc#m$ZfAU$<X?bbWOMu3`R2WJ:jAiPRib@"%k$+d2&Iq.*9ih>
j<\o:cAl31VbF\NkG>I%QU8Djd!L7#m6?*ocq(LCOS/a#qq"lTM2Xp,`O0eJ='M3O34SG<V6c6#<3IFh
SMETjcmkQn3.h-#b%PpaW^EI^d2>QG>]Hm^6X&O?njHu"b8TXJ(D\J;ZTZOZ(.qAL/QTPaNeg)^7Ur22
>#-IiWSuDBOJUJF+\cW(<"FH"&6_E$cmb2_7#R3fA^MX?c>LVh%Z*l6W73j2eXETePC^h$iiSp:imM!S
>p,)d?9'LcRtNgt7bEB?1O,5>k`q<S3GAZ,oUb.=esZ1UB+CMXpun-Haikl&(c$Qp>/aaPn:7UbfrQ)n
#VgtW*`H7[5ZV)7-S[ZH7[ME]Kbip3<`8m[N$I@X$r3psR92\KAj[cd/gXf:C)l4UfG7ugDB1t5jQF8P
ge2#Mq]Gds>JGU`mC.T>HRL6`?aB\.q6]Vj;1C^[kj@9:%fu\+h07b%s8D?.^-deV_%2"Unb<4gO[asO
'FL!Kj72?LK*O#83X6.;kO/#@T=OjKds#]c^38te)n59@^&I6k'3gt%FG;Z?+gX2B0c2QM]`-.(09l><
h6,*qC]<+C>>t,`(CrWk)d%tF;U*c`Fg)HNV;6\VadP2uGA(`g2Dt^gND'Na'qNmM1>:d]iQVas$R7Hl
,H.9[.-lC$T!A)'g?Js@&uA(/4;Q's4n6A^6=K#@0iW@0-Q7X-_hY,@<gsc_KkI$ho_,J<nA=@khRdjs
M4:F;/N3YX5c2rt)m4sb<U]]ZGd%lqouG)X1D>c7k[8_BPojo[#5Y&8#;,.b5V1]]N4Y9.YCO)T,3^!_
aKNl`'U*O9>Xm,\V6pa<GTJdH6mS?0K<ho]o"i4JB@#8+0mCu+1tERL=>G6?Lr&(DPjHef1L?)B`q@o9
5\G;=L+8tq=AN6lHSpJs($l$r[Zm5=k*mm[I*3,E@0VKlK@+(-(noRI#SK"!=F\*q17B$hU-r-/_AG*4
V:=Nt9Ws$iKtpNB5RDg^kMH+(rtLOO"92#rOdGobRg7NfWF4LsM0SF\rk?*eIjc<0q>r^br;ng9j*Hkd
@k9;[1&(oWS7dW\$H)&15A:H-i4GM+m./TeIPo)1.5T#Mrr,B'G_h:]AQG;UkS>:ISLH4gU1,J"`?`&)
WGY(>(ZA3EIGsJ\Tgs$]loPiY9W!SHP)VKO(_S8G'5*65a^W-T2WHj+..$\5\od2khg+VNYC>M%5Pg/E
hYQmehJ]#cnD='0[3FN-5TcoY8!:8C"am9+]_c%4oS@_K>?P*e`=gj?IUQ[Dk09CimbN<^aX<[iG7/f`
hNPEdhRX&?k1M,"hKfUOK&1PFb2r0PO\d`4l>LqL8Z3/8CPUMB[uuS7-Jd:P:G&ak03)Z^8+oID'-tOV
>oq:+K-q6W)'u"I(cGDC=o@5tY#H:2)44_9'Pi@PBF)U&eY,6J5Yd]RS0O8t'^K8F<1f2UTa(Dl`j*)I
PKhd_Ebg[*j>:+.9SO6t]Y>*7[lt4>SNaIZkf'ZBIH.Y@s6A("/o9CUG'nS<3mgPXCS?(-e#W_Q"ku;a
0jK\>=ec'J+KM%*g5TiN0=Gp-O<s&Xm-_M>kVoshI3,9u5pRM4l+lT^a?\9l[<R+nl1q/TXr%Rl1?l<d
BaKKAnPVASD^;A@b\@O(6J9*No]l:gkY-,@H>%%>g=HTFL.\3k_87&J86`t0r_,u*7Du-!UbXt.`GBh*
[="u<GI0)K`0[LeC?'ki;5GLg/>LT\P.2!%lS1!9i'r`==H]?L6FB:7kQ!+b8aDc;Ys'`B7_N\8(Bd!p
67""Xp4MH60npoFPr'M'6sL_.;kb2,OY^XUm;i76P1FC&9AlNIBsdbO<tra09DH,t@&>Z.jMKHd6\j5&
+'CgUa:jPHBTn0nd/KEdmZj0!*I=N:U6XY2W*`$4P\a6/.1.X1OOR.c>J`_XL=cTb`e6?Y0Z@h$l?&o2
R'"U;j->-ZZ>Y22BsP%T4Aj1QF_X@A;RuP_ZS0&bnnYGBn`(_kjB$95q>U9[^Aiu^MlFI>s8Ds3AA.m>
^]"#"[t"Ej=)n-50AcQI5J?mP(Vb(dp79Mlqt08[2_I=@l0b*H:Y`YZoM]s@GlHBs="ZZ/jR#;>2`<U]
T6h&UHi1mC7rM_IEVIJddjNF8N\(_M9uUQFMoAaI2%$mF>c'PH]<B!)b%1@>NgRd,j"+UeCCi%jCo]E!
9$fVh;BhLUl6K&HX"U",WtlYl_-@ke\lAs@hWiO/:)2&O(,mWQcVD]f<pIRJCE4=c*unG)%npL`PNG+2
2+87%OEBX-rPcUh^07XXmbHcbV`##*T"FRGOUL>2mbTt1\54+_N:lq!C8Fb5QK^%jWl8YR'T!(>:,<Z)
);J7ZfR87qhYV[Q[P:Tt=D9t6_ec44kJr@5CF1i+OP3'k#G=QFZs>(K;8U6fCE,80b4<3-UZ.,,FgRS)
0<m-f-"*3I(`FF`+)SG1rb+E_>$0E90s_choQfJFiPI9X%\_GZj\Dk9!N!U_Vqmk-j3Q:4XlVh*3#a:8
[B(sEb>j<8Mh`[A17SNC$lU^n4gd\OPU]](p)+^#ShOV!#=<E2UW"KV'sC-7[tFFjrO]X%HVm1L[lUT[
Mc-9Gb8%X54IF4NmCl,X=ReYS#c=[g[N@OEc<<(RNaSYA(`Aa/DGAEg,$?4'JP=^sZWX#&?Y7(mX$?rg
c/JN_^7j54jmdId]O,@Z$>F0U?Ca)'_h%rL>=#TOaXSu*HPrI2RZpqf6JNd9dZiEso`eU+oB"OoZrh->
:/<Og0.p#rb^tXL[XVkmfuhJM)/Z_*XDcsDmL*D$`co/m\$,hL5Q(02hYGXbhI'U's&bhSqiRKCc?m<U
kIpWHId]GpoNT*/m>EX4ErF:s>;pF$=\h8)&"!D]H110\lW:5pI2&osFRe_^;b*%.Yg6soE8fmLcTcRF
lGL(Q^BJ.R]mO=)I*$3u)NCn=31EI'U>]?aZ*C]^1(c#lN1D.5C;bebG.ScP3"+$.`sC,/J]%m)LimrV
X,FEu=dKZ*\.k`97^<r-<Jn'9%C^b)=G+GR4up)]FTnFa>?nFHI]tlGP,M&^Q?]m],",`9TVkmc!Y2VA
k1K43Xb/D7[jI_rlJhKWO&&Q:CAkth0i0G+lfCMaie[A'<`YtoG4Rfaj![nV'/7gK0n5P=8fg"&3`sR@
[8O\E3Aa^7f1V&gYL,rK<0(al:7bp=VaMZTp'?mpc87IAREHrc`Upt@E<""@,OA-*dYmuL&h/mZ@O6,l
h<Gn!SK4,#1qB?$]h*,Pb:#oc+l&1[ZID@Y%d"a8=DRPDXYDgT+Pl;UP*cLo8=!/m!JMHBl3S$G8FUh%
BXE/lUg#8.M.?[mMC4L0nK`HB"hXMNn(cI(o>/*_!FO9[VctDXZ]%bb6$k\=U`M>?9Ji02btao=jt!2c
7bIWlfqY<%Jh[=3[*]jbUdN6dg^3XMCMGNEX0]g2[+"<`Q3ZS"(ChNOGN\>#ch_ZV`"j(B/ud7!jSUJp
:e=+j6s+$Y:lAW#\[kAA^^pPr=?#OSgO-hV3k)J=W%pKh5<:j3ZBcpS4<D].6@Prn>FmDo;_B)E-umJl
%A(6)f]U!@o#n4aqsXRaLVNfLDuN;YHge`DcH#4KqnGoB7)<70k1:\E6"jIuJ*r"8-Qd[2M;-?>qp`l+
O'R2+ij2G:H2?C"Xo5<JO;Fqnb[`4=%qq1OIa?<R6N!6!YM[(aaQ(lih7<LFm@-lk4a\HEbi!dK>`!#P
]>N\#LIW_(br3%/Ks4#S8[4f-Ai+I!\Ortl6inf"q^No?h':P[cT;6a0e,>g_$sS"Kag%7.eFE`ZjA$n
W9!@+>tV6Pic*O5'ZgiG9[(_^*'/Q2oXV$olUUoYI[r3DY^WiVT.^Xu"&[dn/alpAg_ZToGkp!5?atOC
dc'=ZThpVWo+;7HYt1*'%!&>iDJ+NkSNB%B&@G]lrr*mlCUJt-IUT62<+S'.&m%,`n-.Sk$(ijbh#G0B
i!XST!/]35pCSaM*ljc\bKTT\+s)VQ;QYe\F>99R#PUn?`>sW1G;,H?S=Q4L2l$AVOg1hs>,G_IPD?A4
:hrV@HMDfMLp3mR50BA%7SEH"3SbOu%#dO@6:b$3>=`<u.P1kQ'*\PO"3X_[)1c$G<+,W1$(+\9(EXV(
`9S!Bq'*(?,*U(O]g?%<QU[Y_p%!gL?G"mRN5gU,L5M7".%]jF9pUOse->)BR9kc?6%&HrLd=L4,c$-t
1\^1:'&'IrL&%NM@u=!^S2kujM*QATA+86iAXt\.UZ!SEadA`a#tX_I"_q#sAi8sA9MqWH-KcRnK0r5q
h0s`te2KO,3j95\F1RVeqS:e)QB%877jlokjSEYfa[4^p)O!g0ogiKuQ)OlMm'YU"?i'>Os6]^@qo>?-
pfG6,jnARA5'ZPla63/YT(Us45542DDgh</=#UX3lQ9pqcd+_!kN4SpmbG<uq<kA#:Y^DHI:XHsb:FXt
pK0/@K#H.gH*>Id54\3bVscctn_qYehL"tQh5<L3R26pZH9INa.hjIP-%H7KQuoLW@e[t)C;:1oBlGN:
C@@`hR7+T0:\UbNq#J02grgLl`,[_e.lDX@(>jiS7[]9uBJDBaLnksIY5N6[\JjChL_V,-XO:I:a7JO^
5O9UQ?W'NV!@rCu,r3^'%OEpM?o0c&214NJ`Vg$S:S-7LEVo[PF>]NuL*BBRg[;F1:]q$/qYJX^A5FoA
9-c[NC4:&<bTCe<[.6U?S1g[)&Uun\)/@]cl'P@#"1"TdS'2An&HnNW+e(]NTK6&M*Zo/5nu9?SlH9*S
:p7P!"ll<&W*Hj8O\2`M9FTuS/rP?/N%-EUe/9!'qcFiV/V$L62utO.Uehn6*+(qe?3W4Af/Gfj)B*\l
j2#8<H>]-_/Vp!M)29o6%;%!+;(Z5-;-&Z[Y?%>hKiTg)Ma_ZRXS=mYYIhJ-Vcp(amHTuCKK?Lf&dUfV
SK&ZNeS7`m)ri^^__]KDaVEBr&F2?l8uQ57PYGq8,Fh8>p1d;fRDCDhmCe1T$T1eQ6?-ZJYYnCcg6kQ4
-9^$*B<&*h`t`DmDbXmS^@il<9\sYIbsuSt_BWXo1<-JkY]/C-\XM!hs7^h2GPpYiD(sA+SP3+_r0dBN
Q-0^H;23U</8EHZ,!!'a"YB^5>F5&cgq8'q>CZPCfAHA8TD[cj^\_<K@stl8prDFgO^pc(HK.L[HMY28
:7XU60fN`bH5'P)@r;4jc,Ztn56'icLLB-McT_kK+WE46\jY%L.A\C]#Fg@BiM#grZU^XtrRg-h+1lOi
lGZ7gS\&iWhnHXA3L)27@?P9IS.a5iMg`->>tZpSKpjBSpB\\EYu8LR]58T-A%MC)@,G#+22E#8FbC7@
&KS#Cg64=C"ssL8')8"iX^_c/SJG3tAU5r&<N9G.JQ0!hf5?.),aW5p-q,g"="pVO*LO[@db@lN#j14I
k")dW[/-;TCuXe+B?Pp=:XI:R/J(2WS3sJ=U*uL%`<V1`^49:GUT&WeH=8.kcX@OPoQh^<GVkg:f;bkj
qrX1[K2CE%S\oAi6sOQD75u;+Q>Ku.<5_]b,W719G1crU`*dX;*(e-pl06UcXnhd5^hH="5"8lf#:et;
`#$e0rKgDq8;+8L?Pqs<4jh-n,bP;#`po6cqmWY5J$)aR=BSp3=;i%pBf;I>@#-.4R8g"`@62W*dP):;
+]X];48810f^iLkc5h6QKQ1)Vm_)mH>s4`FZ%+`/0Of]!R81uOcV2SW%Lgo:L2IEZA;V+7.%)Im#''g!
.jE"#;T9qoI:,r8eC(,$MkMGbUJ`_W#K%igS(825lR`1?.:&E,Flh2.>>MAk3koe7!l-,!*Isq",uh8&
lt"mpb$i+D">/1A-$m1TFIV+#rbA]%&/cS5ND5`PL#D=;7UtRGC%u)@[7,H="Jif!98fnI/iL_Y-6PnJ
;/.-AaMRq9-U7XAYCHFRhtd0<s8:,KI*Ahk_afj^V8)hq;eOF`-74?7GT[bpk4@G+e/\f^l?haU+i*BB
-a)@?Fli=VbFa4FcI##VHu@-eh"\QEf0D8:^Nf4mQ,g(u^\6<j$^]-Y5'GlJnVu[M7BI=0KD)^4"XlIB
JX39t6G9Y.s+&5Qh(''*k4*Y=FD9f>kT-f%E%0NHY0f-;R2Q3=i><"^L[%IH$K(ueF;PHA;@MqsK0YCV
(^":fR7Q[a32\.%XCdC<B]=t/?T:&&1;@u0>[qkQK0/^a=,%QtrBl:m+DE__oGT$QXgMoFNJ6hO;)C`[
#hghrlU<!lY)lpkRP0qa.ZKTHdcH$PFg.IYUqOTp0,/MQgp'h!H%#)Tku35:-H-lO'<,E%?CeApV;*;X
TWA_<A#3F$`5>u:&il0kp_>3\/!s,0bHY/$ijEK3?5bE9_DA=Vbh.Tp)cEUhX"tG^<V/bI:e_!o)^c^K
?eHXj!@[_.<jL?o94c$2`;',gq"Qg?P.=9;5]aV$&\hBOn[Po0IbtXl?f0JG\#4T)hMtD#]`1nlmK9tF
KKQYCKp*?d2S)"G%AJk1A+0k$cVE.5<gc;>o!i=E(UKreM`6g$%d/VE\PS$YjnP3;9Xt-UL!_P0#!l]V
aJZ[5"06OSH+:6a\lPn^rkQ(@,GtdDQOZ0!mGt[%_:!##cD%-%KZ+NU`+G=T:)mDBQl0puU2nbh9pQ9\
6]Od:XPj`Nn7##'a:X8rr:rTq`o*iA*IM\^`-#^8"lS\)&j<+jf^(mE*e@(MX&Uh/]_:nT^]*NaYC6F@
5Q:>ZJ,P^'l$p5Aqda!GEBRMW!*1G%"3;tapWkFpH%M0D`Mp!<b@aTm\T.!L5]l>gUGj9E"=Q?[ipcb"
-Z2+sq9I6cQS4oAFQ&oLViIo4c&PQKbLMQlDf^1U6:nXiX0?pj<i8Th<(f(c6C[;9$Y+5s+r0p'r7;2B
muW?P,ppWZGk4HMS?uFh+:KR4\TBmG?B7HD__;-X:pjI71a+nC(`B1Sks8-r5bqEiZ5OS^5pN)mk/P4^
7o+#?*a@NOBOH''qMSHKCM@"S:q$U+!YqEUZd@:@W=gI,--FSHGG-d*EsHo5#s*B#<gPaLWan^J?R4V?
LL#H2D).e!-'g%oRI&nm-W]qXXD]/1nbD@(@]=IQK&7m;aVbMngMF-.ZrdG]4EPQBb/3N)m$,O0!j")G
Z#C2N_,O((_DW_[Ye,ir,3[mm4Pq+s1n1Ur?\GaFqtaNN^';^3.*>_mZmI.:9;QrMGjrS<;mgA^@lK%a
"=EKfc(^#^,)V467klKu9#R(`g<nC*.GM+ks/A/.5I#"MDSArIdjoE96SSeCgQtUs#)8R&$]]1rFnr>N
L5%VcQhtsi=L14rZ\5W_ac0H9M+VhuocSK*&1t^l>mahq)DhZ1''Ic?)(HoW3Fm:<cX9Y<"):b"BC_r*
->*i/C!80\(Y6-9?ALU-Ua$d.p14F8_1XD!Fe+oD29UD-jcUMP&n=48bjq-#(ZjFF=Lr1(J?b#(8%^N2
5C:W9aK9At'o.S"r@PE1fkV$(m,:]u;Ar8UP=_ED[:\PbqncFKr3c!@mlNc3g$:kKqrb`LhP[j?I13Ub
mnuT(EO)b']E,@D3uEXAW`6$Yc-..hI<K@SBmQL61YDhn!j]VG!%UTmYQ7!p^\Z$Za"ErHII)Tq+q@XG
=eFHg=U:4VCqnZD@g963k*%?,1W)+RI"fiZag\-JdsXql..<4`_6]R4Xk1;cqMd!aNuU3p]XS`<VGpA*
j@ZOT\'5V'O<dQJ#!GG''NoGgT@_K4:imnI%Y`qlJ)'8pP+33&Q,+&1P87dj>9@4r<_#:"SAcGJ1rb`5
)FBl,3nb7+RiO\t!`A2Qem].X'7^hA0V$tER*AeS=.uQlWA</nj3of^c^hgumIBILA$@iG*$$7U'^]GE
\O:V>OfAp'<\):Sqpq)Mi3,%@ZTGg3Mpoc#=P@RVYa!1LA7^(&@6EtcTLpqu+UYbZUI!%N".=PI;B(Ij
qCp@!e^A>Z1mdOSAh3C>G\M%V')$#SP!(npj6ti=_Y&Q#Hm'(@Wt11JRPraJ]pI(2P4j">+5A.RBb8^%
_bHF<R:8ZF:T2iJ"/4McTSbRZZ:3\%h-Z6(qih6T+A\rOBkUBge@8#MO^c=4?Xn&$`LH/QCIkrWWYU[B
-VQia+].-<PQlsrf"D22Un*$'Q\#A#1'M0Pb:bYR2.jTd;,>d+o0]kO,CX.qdQi1:AiM]?.4*t%DAQ4h
*g,f_PC,:+2u3ZI7qD-\9caW&%&Fmn9;dOL=%9'a/E$U(']7sTX<d5Dbi7"&*!V`;aF[c9G&dPqB>3kp
YC6.8hgXV!?i9WD;0r9@pHOCC^&":<O%bKoI(k/4CN*fpG'S@AFl1:$N6gs7\ZM&o,EH-@Gie38TPKTq
5'cGWf%0!#_HaG#aC`n-YLh`PR*B6I);)1Jm5/H1>2A!YeK/C&)GD@&a@.j"AoG3uYT'`'2Wj`cc>ANK
At]oa4i(Vu:JFX0K-hsX6_T<8.Mi?n#_ETjU![OQ.M[\HHG*'+QYn1j5EQ+,9_V&_KYjlt]C[M'Tm6J*
)3e!PZk%\#))Kn\+/Wt7Y;s9W^N"'tAC9hk`3TQ"r_^9\L=-j(572?IXU^+F!-sb_=U>2.`CPu[J>NWj
,u^e.=p1'\-#_SMq:Zdk&!)`I'Ep^-/<bqO$="^6ft<GV2.!5-I,<i5@""^'*3'`(j\gRSSPA4O$(m4:
#j'4GkX_J@`71?i+&jY!8u3Gb30Pot6ZKo'+BasLBs7-&eD#uVA1/<+q4/9rY]gV1+s)rqD`.88j4.sl
CN[0@Pq<f0%^Qhte'W+e(ef8X))^do+l"[NZ:BT=e](?5.7UH-7.'spXd\e!qBo57=j!:90O?UUOqO@(
M%V#Ae`Oqadq_VJTQDYqTG\bF#o*_QM#hhTX's'tLXP*]=d$J.=%`:rCd>'XJQ.R9q!(guW&55@05$"L
Gg`?6?d9XM3.6ooXI+t_BJq-fqrNR"KF1)ZeCoLXB2Ih$88Jl%(Z)"YnrXJrXg.#;e7d:8S:Yg]bT8KQ
TK'*;F,q'L$e<%3b&#Er]hZV)1DaDCnZ/j@l[.Ohr_J%8S)=-hiVFCSorGQOHf:)[(7-P79(b+]MsK[?
ML=Ab,jP,KmB^jIf,fG6r.To$5BQhUnO(Q%h=(*lm8et8E*U/KgL02_]8KDh/G+g2,.Y-\TFf1eHA[nY
[<`9c9OnA9ja8=NaV=V.'s#I2gF^>8PZjoAK@'g3J/CuuAMOF]0AO6f[fgFRMS^1brj!pZW+eGQ/4?29
F56QC80XA<E"_lmE'-"e]")hY%/?(7(%K3L\_?9<eu9>GYLeLF8>@P2C*rLOP;<JAd,O["9pF$61as$M
<2Gj.2.D8C-rZ"6EeQu`-Rl8O'[oiQ:HeaR(ChNM;CE51((8b4fYiD/`=@ISRjq)`n'C-;(,K1^05_e4
hg]T\BOhskgWK(lZTkRSFIEUDNG4'Z*D3<PkOWp\4tpH'jq&OV&h=+SrFB)n>bJm^R*4iRpcZt3ja>qO
kjUrp[OUNP`8q7dm6d.&,=X_r[f0aD0fY=f<D\npafsSfSW\)&jrj&ITj2OA:YR$9!nj8<ER^2R#E'gm
8@][q;]=_]O/K7EB#d_hFPk+#^@bLAC:Gu0$2_DR&&B*J-mdCumA'*&9n]oEJ4iE:3Y;T-Z-*FiHm9Bf
"L8`+6V;XS`jjm^V`!YVQqsC6A-<?;]b*1:)Hs:!.Bif6-"EZA/tausGQcVmR<f8_M(Kl.j[AsD65*3>
0bm7^=Zeht@;Iuo$RW$UiG@5)XuGD(f7tP&,H=Vm>8+L6IHK(pqer[NnsuEOlt:fS\Gh76IXW9XqY_Mm
s7Z3$gV0n=/-_,^iUZ*hM<RpGmLAt/P9CJHAkP.NhsCgKK@,Jba)j:l@(9Bq5t)#M'^EsbiNA34p+iaU
JkgkhK!5OHB&2ufVD$r:ZgteN=ml,Yp==QKqHEmXI!R82"t;a1_gVORqS!%>MlU/kTSLRSaqPVlSRQ7A
U/e/Q:qCdq"NL.,E>SgH$A<.#d%=r;!n@U&4Xu]u@Uq/2K9A)M[kP/$Z$tbM0O5hqDI:$fbP,(nVrlPg
dXD(J8o8TdZ.^&'HNMQ6B\&p+&os6Y9M-R3M.B5`>Qo!K1i;tKTGqJOV*\e%QtE3CNug<'iqVKpciA%4
,EuqWX2u%JV[B8OOa&Xt)<kTR]l/=5EdlTuo,n1i*2sHLdk];lR>?o=i4%&E(s/0sd),Q%V*p=l2)pO%
V&&2&SJG3uQ!1_]68=h_Vaj:k#+HI$4FQj4.[#<BMMCC>=)!nt6@l^q8QRUZX&ntDmh11OmH,i;J[?ql
<FI3lasf##=;W.lcF78Zd8FbZfN^7gqa?elq!(;lZ*8.XXF=QS0q&W;h,qt&8QiH8-Y&il"Ki!>'U2=#
o^PNQ?JO@nqg3Gd.3=c<D.5)n^^(YUUJZp%j\u6XW#,'soKG"oP>Q3Xi<4:bQJK'MfAIIO5mcsZTjC.M
e7e4TiE,#)0ccOa$+2c;B.OVl.0`<#T?42lqM_,"4&JZsdhAQs_5a*Og!7h7AYUlW>-5'?)_2l:?MsBC
YC,s7f3\cm5($f)0,b,rB<Ps=J+QU:(nOP0WYT]%S2&T!K:-3"l#S9c<>WDSM]jF:'rTfG*n2DGGP);O
gsa6s#tXSS@Za!XJXsgJ%-N8r!I)1pBR"9#Ed5563\h\cZ'p#e3HJa\I<di&GW;p0$]^0@DB:cbr5:t1
JK`[$`=c<9Od_hFkc9q.ZUlDS9'$[.$UM0MNEiScHk]_X?CjJ-L?,jgDjN^5-"p&5P;[@3m#;ZjY6sFo
ajS8sb4Nj=o&`5g$aT3=lp<+l7S,uEn/]fi^($7)&KhH.$E6oJ;(,G#%b8&KV+`3<bERg:19&plEK-!c
()LTBZ&m`#UH*+:Oi,V?`?.eh#>4)AQd_s)eLmbR0lo[lFD'cS]?BPbZV"pZY1!r\?DCQDV$`SWKHdrl
XAYuOJ@a"5;QGnYiD\KA+USs<ZY#sqi"#URI_^geR%B?+mQFjH*F0_!^he0U]a;srg<E]CM"R<:*+^*Z
7i7q91;pu=j5,$QhA"lsBtYr0bRP(WDiV"@:Xl6fKX41dJU`COY$Ac6nZWU#Rp]fU/q'@Q9%ZZbNKOFA
d#i@sW\t+$L2[snm:@Jh1oN9DQ'>LK+X(<I,RCLp>uJNEIO$1++;G\mZ$sIqmdE%nH<@)h()Ihi!alB,
UO"jbqNX+.<9NB'_7^bRLiaU6Ys^'FX&m1&CcL1AW)!r-*ik;S^n3RG,UZL@i<VR^B1"9e.X*iLBYNuq
abQJ`qQ"!'qUaVLj,H"THuo25Bcf^JIf"#0232[(msD0n$(JtFFh<:2Us8:2gqURCoMAn)5`+b#$Fu1j
$-nJbm#KA_>s8)jp3+>CVa(G!.J8qI`I>%qUr=-'ND.r9(JU#[\XGUm<.8p@IVjseG#%l*N;U4$br8Cb
^2_Hqm@0AFpRXQpl:e'WL0i?Fj/M_J>cB\:e1fWo$B9?bYHq<S=/.6.L#QWI#f;,kaObSj7!'Q+U+([.
M5B-V\A;Q,gSJ(QTqb%K,A%3hXGa?/*J&18<1I*_R9uG-"eD1$W$>+JWn3FCm+&e_.Zk#4!%>6AUQ[td
PfgC)4-&n-I'lT*EB@/UnH5E[CP>.n%gRgoX4:+N0iX./,FN;=2kD/.CP*drUV"/3#l*3o5XYdGW]PM0
)EeBI:b@raa"'S.IZIU`/!\;##XYrF_,+TgM+T2F#c,8)9I(3#A9*r5W`2Ll,/$3C3.C3l-9\"u&Fb<o
G)A^4:&i"BF*p"(f>K6aSsn?51l*TA*4h29-AQh?iWb<t2OTdjSI@eUP=9+<)B:An2e_o=oOb!4+j>Mi
o&5ekE7ep@I2lQ'RKi^Yh1sTEqD9_E\`p>X0p!5A)/,LHDt,>\Vqr2cS:-@0,fM29Xu:Q.b(^9\$6b;u
F=%U[lD<i1KN2Qi6^ADG<Xfl+;smu?,rPpR.$p$=.9XEMEat,_f[uMFRKeft:"E>kICS6":p]%?3OUc8
XpgSM<qjq1^60=?<H2>uo23f#Jop`B0bK`bZ;HGZP">8kh0Ufhpu46Iq9:#\n:tqqobJ7ED6j/JOP7a,
X:NXnGkePa;MB_?k8Tt\/IsZN`SA>M>'['L+YbQ;;AM&F-b`gl9_"nc)5>a1/8]Rq-r*:#D;Js":kJ+s
Xu)2E]R&l5>OH;^Rd_u;,.EVtSm&J7EeO>D@H1E!d9f,`]m/')ng!D=aLL'dLL(0q!>-_Kkt-IS'^Y2=
e'["%,NO^B@N!DJL]Z!IGh,BIV1Rr<Xm+Km"ZV&"L(bG_a)CW=6HR'Kfg@,?4MJ+Dgu\u*Jq<bhh<)+f
o^7iV,Sm:8=6dsEb9UTN-4<-_^]c/'7Y+C;rnrZ54*U+W8jlUAj+U0ihn<+<dqLVCc%4$rc1P#5O+uWp
grpZV:8?!,g[%\EXZfRdgV>)I-G*JP0K]W-#c<1R-]rp"!a0:-?8\TX[FN8hUm>dM,snQX%pg5o03\h+
;^.J4<#QuQ]2'DrA>h6KG/prBJT*Sa[g-cqOMMRN=%?Q$Z3W;o0tRF0lKeh0M6f2.AuD2-)4980Nao/6
]toMo/8C?6kt*bOb&@GYL$CXE]Nhr!ChcPFK@2Z@Y,WGc(o8nf?QYG")E<'tjc#OrWH,X43OsSf5Hmnp
]Zu>22;?4(1C-WFE(Wa7<7[.ao<p=E_`7jQWE[V4jqKT-DTpD$h*@:]'MoWoSLV)H:1PR$N<dC,]F/]]
=X2J`A5j@EJ)][6@\Oaa=#6ObUUbNU^2XL(`IKM$6uVOf+s>gK8+..-FfjWM(LD@F.pr+pCTkGFci<ph
O9rD<qI!17O3qhA(^m.jq>#=2K@fG^_8/EU/Djd>gDB;i-paCJor!!-9!f:B%tJHEY-<j=g#Btas0+:b
n`1VMrjbpP`Y8]>XR04VqadeP6<LA?9(KjHr9(71SpuQF@Su^PF.Uu9"@'MsqppVNolX3Up^+QM8()<^
=l*CJGa`\D\g6#,G4*.;_ItdIj\i'_VUT<KHAt1fP,X[<X[]?];$%!=L'l>F/D\G6q=K;$mbdg_N4\e,
FRsi.f!)Zq1,:^A5!(ne4I.YPMj7nb2WBcC1`4do&bokMWMS!_,9KVU!qCeEYMIUR+d5H^EfEtnq_*Hl
aToG&fh/A,3=T>C:WJ)5V:Qn`JfoU>*hdt%n\EAkTjT\XZT<>9Yu1ZinTXjtYuFbZ;d)<b[AiPA$M=Y+
Xf_!B_>aTM$R#5U>d!@"F(0,r@;+)[Y!pJXenE0fW5+1>A-&T2L1)W&`bm\tKY_PI=3:V$dgP9O)GM)l
#S-Ue(sUDILqjn\`q0s]^h6Ms=fg"\3`Xgi=2"GR[q`u1*H[,'IOu8:3b8#<)m/XB.$^cm:H%APZ9q!f
=A3A9l)bG.4CnuB'Jq><%!nsIW+1Lj"fMIAq0J*X%LPbAcC#<m?ITnDU,J#hQD35`:d7hMG\g!_\qc>%
$HC':R8I`&U>Y\1`5'S*l]!pbj[+#@O;j"@>N6Zl1C"FPdWphkh+QCSPRiABb*LD!i_lgioAo/6?hiV>
?[q)tYCHS-5Pa!E^M??Uhu3!;gWNX4pM]Nug\\a4[s_HX].ej9f44KIJHB2&n(u=NEdkbfS'>9LHFH'r
Dfg_UN6UK\GbR3^3tf[/gB'r[RX6=6>p;-BapcLs8#mjY_Hq/^bV,OrjGI2%8dF@Q=>lDe%6$rC%VMCn
j8RV(s#85+roO4Ze\gO92@V<VfY2g:n+-J1fmVDin_2(RFM<5AWpp0sicmAp]"U'a43_ar?RV#7'G;At
U1uq"Ud9-b'h'l,m.3;^n+tN9pHQ0#2dcea#9Q8?!U]=1Mc$8OdD5*cZoTV1%B$>(_60\<a@HY+72U#W
d)&n)gk]t\%](kh^M@bcf,Y]EN'Mjh`.PZ:-p/j3,N+(B;h'K73iC..iNSY%L:h)<7BPDL\/Sd+lfdao
>3lZ1i<^gG'S;Ht'n#;-WU^.s?u3T#j$-)#:9B$P.[S==X!:PWUh_3hggHd/jNfbYTfhLr.kq-.,*(^A
0*%?$[H+WiV8]k8[EVm_!DEM^+?`<u:r(nBHm)ZeWR*+L)TWQbG1+O)RLbkn@l:<[C>nnIA3a0N^eKat
291H'a`K5-ojtF_iSjdX8RJoV>3ou+VkdJZ[#bK',R\-S.(bH3n5,SSo1BF"+Vj4[SNP+>UYI?$3L*,f
NRfImhUD?@>O)a-h^Bg2V84`,*-0bM[Mh045t[:ae,]<qkXuH3XS7c/q29ZXH:)9unM,[GkgMOJ;D-0<
gq<o)YJD."jtC&Qn\WIVrL:!=j/;qLk&5_I]3kO%=5/)o+53&prS<6>D<iiG(>OB<o:Kr<D4/Z2:ae._
]uF.V>2!T]-Y%jV]K!uYU,&5XRbN?A"gJ:+W[Jp':,Z^Rlc1$V6%nmA6PY*ESfaHr=%6JLU"$ks[9>`#
ephBirl%Ce?TI:tIZ+-p8MfROql(O(lk_;+?iA3RXbF@*A;68O@o"K%%2@9g;mB:YU_!q-m,"^l,Y4%Q
*<Mf95f'T5li9bq&W?_>hO\W32JD#On,V,'Ma^p'?BIPYoaS`O/]P/Y"'_<k^E6qkQ!UH0+jc)]3]ZPn
-ANn;9_NRNF0$[Y.7-K"YP13,.oR?,0)/<bS\$FbG'.AiYEX+?^%kRVk)Gj9OWK&jaQhgm</;U2g"XCL
Rc$q[/(fragVrR+ocGJQUK/iZ1:Vlk"r"OX?c/)-=@-0-*`=^&"_R+dWW?Ola[D9$O_%?0!E$?jcii)q
`%qFD`,)`3D#mR#'1K3W'l3tcn49ZNDfLH4cA5^TPB?7">'-S`RrE'3IXHH$]fP$j*N_8h6d\k6Kbu'B
6A'<hemrQA^VA8oq*K,IZ<)YdBmUA&jUlZ"jb,H=2L;$26+rEu6[[&2NS5)$J=Q/P;+iI2bNDb3-47>`
dgp<lU>B2s-"jpY99[^T8?0?qXit1HI0hSkN@>RB:3gnT_@mEF#N;$<eMDQ:!3]aA%"mUfYEZBb[:jVr
rpoHgT7?+ef73;MJ,J!7]_U^)rkJ3nhuE-CG<U]GIm$qapqX#?:D&0FQX4tECs2#5!EL\o`7T\h:Q2^c
ZIP)Wbc3m+!N^nKHEaT,3MSY]R$;SpdkrnBV9L`I2%_H"B9/SIS(ReIir)6dA9)rFFlPm[Kngm+*4(%W
-jsuWZ`\q\p#74$c^aGc]:'2`&ElaR'*Us^ZT/nh<3'PVG<U!G-iU-HZU:S?C.JE5:")!s5S29F&-5'-
m+Mbn!<QY/!$+$;_\q3a0b#thH%KTJhI%Ipp4\^%@+6,*6hUVf[%p;]."NoYL7"N4.%#<$.MXI)b1Ir'
IWFTmk`1q%(2GfW<)NfcD!kZ"T:8HNZdjBF+"J2q61Bg"a9O$qA-o(>0J$T@mK*8H;qq%o'L<):k22Fl
/C\E6#_Kj9;<_dHD3^;c!UT!:8W'"fUfiOP@$_E@8HRq2#+u/so!eeL8@#Eu"iR^7U=8')XFMY5b/DuA
aat+8[.kZ533L;t4WUVi#@u'g7ZK&2*8;GpH=3o/m.^@);O)ELVaRXC[SMWm:@sOlRA.eg?e(Ppo(7mj
ka&GZM%N(C#I)p:94[Mu)*a55V6f_i3tF%R<<cei<ibqZF2#WX>(8D$EWcmrJLh]%(E5ItedN0iS.IVN
.6#%rg1'%3q!?s<7kW\Ld@'6_cu't!7(4IN>p=ot<s)mR]stWGg!@D=[e7>c^AlA`rp#ibr8i]E60nB*
PP*3_mf6V-q9<jWnA1s.:RjBFAC7iI_%?uaC7[iHi(:?m[N9nW$O8<>jPgnUU$4.i>LJ/&-_n%<jgMTs
Zkm81f5kF@dDgR.[5<*sm*sg:2A/5:?b^ZnnbER'00\a:GD(8("S[lpkq>2cI/^Cjfo97l%5t&i>"j@0
o!&kKe#B9Fd*oPcdnlh"_(`$i*o,4is3<d"H2u)%\5MMH*aU4t(E1WfcE7EHFR88W"pq-19</6CQ*^g2
@+@:P+Y^H-N=Z5S'oJo+DEhr1<%@*7Eifu4!j%%^JP[uMi]?<#mFb\hcX]ZKi-i638i4-LL&'k5bO.(;
b_C)P>qT^nWjR5JCpjQ_)KHc7(r<O$nc;nJq/AFmrAdg2&,Rc\g;3.5P?9),Wt[%KWgbZqh:4$0?csI0
7!"G00T0#Q=Hj'q.27*5*^s05bo4ffrF!jF$Y,r1_l`Gq^'lUu9W;#Q!"(i8gU<bc_2"+XTc5bg6(q0`
KKX46I:dY3A,g:+)0(!DOO.6-X4,)Mj,rGkZ13CfA>?@m=)V&j',0&(Io$3<9USn^:M0+jP-.R.cjOqt
*.4NXrDlG:Md#+<_BWVS4?WohBil$Y2VU>8*CJ")63IfWqmpJX8BUbYk)dk#maeWe_CIR`6q#CcS"/,Y
BPc_YaM)0ClDQ!i@.<oi$t5:TXYtJ3=%EKX&KsKo^/GiN4T529htYc<s7!@Ern0O8bId.7RJ^Lj8DSI,
qL/6(rdU?bj0rB5qp;cXIei)'W<?<8B"ois.Ls_!#:@Wh9>dgNiWE+i+:"'t6:/\mZGiVE:i$K%OZlFB
KNY$7<doFGC1ILX.h"'fL1aE#8AWWR%[qpL^V,j1g9o#F=$k6)Zotuq/bH*=juj$3rkSC$L%Art-H>)f
K["6Gp?XZrkka*4ToDd]2mfK@GMeEdJ.c7tA+uQj5I_@<gL^d@PH-R8p6A-FL,7dFA%"H]JKWaIf'D$1
9r3FufPXds-Bu^L;Q3bI<M>ilc=ZGIM%gR&%IW]Pi>H=sn<&oMRtnH0m4pd[]liu*^5_6^jZ1)r?Ha]k
*'6>A4`>It"HkYr5SFET+.r`YC/>m6gcf'7+^*P)oD^1$l_DOQ-jW^!'YP])Y?4P&gr]Ors4BGq,puA!
/HJi[aDs>4"O'%TDI?.7TYR7OVJ?-=J#*X[E3S2NA-b=kV*n_H2CtL32BZP)"DtSN+>7p4FQcPD0]]Xp
9kpds//;i@WqLdJ]T1Bcotm[Q#FFUTV?X5o5B->W_V3^O/E[^_-"<+$;(a$N'!m&&$K12X\1W[+`1>g;
I)OU4j></V+="a+3Q[p."asFQ;9SUAfOtj6h-H6Y,bSFPasEe9X4+"A0d'+]7o4QhRAhP<BDQ98"j/E<
UdfV:8gYh"]e[_R_Mq1-Uo$+JXtk+\erqb8jdWHdqX&e3Vgj-\X^Aj7c6'5(\UF8401aZL<GNPY\))Gs
_M&BFC^hQgm>?W+_iaMW.G@Q$MBZQ+#OL(U(Rj=b/ge$Hq-4c4Fm&GCPQ5n7l%lAo?!c4l2TG#Tl\kY$
9h[+7rRli+5J<6Wr:Se:PE>q\GU(N*1&k=jfO:V$;3-!2DK1,6amBUhn#-i/JDWegg.3=l2-_V.mdBGp
g!Kt6mHiI59EA:H<KBBN&(^##?j\2NPKaU;h<&_o/,^,;Z`oEdUfJ"k#PN#bp3I<CXTlW6&/TIK-;hVr
Q:b.4O@HDgb8!JK(CnA"QdusR2mS\ekOb!R[H5r8:tT'p`e#79/fC7MSR,K%0(mc%#d/!9=P/?6n:>&&
dk#4kJ0XTV?>eVCX6kNV&03um/D0.c>sZe7aJDL"`c<q4,ZQ%A_<s+i6S][iLG&a&`CQ<$g7\9[(^e?i
QlSZI!n>"-/Xa[<LIPpR(ZsnH@DhOA]3TlX2[#]UI)0:m5SYb9#Sh.:^oq1LJQT!B8\%BKWtgkN:J#bT
d61@h_3(,Gr0mZ5ID1'7Q7j>:I-Gn6`dZD9-CT#`=B%WN8:kgcF&c""/)q%bFIGrfhM_3KF@8n"`0dTl
EUd^T(MW7o35OP&7fW24m^bqFcfjRI\N:89=+JVMGH3/1k>?1i0c_&d.6\>B=]:p+0iOg@ZULZdZ7rJP
n;sM,AI1_JCTl*#p'D9KAY$/C>;u#"pA$ATr.?*hm,pT[o2fkDrGNc/XSZ>Y[K*@PhtmeDonPc&d.m=h
Df6_KJ,T&l'88`%H3!fI_4<IgniD+!Feoh]PfAng]5q^_;<c6H*%@.#VfZR*CfjAVE-Fcca_:&:b4<C5
PNN`XSh1II:/.jLp5]G=c")[EH7V$QjE^7p/S4nA5_;4(1.9r%>U:XL;NDEoHNO=q6H^8Q.q_]%(&*,k
`rl))!mg`8K=aA<l2/<$](psOGt/G>0H:4+)(jEQ1=]_RbkIC):00J`BTA)bN'RqV9%,tr<e]bqnM&*.
p.3+aT`>W+TN!s0N''sUqsjiFcL(8V/T."3&I)/VOk.qI",SXke)Rh;=Vi,?G5BilJ#.(3Fl.bPUR]F9
e81<pON:k"2;:CNpO#N_[UB2;n<j5(=b)c:,&3bCYJ^/K\QFF@S-.^/.s/CMV=<Mr?Ys/HNhK#hqo:Jb
s%rIH_/Wa^]'mD;DS<&sn%5di)2jYK$7(0lkF?V=3ThC/NG^RN,Ng&&5QW2J5SD:$kF>*uLlt;c[]!Te
QH*.6X[#d1X)VfF1O&b/VFn\6l`72E#7Ydjrgi_aIJ-tdOC>Kj7Y;GM'effIALjepnT8P>B2A7%`%R6L
#&l:7>Tt1=;XbgLPcE8]M2KRj;<Su0SOY)4.])0!6>T.i^O&E2OdXG]Q,.U6l;PBN*OY8$9rt*?%EE*k
r<8*F`Y.kg7Vf5R@%o>3^pfb=VGie"GSku6aMP0(!7t,_#"6m#E(ULqWPEK&9Vi1/#6i7jKqVagGt"M^
iEHR[5?%##(T<ZUN>R3caMJ42AN]Q>Y')6u5nk9kRK,_768R+jY)+C2:q.Dp>K-^W7;=#NC@fJHXke$V
lE/gMn,MCb?iTX,IkGW51JcT^YFbZrAGtu+[<"FRhBWq)S\%4%$Lu=pOZSJ""j!Q#L]gft@miZe7*l1\
\ff`E"#5b^;Lq7KM'gq</]gu'Z)+jT@e7TlOapL\@J%#*&mh_H7F))FnUQqO6/utH&rD@g;W:87Q-j;f
H>4Aaf$2J%C9#*]i@4DQ91g!O?".of6o$&i."P\3*i9?u=(oDB\Ur3sGQ1K#=7,MP%2M%8UZ-3S+Zsc&
Cd0Sq2amOH1re.95=28(_*Ls:>QU=%G5J#%>[r+rHY5uU>CBdW`PbU)VDXPY]@iq-%1b'eB<'m\5[q^l
#pIWH(IdgB\ipD2FOp'U$F,3%fc>QTUuIk2)2JekaC;L/F?5s`U>YN/pdFU$4L&.ceC)us0Sf,uV97e2
[7m`f8u;#f5R)fP#]-28A+Y%6WFR<"_I+Jnrm5JeCX`OoC@F%i>JQnQ#]tZ#-0?`=BF5W2a(*8s$j'JI
7V>EE20GAD*L\P`qS!Hna^O&R;<EuQ`iW,.R5W4X%fERDqS!Qpg($bce6nA/6l_W:lB,a[==+d/k7ID$
*6Z-`H\k(!Ys,)(>UD<]PF7b/mH*@'),TSu7VF9<)&I?/G`AOnWhla9A=3V?'/R!BP2(cN!gjRo1klW(
d1Q[an%hZABV(g22d(_i3a2bh@O'6b'U]+-c4J<&;Y`pd+?d&Na1XDR4oFPk^\lW#5PanX5QB`b(WC7$
J?1,jJ,'USOlj'\*jlMRl((\-=_s(QV%7Q_.>f:'OS(QHU@S^j%:PqnN>C7CN\jHPVAP9.L8O88JX3!,
+D\skVF!ulSDqsO8^,F[E_pdW\VuTc@hoU^(q&'K<S3:snDO*,?&+F]3cUstVaIUf/La'%>d=c*Up-[.
WEofI2^C0*_;,$O0,/9fkcSc9c;`?(HpOU[!74$k!7([U#(hX1<O*GMkg+&L>JLtEh;MHuS*q@=gq7c>
B4k^C/>-&MUcb)<.[15B??]f;VQG$N&(i="j5;N*)_6qGcrn`j[`ANOW)P7'9Ehqf4:Y7X3_)H2Z'L^9
O>@<#b6L>gdV?1?$o!Bo:@Pb;BIi-^\-LS-[t5jG';,f<<@gF'5k1X4\q%Q"XE;;<`HWpWic/k-m+TsU
g,n6MhP/Y%90(M>]"1LVDH_.$OF"'^G+sh4VO)=@-3)njEi.)\)c1;Q!ZHUnl'f`]O;Kf&-B0F8!`ikH
e__Te#uapB:]adr@NF.[5V!6gW>WV*&u7"ChL^iC'nu^kEfgaBd)ui3\No?(GL^e0<OYcd$6rQ)6'X/u
QC;Lp)dR?TMiBuf<,HR=*'AN/lDqD^^%M)oO+.$H+R;ZkFM<(l)6ucX5KjRgl)AaU1Gu:4]pkd:6Q--M
'[p5O2C:^8;j(rl;9X$k.8D[S)($K,EY2#=f*1Aa-dub1BPXg>)=SoX]usK"p5ZV*Fr?;9=P25%=/Ai_
Q7bQ;ku94%aHmcLrk-(=!]>-1Y?895d+'Jm.**Ad9-bgh\R[=b/ejC,CmET4nqPTGR_b,Cg-SFj?Z.V[
J-(:(!B(,e`fA1ce(E$_PN]t@2+;&+-;m^^pij!&@)\kgf^iPe21L_,iW*,CCWM`$QTq9%gIsM@,T:&H
n,apK/?<*s*UW1VBW0N3'P!ouUD#0>C>Dc%"uq4mKpY+.X)E\C17:h0:rj=h#iQ.e+CT6m-Aqt'N'JZ+
B>\-Ij_-3#_pN-S^_D;$!eQN7=)\:m6EXrE(Q1T;'a]*lO<p-)V$\H5_HFAW[hOg60Q:I0AD;?Df:_eE
(]RkfG'gB&CK8K=DT7A:e]CD#q/u3JUUHR#7:.nsmD_20,`S0[Vm<*rUI&Jb7MF'TKHZLTGQNH59J70G
f&9%ePgkYTfZPO8&4U18iFNLXfLet#+o/uHeJ*jn-g'tG49D-@Oc.<o*DU"[MaD)SE1+KO8Nk&N+fcT>
QI0qcOK/[;/ZF-8Yg/\fU`Lm?'oQu99dH;78!Rg_J_pA@kK_nnFo1j@+$TPWmlu7Z1\U@:s(GrVs,5c1
c>5Ca&gC7NA;pUm/6eQP8q?sm&ClqOQkOR7KP?HC<'e)RU5d[%6>9Lbh`<JpdF+_oHgBD^CC4@/":9d0
Vp3lJ<7fkgR#+nt4>*bhB_Nf^'s0B4:8IN<2-,jn^f*kI4;NZD_:)OLKo.II6d1EeAtk,UU*9j:+H]XB
iCa.sJ;D/Z!Dpa0XQ^^<?jTd@SjJ)_qHkKUEJ$Ll+<7G\%*"G[SJIAKZU&KXbC^:Q2WgPIl<,i(k]]'F
.dcksobH.B"@k#*JrBgrS&P$%P(ghX+:D!IXO%e(O9H^8NW<*QQ^'-Q7?L+dE.bq?65+qf(dB:!.2?$o
8e:G"@Mp4W/h=o6bCN>:RjVigAZqb_AU$7HPX6O!,Jhq7Qs7/p5h<n?mceWcp?JJ9)mC[o7E<ET;q9[S
0KN]Hi/mjq)>4#-nOpM1FhefZbKXdMZ&0Zopf&"JJ]0&_YW61ah]n&XDuj3SXTuosj[k7p+_?+C5F+Z*
o2o+dJfo)qUer7M$-uel1R:T@5ZY73.+L.`nCK)48WtriV9"3=:`32'()Y_F/!6MJ1Z`4aE9GNaf<4"[
j3>%Trq,$-5P_*WX7iU7T0N,VEeD?A=-(*WJ*CRRY$Gb&Lb04A3PdPM&@*_H"GgZM6=RnjLHmhe:E+,o
p5]!MRag2=0\bfKfCK_P?SYj?dVa$XpgTB1kt>Xs-VrO-pY,MtL4UWa1tn]/>=>=\J0>WL<.([0`1VpO
;Pd^'2;'b\66qta-oI,t)Lba3f)Rn*1,O)Q%]D@"Qbl/Y+[lIK:Z4:#3Z<uDUJY]4UPcq7Mc`(Ca/Nkn
Prl2FiI^kEO[s)j"@+C5&Y%NV?"f*B'*b5o^n+8aK,k[m]2LB5LcIc524'-HaV6G'*BjAZ9-LtM\<+7Q
8C$n1OS-i76J2.d2[flmpB1NuKgM&kQP8=9T8P_r*eW;N5Tt)4fKu;I"=YV$_Oq2C?S6VD_4mc!:k2Xs
(i;C9"@FK@`'fW9UJUH5"KMkge)fB9WBE+J3^0L7XV$R?3B^eWV4Fbf@MGPWV%f\h&4?T*_5OM-AS^Ql
R=)D9j"S&rmRW$rQ+$I?&sHIo\)J]+N5SOF[NiX)QZ3m.9YHdo[$+LmV&Tr4-aMFu#oC?/U"-^W/30'4
j-)kXP1Y[.6;Y!?':SE*)d2X(kZplQhd=nIbk2)gg4JR4J.r6q$8#5F9;i5=Uc'u$`>*.ZFWH5IS\"jZ
BD5_^oA0/uqr11eLW%N1rWC[u"L9.frSjS:XB`Bf*39hkK0U3iPb_I1<-&5nOp&(hV?kuhTc*bNQ79f"
6sWe%Q<4X7;eTF`86#nV`=OQ%h>it]KFe,La'eU_G)QqAXL8?96FD]r<TC&f&llg-lhD(r,RbA&9raL\
f$r2,[8e#H_hgti<rep#+r"M^J/UZZ)B];]M#Dt/%8=SMUer[eq-PLB,a?3MQ^6[R%(=jJ[Q*VCPBLEB
X0Ws^;XbA_MM+^oQjb3&?%n_N8FG3Dqs'YS+hpB6(]Ysp?IQAM(6)W/]0I-b,U@h)k/C^^YZNHh><%F.
UOfUX"+r*kToB7,!!U+CnHf%6YQKI]"=`hh5SFDAn8Q,0'>CO^9>E8T#u$rG+Oh6[R>f*;'2X2,&7V`C
(EFIAm;<[5Hcsn/(OVa&dSPGS0[mCL4HLlJUY/>">Tr\8_U3Tc8#2?ICqf[l]`MQ6Tt@d\@aZ6PrB7HP
EE'+qA7^/e19QqHda].SK?_4i,Pe598u'^!(5hU/4dP7Z(HBbs2cembKr7>^9dMnJ;.d$!>>s-0'?tZ$
e.!&P*j""F'j4+;4%3hVnI7=XQH<.4Gfp$bZ0O@:!*O6qJ+Il6pjI-`hg_F6N+2APZoE/Qj7\+AF-"fh
jkCD)@uP<+TNT)9-HW,EeI\TlMd*bhe4u#Y]nC.]Rd@J-V:M,2<Y'BaD9q:`i,!#r\.rUm4J+75%EOf8
JOkR8Z^G8\&\9,]_W"0U;N4Fe"hQ/oZL'9>>UB%=I;4am9]grO.;g^_O9%WY:r)r/2:2.BCdD8R;$'H'
Ul]6nL`oP='mY("(7rO](A1D-./]eN\E7]T&d;SF.;oJ7o-JFB?CaWAc$EOBCC471:9DlY<`R+*bBphO
9hu-Bnk^l?gX$@;Mo?>rjMI%Xhr<9r&Z^C%Z`"R9EBsqsbb.l8W+)tTOikh(L(H%L0mS;nb:gO1;<ann
(GC#A+UB+j8u9_X+S[B$6c<D)o2oEt93rrR95ueceEg'0dK=9/f(BICq0]YK]"BZ&\L0C>ToZ7r->pAO
9@6:t1,4JO0;FXa1_QBLTdjSf[jN"$<\W3I#%+@<Ge#;&3CdJ:a"s8<!il>HP@GlLB=X;S8ebCL659bP
:n[S%RbC8/H6c+23arUj?grsPBuT?AHcQJL!.go\na'AO'-h^p_<1"L"J(OJF$`ZDANSq+iEYtBVI@"Y
ej>Vub.%Wqhi)$C#ojC]AeW9[GV[V(#gBC'E:qqe4*U/,qq_R-q=N"*IIWB*a26<'T7:&"./&^OIQG,f
PLc383@cNSa>_3bl[fhY)f.3"Bu^KB=Ir/nFTq@GabKd[W[j5MCi!>-gbTqnA[@@R\Y`P+3('DG-o;O*
X/$,k$kZ-BG'X8\Hu3qG;jZD1"coA.8]`e?LW:]>(j*>c-ra\2,W^neSK5KHLk%%p'1)f,.Q@]NKIeBV
_)$uLrYN\.SkCCbb-<4p5Y>I*5ROX!UU/Wg<&EatS#-Boo<FBE+*612$CP%t795<hE66Wk'UA_"lWY>J
7)gi-o/C]078<=C(:(:bLIHh+6t0:j8I=Hb(9:`E1\5m$&tE(n'G,j,cie22MSYE$-"UHi!OkK*Q^!cJ
`+MrC>(b*6jVe"alZ\E7DY8=h!Lp):mH=ht6K1l^lP1O8b/!U^BG,b+&\!kJU$>Tt]iJdq>LXQ9QRc^Q
A/qk?Y:rk-8i0U?&;`qu&QZjKHXm^'L/P/]`A9,XBt5EVF%s:l`ZE>rL;n6P]*qCY!Eg\1)_ZB$9-#=+
/Quk9R3Nkgm,^QD.7^R^B:JeM"'hrYFp[Q$n9;YWP!rECb%5ambkA8/@:lc4ktM)td8RMlhgP"F_r(C[
?iK]>+91@2s8Ccf-uN3f]Rp+D4)_gedaZGRC#rsA^uFP3K3UnXY;2<+7_[9pPj-R(@B%sTFXG425Fc8c
<VaN,kiDGs%>4&I`iQ@!C^=/-1-U`E7'g$0/m%B5B<1?'^*'4$q7;;K3ib!&<BB13T)%3A3&u0=[QU7I
rd8$ZENC*%SM/n0+[DmRfkkVne)t]U\iT`Rl^ArSJZ]CZZT&GFH-p:<6#7P[RSIL"_9EVNYAr3>.M3)+
nKmB]#"+'[cql,IK>GFP(sbXDd6L)L"[ju'X;?X?5ZB^D'Jp);g(FsONlTN1BGq+D+L==X&ee(%U7%0B
Wh>k2.)FrKjO-`%=P(,5PGq70g0.FsM?&o6?<2H;`,a??+p#AnBuuN>Q7c@RD"4fO%(!<on1kPPNa^RG
iVoMcfke@DD"$ZS\UOMBpt2N=.^3.,<g/\?>`-EM>.XK!Gk=>)8h)9U%@<4AJl3d37@/h3i?`RpO946g
T[;Uc$9VBZA1:)$3K^#P9<8u($,tAGY[V*^m]OccPF0Jr=qF<)/JDeo68_&;i`LR@:Q2*+Jd=+jL2S4*
FEE@n+t6j<Ra7loAHE[(V@!\>EN[=-Oh7a@2SZFsV[cN/`+2]ne`t6=ptN:/2Dj(i@ZjijmH@`&lJ/GL
?@1l'Rs.'qjS*#1nbDDjm2mQ78BtT/HFD/U(]Tu=X4rtJIU4;#kR#$#b9&t)^%4cC<X!#R$uUV@`%ZO/
=rTnIVTOm''kFBU]K$C>U"!,7-fT&ZNjlLI&,/J,/%Aap9ua'R3@#b@B[U"X&Q9t7bN47'LW:Km`+:DM
?S$iD%3Y_>LA+u;L!3%RoUII?MTOe.TE4!R."fHF,a:Uc@aJ<Z/t#ZB5f#I1nY2l<WGHa'2A^>BS1Q;p
m9LA0F/TdKJfio!";53np)o46A;VfM*r&DeS,4:j74Qk)_3;Z6P-H,FZ]rR6L1LqC<#UY2!o\qDpmY@e
*Co#f=X^iebn?=>."!JMYIgb\(/)4^T^r%FQ/3q,@*2-.TO'&r.p]S#O$f0b>>hm<[:F"I/#?oAV[+(G
9aC^6JRE!Xg2&s0<*<ScnEA9GIf@01btW=A[7JB6ni-c[P&&DM!Zltr^b/ru@geN)S(4,^m];al&_eM+
4@kq%.%q?mQP+O`1.P&N.nE>k6#+;pb\2P>"D!';,"&n+LDK0Z@KTA;_FfgL,#'Ln=XHs2@kl`DKNAS$
,cQbPZ`t5TT$Ai?8*JY<jBR3M>3pZkVCuHCA_'8ZZEpuJ[_H`f8*csBV[kc*Kkda9K8rCA/#VtW4V,7W
Xkpa=Eq[Y8qfgo,rSXg0s89o%IIT<#$UEukOf[QFa%sH$2SOC@Spgm3+$pb,rV&KZ5-[RpFL/AM^,8/T
R^lJ6a;JNe/1+^R?0KkX)f\I\=mL*?)l&*f/pod`MPh0[<?`W>8-X:U@OOtIA6!apPr=!f2O>4@2L$].
SqP<&kD>u7fCqY`^Bn,`.I6R+Ma?NVSjtDh:_::@(+2L#<#HHF'HHaj6S6P'c#%UZIB=uihI7!PFc9;M
GKFtc86`<[#gH-X`oDub3dFCOMadr&\XaQ(\L>erbjQ:u@M+D=,+\cY':1u:.0_Fdpd99j//AgQ8YVS<
iShsN97DIqnDC/js0i:2hild"mDJJ&)I"bgP_dCc*XtUe/LXc1YRCncYlqJA%0,n8`MI.b/Ld!NUWSGc
;B,l,.su<?dmQe_R>':n;V>Yo[N7YZTsnY_i!Td;rd`mC1b*ok;d4=NJBsM''KW#6iK(V2eKRpgktd5.
0q-C=QQ&d'=ZKQ8k/n!8/WF[V#cr95)(RC)dl^cHTcV2)QLWH)(J^\0@7495?Nk7t:_G@MXp)6V9B4rF
4dL%mA]mL%^j:ht60;<@C_`Ee(5o\2O(Pm^1tA)`*1c=2=l%dlWm`sB11`?YX3HE(S'j/O$&(uD@0l+6
8;-Rrp7/X9oBr_bG<Ylm(BE&cJEu`hY5k_7n<ul6lR`trIm7I,II\gResF?Kfu8/TjS/n:0-RTS,d&Oq
CU[pq.QRg*'t(Fi,:b\=:393-oHC<k@a>a9<V9=Jgm*g-:QL8]@q(^j.:<eQ</-L4[lYls6a8s5P>d4P
5IZ-X=)h,h5l<d,okZ'$oQM&e"E;1ELf;)$iX(b*"V'OKh\V$7V3#KN#_5qq'8n+RC_C8^jZ#A(TT!M%
HA8:q<=MSTGVk,5$qHJ<'@geJ.MJJL'X-m&#@nPS!(gN*aJ)VVQn/Sb$(FI6c>b*].pMr3s$_<H!?Lj=
R'ar2+CndEY.//Be_/F8nN$h!_I=^gHmoQu5Q?#F5D/\\a()rT1'R1D!hi_ufC?g()HR=PiDZ*'Lc@pg
R3E9#K8.`D'?Od^Co.c)V0*\d.ZnO]/m'YCWJG9:b94t1ZD7i05d!'C/'Qt"XEbr93Wpg436dcZV*GfN
Vnd@1'Wqqe6?0Bo>TMHWSBqC@JIb0D_F`\B!)0)?)A#rN,KTQ9-UlloXCJK7Do*Er<]K+<b)Uki<2OqG
j3CNs<\-tFesS$ddH90Ho![b:Yr_[&_qCo/Y1`8>>"ht\<iK#=U*2=J;tSU&OW):R8r_*__tsrb^N8SG
7h:+GgQ-g^q-X-t%9rW"bMkFsh`"\F4o$'(P[F@]e#/7b'6`8^oO7L8PW=t-\0=8?0AjBhD"F6ad8_41
B1CKjCE/dCHZFL$+HgZD.!2[>C:c\e4>n6V-]4,23#jDMIkmG8&L./VU(qs&3Y4&Q%B!$5\&%Na/7_9P
)Xu0s2@gW0Z63*iE5=\F"]c0WK&D@'O`aikc0B?%4ie6`8A=#R`hkCkoHK,eG5;'pGcIle?smM;U+i<\
'J,)5Al+@2&4ni2!W/rVkWEeT@scP@Gcndj?a/[r#dEPM%N1(5(,'A6YS:%C[e-E%AM5Z%^%;s"`W+m0
PSS(gIW,$u-07smpfP"IIg^0p^FJ4HCJZ2fnsMW!s1<NtO3>[=)>qHu%UGa*#t-P._J%O.A/keP9r:1e
7"Z$ThZKDqUsd4=L7HN:ctNiJ]-<XkkVRIPea7<8E;4H/"f"")RbF683]cpL7i<-qB/JF,e20?.DWp+a
K4+(=fMWDbJH\r]=q"VjjleFH*EE/B)877W?=]]WbTrSg0@mt'E<6jr;D"#c.+\6pC?l'n$:EkIA2X-I
TcpN/k"NU[:ps),o"c^EGV"i"DobUD>#:\X6Aa9@ZFR<MCUgWjA\NU]UPXNAKsMashcQu21&,btM.\Ms
qZk\Z3:l:uYJ'JBHU%NI4Q0qF(TT&$B:qJ;qW-=UPCJXsn*Kc?R0A$:l"?&ALUd$-Vbb%<I/AIR?-Un]
3<j,ld*Xj2gU_cTVPuLXh&7pT4&`9$:d3VhfXZBpdc;[[Me,-7)?h8VX<&^R$E&:RT#tSo9+jMI`Xp54
O;bF=l1t"Fn!#A6=U-b`/*%$jON$C>OTH-AacW)$Z%^LU,%(S_d,jmcbQ?/^p!lGK8Scb^F`gdJCW!DN
cbMrB\VJDebth%]0Go<U*m!?bQY6.*adS!Coj$S]*"%`Y6_Tht/mGtr.?Hu#L1B1]=tZM`d^lR$^S=fB
UVJtF.D%][3]j,tYVFp:Y>pG$@,$Jo-BPV8Mat%*09f<o;@>i;TgKg^;:*6Z%$j[3MT^"lq,K=h8DG?H
6=W#K8uPi#O%^0H*=9J>&Ip,"?E_=_B^]UoHt:RZ2da19j_A(")huM/MtP(t/l_%7psPkU?C<I#Om%=s
Eh3og<o^[oWl.Yu=inX*OVYUN#aD$.>-'soA/,nIEYW9%$7F7':a"[(Ca;Yh'NuL==P?\V0Ee]&p<A`b
?<aqn):"-#.Y3*^G0B11MU%/o?,+uuS'886<d+sQedYU>H7bF>KOl-cV)-k2r_U2'hWfq/l!b9.lLWVD
hgF_[`@L]?Gjs*6J+^pU5(5VdE#$tF5CNG3OS(02HX&,RnR[jQ-XV;pVpE'sR$^q-rB.2NB(<L^F`i,m
l,K;kY,Q8[DJ3WhVI_$CD.t(ujbr:];AG_(!@fRY;;@5"b+M[9$lU(?+gRLuL_nF71%X/Y5l<rL?@Y99
*lnDaO=<alP_=5^D$["(((g+c*="nKEf`hb$M]c\0P35riM"A,)]\&L#2JmZagmB]2f2_uO\4]?oqQ#4
c)q>?,q1'J#Y8f-,+_BgZ`-9EVIpAM)/l/ALQpcu3to=44GaQ=*.t/Sj/EUbIT2&+!8.p?$!*$ZjO#AB
%S%k3.(OGA=3bbqA`Uj7a/)YLks"8&Q*SSCdaQ[b\UJV>8eb2>A'/+_L+1#ZR'.'8>'DN&eZ:H/EV/8Y
,m5uXcJZ"\!Xoo63eL%7@<&(u'Q3.joTH'4V.EbRW)W":fuhF%@n2P$\GQ-1%mPC8d;L+t\U8#0^-/HC
/V,LlZ=Q_;doY'0WpH;'6uk8TTp2`3(MGO.4^MNi.m1T]LaXuF[)2CAGbL]Q1GRF'4<NRO$H&.h"Y,C#
9,6cM6h,OmEO.I'2d4n_g,E$^119`$70][4&WG9tjZC&+fc4'Gj3!%+W%Xb5CCO1#<6;O9*1?M2_aLqE
3o<'eNn:TP#,+=%cD9be>!/JYGX=/[/f&g"lc0MW3caKUe[OE7kq@PZlVB_?b;ZH94T1#saa2P0^I,<@
I/:f\8@@S1O$<R&nbe$Cc<\1*YA%%LK(,=%XT%q`2$;<s5i@N$D*)%XZdKJb/9HqQf!h.(!O4scT[C83
!LS69:d_%`(gI-&b[L%(NX_O!$!!("'al^F05_>(naUP=67sN,5mkF8&Ng2/Lb?`#/I[Eo&@UNUnBfh?
nr\M&Y3*aH[[*r8aT8M574,8PWOeOq*hgGM8jMDSA,lnVU(KAX^IK')`[9#-d)+]ia@=&nA[kf6YqKM,
.#pio2AqKl^"+KrRKN[,O"[d'`<17kK+l(&f=S2EM,&0ADGD^"XjZY*':t^gX_RSuD.9hX*/oZ$Pnc-T
WdSu3pV],#c*7OS<f1)c7Ms2jP3@!Gk9hprN%2laHW[dk.?h_p])5Ho3hAn:oad\,E;nhB*^"cKiNIb.
rWg2cldfhfDnU.+mA:?\E/Z-.!tf4L>&9+K"HH$`8@O[5//N"K.Q^4<7<8n!CcqnM#ZZ\"!Za^Ai>Fa5
7muU#$&q-Kb^e_(nQZ6KV^1cm+?W@&A@]R&J"ke,;4jrWaL1a'gBW+o)HS\"e^g=pX(@-5=;%&U!j=lo
ZBh`F,(%J)m<9j;K,)([8.D"2+:>VNZUncYii-IK5UfdFl#`[ginLb]qsb>tDF;;6meacrh&d\f]ncCW
:Y,HJ`RgA>T@Nl;m-.Se2seoEI9(8Q@WYb*g$.l/LXth!Vjc\LMQWp1l*eua;f@*aQp$QH)_GVXqP&!=
PqV&$-")7k/Dbd=:!RrWd!o&FDZq>S`CGLrKIX3X!Ik6h<dS'Fg6Ki#F-0uuYMeG/CinHF%s`d7RB_8;
l>/g8L;d>P`T!;eAS<%aa(EaG3!t@1Viqr+7!L2h*)?Wu)=160IUO[?;-E^HP,82cE,cbH/5g27<Okdr
F)tu@7os=jA#m,L1>a'CVP=Ipb/)T)&]`9jrMpmF=4\oSXc]/],sFOA\2pKJ]g=O2b3?%[XC'T,5MF?p
$fD.O4LN<H:+o^O?B0XDaBQ%DANGINC^CH%.P5#=j:r:>P>6nAmp(5%r1;ZHS[rk?d.LU5mQ\AZmK^5X
s6pNR^[p<Q)fK%GEqVnpZ\,/P'mK[d8Ps:aL8QL:`>*/R7&^Z:.#QeL&6gi9"#?4"-oOE-@Of4C[<G>_
kSR[a4LgOt1R:m`FGZ=-Q"0&F\E>Be'Y91Dd<kf%b,Wb'iRP%NK:uu4i=7;ZVTS3#83/7t)]<Z:8YR`s
.e$=lMJ'kbX:257S8Z279N$(4m8"Te.>D*F&52h63Jl"rd`?OEOM^'F<Y$g&j455p?GD!Mp1k0\^&-D7
*^?]9qrC=g[fs!i?d<$;HMXF^OmDO]l3@9:Z5sf@#(!Je]h`DQM"D1:,8RCspL]ire_U'u[5ChM9K1K3
XQZ0Z;]$@XL1<of@L8'F,#c8pJf%2L]EMdDi$eOOaasfk]YY;B/(1@*7YA*N+"?RL=VO=/h599nN5G"[
RLO%E4g&HT?.UtgiD(^+4<BSagtW%Q7\aW^(*_ZEi]*5t#-8pl>Cs^C>Z(o>Q/[X"/miD%7l.]u\d"GC
BnfTb10n*k#@tg5'i"($]gJRRR'eZL+)R)^A6iFd6.Sh;*L!$5&>,Cjn!Yp1=m69A+QbC<D);:.d+R5=
0VQuWatRogQ<B5$6^9>#V]WSPAB?+fA0Noegir\khH+Wf4+CuEWO"Yr*Sku0kj5iQ]3fpFm*FP%n_VT1
^\@>H%tF--jr8NqDVYrKjlJrJ7qEu>NHh._,h!uW_*(A%"T*rh)!;8;C-Y$"n3rHVFhW`HD.fZAK<KF]
]a:u0\Hr$p<t7Pqq%TDeB8h';eVu/U?+n]%R7<CjQd%I6"*'Yl*(ac'HIF&pnO5:6PUXV.Zo!c#.!$#s
%][ZG<]CPnRbFIcNMEQ/a&f<IINjQ&@8J@WQ<9n](eb@@&BJ>N72<AumCW,K]Q<PDT=sishu*2ScThHh
l[=BI]D?TSSp[GOOM?g=:ZdB#p%Sh=?=.R(H,+/*S)(>?Y18`82b*A]2]q:Pfqja1>>g0T^57)-J*l`Y
1L86]>"_EYKihRtM1VQ[i"SnY'X.<0i$eOOa^R$8aI!/W>_&2B@n\1!/S9dmY3Bf*aootS+\Ok(C!8us
Xdlb$>rX;mhpU%51+(M?9(A_:<m)a8)+Q!X3#Du3OrY1)Kr0r=/m\22(LQrEs8:m\$XY5WaBH9sm^2eB
T%a$g/t^N/e/B(R@oEQeHC]Y_<=*I4ac1AB-<:Oc.m<EqYUW?$12K.hfmR;Bk0//A_*QN*$/sD8`g,)K
9:M1[XaH&dAXSc&Nk,?K<j&lGHI]Ta<+/o9%>X)V]r"?E*H^!r)X@$6>Bf]0dCV>uhR^GioVlt;[s%5n
1U(fTd(]IRa,[@;Eb3:^4%Jbr4*C#boC)VJos`hnGOa7<agJ0:kt75o`Dr>I!X2;uTnl\OTqWs?$<TZ:
1hB?,9jo8<9Y_?6UrRG=d#a]E3_+k$0P)379Wfe'VrWZAFIn(5:sgDB;B'*\<Va57dEtr7*?u%eW2cTK
+>oK=/<t9%*h1@9nN2+^XkegMMuK[qa,l^g@KX7e;51Lro*rlUWr(C)%'E[D1-0&;BlXU3)IG8Pgts*m
GSj<cRE]5uUiig,a3S,*FmmR6hYu1u^]46[J,X4<f6KP="$64@VpG5:pJ)Ku2]b(rD!hh1C7G'#f(:L(
<-KTk7N7\4d"\U^h?nBZbqXL]NU?Ckj'nJcb7VHT+JPiW,.ffVY?4n`rI9bFS1jS6*7fXj"V%$R<1U2t
>8["$:)qnKd9DDfeIIRh:F]EOGX*@.^p"#P]douYR2grZS0:QN1AECDJ\`i4]d4u?e4[uNQ=/'-3gI]n
72#.EL-f1>em^GYPnLlI@&UQG2CF^8eP`9rY-o:G66=Zkdl'*cAZK;9.Y#gi2G=(\22^'CY.-Hl]s_3n
FhR/8(a%\I[6aWRDWB"kHVK).NL9PH>$%huW,8V/BC](rLkl`02?'RT,DV<G]Q3/qXihMe]5d90g&:el
9lHL?gpXV?a,[lVlPas6l8sB(o$#e?)`RKG]Qs##NC10mT6g1T$ZEb#qu1q\mQY\Jf@ULBEKioo=%X5W
$%*VF/&CeP32$C$clcjbDH4\STU7LM$JF92@12pq[JArkM_Dm\C>@dj7(+8)WNXB%@jsMSNhSBkjD%=9
Pj[g?%V-GV2N:P:QY83BV,=@=g0O\k1m+t]UanEN1Qel7M"GqSZBQYGRiI/bQ/%S2`Yo551L6cFd^?2T
]g:g<->Sg*W.cFKGH)c@3@:)*Ct6adZPQqrm>XUXIe]Dirr1e&lc\a=V<$6T.m,7e[sgGHVW71_T7-_'
?bZ<rj3J2U31\8Nep!)FcYT`O?GSFP,5(p!c7rt?KqWRSn^LH4Up,7#SZ<K0ggr<S.A;"CAoRN=(5L31
iDKHtP6FVln.`sPJ1P*KTXUk"H@_%(daaH&,TmL,QBn0[^&7FsIRKro*C6;oW@i;bG)o>\ogT9,6XB6q
#JHoI6hndHYIqBDA6CpY7&-3qk$5'pTsc9fE"@-#XW6_&#Mj,<4^]dXc]RbP;@\\@KsPIrR@$LHk&WKb
Vc2?tP$^".[(NTqC#F9DR'B]:iO,8X]<-:$45S]RIUeTAi]?8M23ElnOh-LFZGJ=Sf%o1cDg1IT#$Ei'
SK.)YG%AX/GL!mFpXJR<43ejMZ[5X.k*`Y0CKn6LDqhjsFm%o4ICo?:m%67`E963QgYRD>h#4kJDI#F)
qQ7*UmN-lIm^6F$m[Y;@Y4[hcJk;0)NQ"'I=F<5`MkRIs9J-gh.%VF)<FOR<16u`*?+c+C#-s?UUB7"8
)9s.*&\6I18le`hSr6\"BajF,Q@V<"nqBLcdPqZAgRH:8Fq(NpqCBK^A&)/Ca>\Gd5-)L4E;O.EMHiNb
T<70hoJdJQbu]_.7\W/,'?bVIYJQci2ii=7*Nj(>`o:'gX_Onj,Eq,t!h)MP(Q,2>+l%ERM07R]hn8j_
K:fjSrWg49o4O[[GqqTTpGH*peZSA1XSFeOHlF1+nk\q\r<?=SODi\FZXR-$<80LGq-`g4#,sZbE"Nfh
D'WCG1`!#>O9FR^j`n!s`MtJ*/r<:#_,:&)Op+%2cP$uNZnO_n#o\>]=<tqM;';9o=0gbVb87nRe7fV+
^-jL\,\&eP_s@[2=fGAh:SZC)^.]u$nWd!/r2!dXdG3U/eCIeO'`<D5SP4&cbajad".bE[LIk%W8lu5.
<ZH2Ej&W!Tc;k6"@Le5g/sXO\DR[?f0tV#Wb"X\8'7R&d;GnS_D]2TGgS2;@VnY</52IYi<K/*!V!%\U
Q#MRP:8t3a'H4<Q@m/STXZL[j_!P4Lh7@n*psEq_2NM]Xh6D+"F6hP?4`gRWFq3omgp;E-qk6/?(XK6E
H=1d6QN"3<2h(8Ap%KNa\:=7i#=#hKn);60IW>7[5J6mBpYObRG^iqA^XX!,$=l+W#>JX$.#`0r'+L1G
AO%"@iY5INjf=Lq,6=i#RW'-u:D7DVgBLQdk"%pX;s/*oTdu8.cW7HP[8$d_</O+i,-h!qm^A_W>[:tl
?-$#(<@7;$Gc";Chc/2EN5kK"]>1'e#pgpfh]#7cC)aN$5=R%E8G#e]2VC.U::8'@qB-mrbL-38CoIQT
i_m`N!bBMQ3KCpbLa5\X]uSHhLTpI0Xe1%6gY[GWnXk^cbJ#p@k2YJ\ancVn$f8eMB5ekREQK0'<k@=-
NJB-qMp:3ca*>ekH:tp%PAS^$12OY)U89NpeuQ*fd:?E@NX5TIc/_\ls2U4T>V\e2A$B*`BZ!=O$"YA*
Vi4AKl-3`?>tF-;=4`.S%Q9g#POd?m^;aigY%]:po3RtK+=0I@[+;\RqEbQ8&jB)fX]0T5c@F^oTTWH&
ZqE!-=u8DXh^548W@/u)P;GnC.[.aZ9bF!n+Q@0R`^31:,T6=PSC):,&rLE].NXqMQD%K'iWEug4,:cg
Q%V%#5,2WL*4ft%)%YB"Wh\U<4i^=a\om36lh?HH\@?;JhW>9:EjP)d2U?O7>Z\UgY2R0^QG_IgO)4:<
Z_@?Mm]d!U&)On%ldYq,]B:LnTA9=[_`MeNHMQ*LVge=&_4,A8"5X"AeT]ksoAMe*pE)AZc;jI(;Bh*W
,L]J"$4%glSghO^6l:Yh#t5+HYad:6F(@\$#02ml;0aFQ<2?gGK:,D5F)=9g>K99Qs,+P)nbW*BGWI"0
$7S)$;m)9DrJlc8_U*P-TtS%D-WsAea&5NfK-4-WUh4JVOR-/uhE'HB0g%J&Trt/GUUO_.9!ZYj[RD3n
gA:6"E4SZ92)3'R*)0(:"du*\`oVppN@C1QR;@Mn4Z#0Ao^)CCGO@VAo^8o4rL:S$os<ZIg^d$.kC<:8
@.j%35DGeYr:sEb_lKU,0MQFd3"eKB-e$L#][i]nY8`kSpPq&;%])5oA-FH_^uti&W%oofc=24rF"P*X
Z8cY$Jl8jC++XcH@51.U><K%)R0ZmTC?-#87:cOVoI@s5YIm\h.ug>;d8X[$=kSn;Y)WVi.bumtl&'R_
/=m=SUFLt`_d[t/Nk!Cg@l"9fU/f5-Br.(II7q_H[O;1aG#R%:HuAmVhgeS+Aoh+XYV0:OA+>sR&_Cd+
)0A?G_re1mP`jI`(j#-qc,t?;Vf,G!LYNcuNtj-gbY2>(IIQsd$[5phGj3AUS\*LWSSd7@f<At1*m!'B
Z#e+NSjQ_O%rQ+8^Ua14^>WiTViU3bgqKrOnFj,:H2%01f?`?bEqo#`(E_GCZub9OlEPmrL\G&gFm/bb
>pmqcI/X&h5CW1X4*U-.RbN]ue/3!aKoV5u@1,H_QdbaYWY!?ROi7MICFMu.j"#rt_H:7c:J"rM'cKSb
IHSDeWo`:,`[>C".uVA*\9t6gVh64X6fPm?3L$+3rSSNS"X-I1f(2m&7l[++(om"0&S`Al=*;M,q2/_-
f^uc6kr#&KXW`q[#-quN7cfNj>'asg]B\-t@_"soa@YF4N383'_4bPN8n2q(\U5BV)+nJKm+HUE`iXU^
++3RoLS&tbQS0G1q0ffiJ,f3F>j6XhcS*!\NqqSGHT./1==b5Xg8Kt,j,NI*AA5Ub3tt;,Kdsgl`7;FU
JVobmFfKBf`F(@8i)!uXfIRqp7&Q1c1e:sP2O+QY5)Y(#L_7TdZ1MK;(cnF:'b"n(14f/p"Ej:m(0c2;
,19$')T:Y1qKs#S6jsQpc=T?E%[-&b$A1o]ZKQ*7?^2gT]o[3@1t5N+7$9:>bnVkK:jjDRp?@\s"iF<H
r'1VnFJqjBZU;9?ba7nIAc*1)6*.EIBQ0\ss7bHIcPPNg.2!E$]<Q+kL,Eg*"bfo'(+@W<IslI^TFmCX
bP3WG5qR4@N#&22@5YDKei"4W3ng'=Wj<2I\MB@bC94JZ=03Ga4*foFbq%sp>rcudd]rBkFr]5LHIpsA
[LM%3=#Ff_WS95\[V'[1NX`D.k6_IfcL0ODZ[L$Hi<,S+^45hDXYY<JXhB2Fkg/,"EW42=ICn)sqrY<H
bD0:?lP$n=Y<IA\k3Ud/VbXD.FCG&.5J-XJ#I!UP^SN]To_L]\Vn3Y&Hf=)*J/F!^JSZ8&E!cGhj\cL]
J0jftCaFj:/C+\i?_K?eUTn'>?aRD8V/f%@],M!Q:#Uta\sB9Z/>.'/<*Cd4Dl^']3A"b[*itA\S8IY^
DXU`!cS`7l-F[./S?Zq!Lp-)`XVj\Mh*8>[FaHh+g"P>Ln*DmNP-kBB._D$7b4!H\$I#1i<%6]9nCQ15
4ar8T8XCl?1)WG1:"Il^fXc8'pAG57J+V,YO$ESZI`9mqoL"^o1m$P;i@V07Zc;6OEh%SIZm+8X+0TD^
XAgY_8"ep8%0D0KDt[3)N<U<TAQB%`k<oB+a(5<Nc\2@Q9[?'uSKedk87Xc;9ORp1#Zgt[XD^scO";cE
nMdP`-B#lQQ]]Nl6,;LjoQI\)Z\_"cAQ)f_+Hl9+4Ym1W>J&[G]+el^"@kKiVh\:LH?G"oV?WK*5!.M-
;d+TU^.]p%g1jf;>qV1o"Vqd5Z`%s8O?onbTL`SpdpeDcSHae$c(nh$1]ic(8VPX8:b!OOlY`cGV.7n\
397,2`E'0GZ$Y*2)cnZL\U!5d[EI`/*BC]Lg]!c0GKrp#>1:6#VJFBOc5dibp2BC`ZE%p<>iVF#%Hi`]
!B@mEk)C#ZpMBo!*kZLg_V'>Z^45V"q#d[qqRScZ417o%Od-ScD9\KNF"8kLgi2iFWkEbF+$R42NRuMU
iHL@>H2!;^ViG#qIc\r8UTmdq\D%V'\1K90Mt(m97_g6@`@*L.8/F)H;DbD`Ld3.b,V,qT<V^lVCURg$
Of/fP4"=Hi)?qQm)EXDR)J^gC:&4))j.fi1YNbFg&'+S\NF&<"FnMq4<d)KX\`'^ZI*+P''\Tt(lJQL'
^5^AR:9?NtC/[VuSNH*Cjmtg.dup['e[/?LXc,.0>N0dIKnCk]iP[KBa3&[T4:c6X)b$GLXk&M`Tei#f
]mB"iUIUA/rr!o[J+<=F8Cf`ogHm=#J,as=5*7'd*4#'&<Hc."B_OtoTo-M&ig3h9FLf@)WQ_^YKQ>Tg
%_&rHC2p#.B9S.CD]AaZ_)Vs-Fbn7r/RD7+cMo>JXlie0A:<c_&a.>2'^*]c6hHm"j>\-Q(,t&X4r9&K
($`;8+0DO!R#H!a.qR9(0pbZTMWjqAP&g`6.l5aXVo>!gZgXtsSY$Ue?D6+0B^1Otr&TF$_\7!V4IuNS
QAES)>BE&eb,Q5'bUUBNU=6,&>eVQupVi<3=NVS?8JFdY0C1XNbt<u&Z)+V*UTV5<BkhC%p[/L"n!jWR
4hg4Bi>$^KpWosWfsmnne(WqYle:LP\*r03\81EGm]FC)O060>@G@J=P?VXG%doqbh(Kg5\ps=Zl_j1.
56'R/\Qt\+9FMZ]*1a]]C"ME:D'A@M2r/NH^uY90AQtpBrT^8TLK5DI]6s(mOjh?`hn"=:GQ77-07WZg
K*SlghmdXlpn:)*Nl)N'9$:(6!`pXI)pGHa10Bet\td&palj911G3kOM^+]3*bQnc#ZYL%]/"MG_,Su!
MfoT=5jGh,Y%QYcdGkJ/0:nWGG(0%64_(81F/c6>CD>AX2H43;lg")r\#c2=Dco5#352`^gk"EIS%Ejf
%:$QYDeAs8b,X!=]ntkeXZrfU,]]HNSLZT,Y1aN3[rN/uJj;S`8B=+08K]8b"Cs,\U=703f`O`?S3;'&
bjEa6s6u4:rV=POcP@dTs#5V.Dt<SskFZ\L]\-Uoa0U(,c@A`(;s:?g9XQgFTlLmnA=_Ks@Ak`nlB_:<
I^)q_$sgGhnNpdB`8><s1QXSMQp=2ZSo(.?i\?g*(7WY/$5'/L8_1AofDc@a#Zb=@&V2qFZ:[^M9Go])
@Vo@O^M@WNL,IMHq&l56hU7^Y=l-N,b^4WCjjkmfOEGi&i7K1Di1OWLOEkE45&-d2kpRGV0,0:d3^Zmo
2*TYUg>/-SGqotU@r8Z_-6H$Z)EPI9oo2]5h7Z2!/$c]j:$pH!l(PB@MTY^K\[@3Qlo]XoaGh-OY$O8:
rkb?L44eA<D;2Xq*LHoqR"PCh[<#!uTtOr+p.t,3dQb@TmHFPKLMr]-o?Q;&V`%jE^[nS>QS4spE9>78
f5I7kGOsnf=F3t@&7XF_A$[D.fqqsIR[$V%2K]Q'-:%HPNLW,>$?Yh)`d>0*5CDeVrRW]-\pX.kO^3$t
f<1a:nHHSE:"V1F,*ekMRlnO._!4q%UE_XurMa%C/6^le[rQ#$;CI\]?</]-gT:C387c:BI=(/(fYHRd
gog>%Y&:jjHMuq]F4\]U]m=Saes.6lc>8m&gs\D_SZ@VC_kEs9eqqMrknPFI[uBdG)q[8Q2*7D$):&cb
<:&6p[I;J.5Xed`ZUG31I&!/Zef2N[WikGX"&l@)*ljG+`F>Q<Lh1X`Hi[HNj==4;P;s=QmFm'Rkcn'Q
Y?ZG?rnG3ee\D%DPJ9;0r:C4>l`Yg:/!=`mPX-u4AF!4?JBI:;qBE(e``H$6[ec5#J#]@d^-aYWDXt`W
7omQKH+$CG:*j@h,`"qr3"V5q4FnV;_%ARq!%>ZH!ZD1s!:?74I?Uu*ROlAg!_ir$^_C5f)*AO9N4'YI
f1o9dhpm3q94q%-@lWJijq<kf!ujbYH\Xac='Ml1OC"O:?6A?9(nb0uB:^/#O&ZOpe=T9FBYW@9EnS'.
$QUhpR]IkO2.]\Zg:Y24Vg?Vaam&JfgNnY0HNo5Ea6T05qZaVB*Sn2;ceOqpqd7*bpA3;A(Jes5I;ENA
p7]a;*U?bUDdQ_THUD5^LAH=&3f`SHg:sb>pQke78(ZV3[dW4Tm5qeZ3-'!+rYq3]\9I'2Q.'Zbq<ET6
:X$!*Crlpjbk,7*[:OMMCM1IJ2-dh9@s;iaTX2Hl4&nL(dkEYBhDX,1oA]VUm[^l^lCg;kpOfVSg3M]I
L)jJG2pI@W9b0ol%0o6A2Od:3;$fW?=!6$3XL;N(,?Oa$Q+_fKTig159;SYWfHO#rRN^4mCq^7g.qu9B
#6rllmoskloSQ:C)UG##T0(SFl"&DV,OO+/Nnh3.H2dTsqDJ*!Wu<cSDm$+7\$riS[<6;%FSkd6;p/qa
<VDi[QAP.?Niq*Pjo*#;9PV!Ip`d"78X!o->+<>KPc2i;QA@fhj-^;WMb3'8q$O[\A<c>$7[l2><O7&P
Tn>j2S@NV7e[r$"oB>APrS>MdIK&==0nAdF>(-83V[-`CYb2GbftBn'R2W(rTm$2T<V;qo(-Yn]du\A3
X_R-28TY$!V4sidZHt#IX%REnj_-d;:e3]8VWg:6:\``EdFlT?=Mu1'rVr?t+o^uC-4B?m8@A[d`KNkq
8/)C*"cIk`V7rak/K3pDXrGQCG51VcO?fTsQ*H2-rL684]*=cA<Z',Cn;d/Qc4A:)N3LV%0s7YKm2GJI
eT`[<')-aYnHb1I2X/.tS(MEe7Y84O8pA!1=Bik6S:3PIO`cYaB4n^@fld/XM21QT^O,^tkqi33T7ELj
^1hHYh"m'(X.+[A6T[dJChYo8ULX>4es#ud0:Z.TCK&ibnX;&q]79h*jUZfdmI%(iYMDD>`k@<-pMO0@
CAG-P]A@o+ieE_(<AD[SJbjea7gIe3F_Po(94[X_f&<dab2LQqm/olQ%"k^R>BBi<Nn8.i]R#&(M*l(P
n!r#g2`NnJ42%@u`HZ%q5Z;lNUX`u7nMi'0)iZ$!LbsWTAi):i1*C@WCi+<C=!UWV:=W1nd`!UQMTFi"
bXP6-V:N)^<:A^%IJ1VSre'b$8(0`Sq.&g4pGSO&d!kNG^t#c$]6CXNgbCWHhPrN5]O#ML91r8bG'8&b
`gQO:68q'\3'Ge4#[&-RRl:q:e^Tm@3@(;M.T)D?19NrFA;\Ce8i1@`A:>PV'Z^oeP]1P^q\n3MpDc0*
s7!:'Vp8V]HK0uD++F!CJ,/0OT0IeqS^)-LpM\pt<Cl/VcT[!Y?iU,cJVhoNM2J:ZR_l%#FedY.ng3iN
Q!LA/ZT(Q0?_b#R)S18/KmL12<Ji.JlSt8:!O?#Q.Js7W!FNpHi:Ctt?kf4XJ<9GO5i^TDMh\==T:aS7
*3"0X(>KS%6jsY8)<):YdT9%6(,(#GEG6ka:1k+S]Cj%.6_3f3o2TqNUGK;P"',"W@-T(#'72)nB3#pG
9o.+JVr(`F\28fK4JOmDg=)CP30Y]#5u80f&TOWOXXk?4f&S"a[E2+jlZR#[(<)#r_5$ldS3ORU[@8Q4
h)^#LjS%X2f5+[?[<6?,Y'',9=#]JNh/m%7gYVVJq_p@(h)fjla1D5==7'*KIeM^NLNbE-\p3l.rls'?
*-gf;`Tu[t*BPs!lg"!FY?bJLC:I*(R$ejTH=2-10:kmP-:`-=Ncd2U]%]Q%lIHEXCT!U3mTso)o'U90
G29[8kI$e7YFO@PBCj(8fobsVh5eP"=&$,R`^]:k\uUPi$gk&r<lf9&.YGP;s""S5_IO#@JZ(M.TsK'i
c=eV''<S4B"]?VSMSdaSR2V>S<2f2$.FbL<CYlh2n^,kRTtRGSa/T0@EsK9Pn**!LU\"8`NXLUI:ELK;
G$t-W<S]R>b&4]>2n!;gKq?,cM6X4.e<*:I;\`_Z^_oa4EfCMq/#S)9/V_7nVpOSl..a,WnHC*PRk'X-
V/cm/cXClt16p;HEJ)(K>!BB9mt"dA%dlE+r5@9Hf5A;$nD.ILjq"*_jTd97MnfMjaA-p*GW`b.f&8EO
P;S=DUQ)B1qm(?0(/J@J#dc.c7]ggt$snrrh:U3.4?OmoQr-7,ZDn^D*edQ]#LF#LLh'W/-jOddpA"^c
2p!O%eG5-H.W2[`V4\-^V<,l9/RA;6ig3tR\DS_f^[P,m8[/C3l6e&&_4flb$t?]hT<+tu2g6BAfc9ND
#7A1^6gh9Z`q.Z:K3d\"ehQWrV?0n%k$m)cUCf"P+XAD0*fEn7@oF?_"_:Kbk,.IFiskYr-]d^#TRQmc
XdbXfT00d^aSrS/2_O!mEHp)OhmRZu#Ng@,cZL8`fQDRgn'S8nLGu[E=`;!"%[bt[Eo=a!eSj9X!4mUC
f_Z1shS4Jf_lBEMRb6cq@lH%_?T$58RIX(2G4+)<gYV!$H?]PJYtaQ<LAR.7-L2d'4*c)5e<)W_miHiJ
f"$^:[iX?iZZl;b`,OQ/Q!J/Q4/S<&:C];`<jOU<;_)%%XHr!J2A=GN,Z]i>j70oLX0`R:+>??&J_&sq
$'cum-_50UkZgc"N;8oV>)'h/YU93nVDcc'4aUiX3'+VqJ*^S)aWjf@G#f^Ag2R&,i48dg5h=TjI2>\<
>r]6<\?EJ?RtbTV;-D`&4.NKm)'*UqY>&\P6D938=dA7ilDnZ7bVh:LogZ`S.p%TC)NIVq]h#-N:h^=<
8g4q,V'<TM=4c*/G/N[LIJ`aZ3kTUuSo)+5maumUi3?2sYMHqme+Z*'m9`'QoH.k(Ko\IoXCGX?UbtfH
*eD]jcoG5A6WJP9Ts7CoFZLKSM8CZ?)*:nn,oW6j!YLtV>_XI7R;=F2=uJUB<8?8JhW]S1"<lgpLn9Z5
+<Wd"'_=G3r>Pd58<"#J^TK<4iX+R'&ga.d`'>B\O17Nur(d?=GV(td^/B(KJqYj2=S*fao`+jaJ,X]/
Nts<Q\7!\l-3#'6n)<-SFf#'9#Ie5UP)5*52>2d]HQt"e!PqMFJg<S]"A"%cLe`I#5n`OtpYMAfMX#o\
h/[^Ka!l2%`*Kfn2ZuY20/LnE\_gq\gmS,Bk<+Nm6rCbqSbHFem(HHTZ,8:LVe&[\e#4,Y@6m"6[jWW!
:mr\3<RpohDL6[Jg$d3(Dol*'9\CHK>aZ3E9IFZK-&jirG\`LAq(N441bk+f,U;6gaP=ER5h<s'f]BH/
YMHp7qr%+S1F'NTroK!JKi._X?gUt)EMD&Ifk6`<ZYe"aQc9q%Am2A*:[KcW:%['rB0'D3HgCA%GOAeN
r!#-kH[TA-]>7ge1=La=de7@8\#,mm]qKah]!]YR/=5kkC5Rb#*.!%AbpK!OoM/3Z-70XTGK6j-Cu2gE
ip<(e[FO6(l->uRVY4%\X5DL]?J!_DDtdC\gORDQ21,"uNCI9-hG@3gW%R%L8R^S5YrH9?L60GOL;4*-
dE!^=2D)Bd1J^JMVpW$="@ciWQA2%XTW"j^KRu8R^sr-KB9TODV-P!9h)aX^[8M3l^#em,kD>V0h:^Y+
X.u#i"tje9?U$^Cg9%p].BgpoEdMQDe0VsUOfcGs//OYR9%=[!Ej\N5<Y^sdVe+tOkU\9A$@j<T(_eHE
Dh19p'>\<V`!Z^\iaSn=><aku2#V77bg+Nf/1n#BXDD^VDk0"qGP9hR)g<@;p%&]DpY.q1(#7^XNBksJ
a%uF^>R%K&:<LNH1RP.eP&b'(7'0FVZEoI#ZARWs*M1)WA-d$h*LZ_W&.IuOFDOpLKOnP8#m()q+TE!U
s*?FS=PrJkOS/R-?dFui+pJ\0b(0(OJHUiAA.Sm:/3Gu]=iCA71^*ZlTpPf*J,%De?@:^%5Q3$\'bIH6
7peFqIP`f4+sc`(">YRua_LCu2#F<E7I`JeR\.gIPq)i8T'i;,p1CKuB@ZU#h>Gh&Uf1e$c$%mT(ZJGM
kjh)6F.l0q3,UiJ-54p5F>en_IUVHsXn0"3:7^-Dfj15@*UB+21f*e6k(]u<Y2ouad^X(,]RG.CZSg>9
a9&ehCTd'<qg5O(f\Bj"]6%NIS_"t?4Lhc+1k5MccM\]KLUp\?(#gQAones]7V?;C1t?GDN;#=0FXhpl
=HBl%gXOq\2*^QEE+.o,q<?(hQ`jcRfKV7*][SkskQT($:UdC:dgaB5DDZ^q#*2LA[T#)op!*.6Q`V6\
eP]GA/egt,80h;Je1i@&-IBtp/Kdp$a29#iUEB[d(F1sO'Ffq2J;D%hdI^tC\<=ePel6q_hKnYiorD<'
?.X9>c`]B*YIRH42?U81/.\=Z)nWa?F`hohqPg0(qu*_U=ZEh<5;Z3odH/bTWNrA2#.r8ZXYTu:WNR]u
.ZEP1"7=Wp'S$pN_^@V5f*R'SO_@]VPEh?&<E:SfDJnh.m@Kc8=BLr[Il<UY=4]C>f!fihP-oN1_YHjV
Y2+R%qE#eslJjPs>&Nhb#0=Hkpu^i!e067b&'%:NV;te7m27p)?j2`lF(?R3(0;0B/Xjbbpq(9'*\<io
!Cn,jNJg)sJUU&-_8qT1+!U%JcL(N#KKhk*ct>P764CS[Gt'F5-4iJn$[sTKIg@S49*3dj89iA%LQDBU
5Ph:-prP`&^4P51B\8I:R'?(IctI)<'GVDlO$3pH$!0['\5a<",#cFu&u+l;<48m$XP-e@E#N#bq;ip1
VQe?L1t4,Ap5(V[6q'":aG$F20hSFD[T_p6ENH7%hmp4GojI=dopO"d#FFRi;o;Va,PmO/p#of.`3=Z7
^bjPRSeuHBO#P9Vq3MnDY?Y<o\MH<0fXs1.r93+ifC%NU3&pflH]P=8h41$MGM&0JK:],Ff>`S.3d%=G
WLP"#3,?L`WjFZ[q,k,*_cu!`e#Z8g:RthHgL%X?I36DYcJ6jjf^rEe9=n\Q`:%WN\$Xmn47%+_Pr>P;
^;8au<&Ju:?1obW6P#3mYH!h@@WA8AR$<iXNJ0cOgWlk?Ne^*C->2Cq9@YjoiiuTV,SCR*;#sVC-qXW4
(kEmMi+O=F2I0RZS6\66Z@(p'`H0e7Dd:st)mc/=[d:-Lcg8"\S/K(j@I`(IL!/X+/tNr-G\c^>]:3G.
9_EW,bdE2LX:-#&QC=),?Q_p7'?7BS'IkmuP712gn[s\!5_T`A<XD?S17?@([gro>/M>=%0<_O[XFXJW
>$5*8?<m`&e_]/^ZY.Qi]Qi]+NLPLL\So7Sri^eLaerMD2<HRkli:`9aL88.H_XPY!G#(&_U8dLV6368
.P<@(esP:))M_-oJn,0IU-`4*DmiW"B<hM?^_6p<`5#6;B9e_\9sXbo!pB;*1&a<J<2JbHfY1]-%=B#q
73"K,rlUAMJ,8>p?[CfN8G[kD^%faNLQ3>`O,8[KNJrT]`PQ+o?r7JG/.)AO6p\p<E,$5L$_sud&Eol;
CcI\I@&F@[MStYbXhj7l?!L2SF!^Y3HCI/I8*((%1^+;G-F:[f>FllqZaXuNb3jn;=*F>8f@RTGB3jQ8
`h@k+bc"riWci:83&P;RR;Z9!o<'Y>pNHDbQ9+ni*BfsR[pHiAk+dQE#J51u?[228)f*VQXf^I5g!P.j
:JFUZ[2$6DHL9EiT>.)*=Nkp;8/<P#^:LTSRr#ID(77[$.<cS3n!p#\H2IO-hX]C?eABX)DgrF^K@,PL
fnKFMS`t^ak4UF*^Wd+i!o`ZL"2sJ@Pm3da<L+0D1mp`[bi#d/3%Pg`#E&kK$jkFHLEh>GB6'1CMNuj`
EYOc[Ku-*Z'GQB;LS[B.9KYCn,"O@8YAWWtb*2/DgalU%e>+Nt*VMY/1jNf]G@ePRghu<>XkkiqUR1\P
!ENk-LA&+R(+)1=DI$Cb2OD=3,@PSj3%UIgV6RfN!jZi%KgB@U!F3HtAHjqS;^g'o<Aq>]a2Z+7(Dk]S
<]2ng(D`<%!3Fc&2Kj7ep\3"(4+A,%($r=#mX$%'pre^^rp?VUIeNHdh`h".,4!A"DngVrjd4jerTq_*
@l#)%PTg<5`(nDF2YF)W-A//?h_cP.(`<0EWZWf-a/X5@$nbUjG'4Q<I5iu3*!QY45s`Zb8$&;GKma_d
1@+oZQ6/HXhkVo=%\L4l"+5ej7)*b!"N3P&puS7od4ci+.nB]<]hg3!&kN)+-qH/t$&,(*!<Ie+^d528
,`VqaL)gN6'TG[n`)DOd`E%ac.PK!^(Fdj;K@*\1E/J4<>TVAQ<ZC["?:W8aB^`KqlaIDM5.kmolFG1,
Q(_dIlUL8?j#&%`jb(6X;o9=XPD4e]l@nc^WTh_(Ktbs>QGo\O>IX@1?/IfM4gVo4ptC?N2m2P?3k9A*
b/o">/e%FKoicX9a*d/?8%ZN0=i.J5ZA/6k4AL`)T/AN?*U]tFoi4\H\1d6q?9C)dH@,#Ll+%`L=#SVV
a%"dp4$=U$/eHKq4]a8,Gk^U[="\?N%/J_%<DL0WjfASn17$$nRA+L`63;d/_pE*c%[Y">d%EqJnaNL;
&^`<e$k,dh6/Z&UMZtMiSXN\qFiL>Wa5HJQWaa?)8-B7>8.`q$j]2.VYum_X&D1^#L*6\Vfik6/<GUJu
R$o*smB2iNG<9tDo^/.gg-.5P1"4Y%>,,,TE\b.P#*k2nUEP2rVEg3@F;g&dTMjE1!Y(&2"o%erfj(da
g="F#gY4qM27:(:OK&&pL$@9Yam#eLXcqL$Vfkk-!SPuQCU\3=H19bklOP)Mn_l-Mo?hK*pP1t\p;IgK
AU#2B9`.t;T_/EIlc3?5\A!4c"RuEKc!TaphW2mi!\G^r5U"@6$IV<BY&_4D`(HmQLlbSe+?S?=obNgZ
j5]/eiZMZ+(gW4'"75pc=l4]ir9k5sn,LKP:dOspSE,`c^lO4>r:K)PJ,I1,LQ3>ZknScn8kd?i'F1k@
X>X'X<Tb*R=^5:+Eo;0'hN:>K*0:njN'\+aGUf6'`lZCL2J9/6@d"ir>ZkF4X1&,8!klZX.6%B5Dm\#@
*+poWD/G;<gu#\gq)#koS89cP9F\E'G;sp&WX!mN-Ut.lqisNs$@p[TZuL6.HtL"PdcJaPdu/aX\bY*/
pWilM/t?-qkH,\IDk@7K=O!;+0(8%g.tF_TlLNLQa23ea="i-?P<<tV4mffbQ`S/-^:D\#[G&>Uhg482
phR?^YFT%S=m9:\n;m7Q3nrK(h$nn9-D.-:`Aom+^ULf\J=W.m"M'eo[_,Kg;3p>)Lj5G7%##D9jUpP5
M-+R6$lY,C,7+JqoT3Qk5g=jZ_2h#OTGS<4T?L"EJn3?iD.9<:5Y*/N'bIGp,T/u0-g)<,.?sWX<D&sD
SsUOXTI-MrFgq)=[WFR2[?LP8.oX%0`VS7*Dr754<Ne$<n`]KS)DrE@%jN3i9ELK:UQUHj16mG9i/n9H
$;&1r-qjh(,@.*Gl.XiPJ0`CbJeVrS2um!;b=cUilWZI*!3#K*%PD,!EV%c[f,hWuZ_)aBlX0VaPM^ic
3=r0n^3c+:jB6!Q^GW=2r;*`I:S61TH1DZ:_UZ%%Z4\COQU?a.Ab+;(<*%oXLV0.o:#i&3K0V-SEe@\8
2Y0A33$L'qKn^1q8/r5o_B9Q=I://<5>eBZ=3@+a2`Nr+QjT,s";_0Me%YJ>d=:r5$\sduO_@Dg6=O\a
WhN[a?'LYCQ]j'QO;,l1Q(kp=4IH8k+Rg'HRXbI."f.%"`,cQZfnGh/)MQXKlg#R[R[e/3mqccTl0/X>
.T4?/MXjZN15.2hq=O%'_=``\hRImrf%TAH]j'5cZZES&TrPiPnptuG<1e>JXCc'0^H1=U)6;Ycn%$$=
\iW,4f/:3$3qqjcc%ch5T0Br;q=;XOhR^,*4RVeXB#iUHgcRUE>Am>MG'e?.b<8!pXX]rSdg0TACeYCR
UKoY*DdK%+cB!9Pk??0&R!<^sn)F>`k/uW!<6nsEYHuL,l?E#mCqb4,]>(YX[CWcFZDCFMm&b<]PX_4>
8mP8iQH0E]ZIARdM&Zj<*ZK8*)&o09cHS#d85A3=0Q9RU_DX:ZJd@?h7j3["/<,dRR9rjcY'&rEDFm8C
?^(ql;e)e;"HA26nfTmr#UGt$NK;C:Pui7dC9sDN8rnq+Be!B"gYi*[DJsfFXO@@@&e]1J03NfL?m9#f
@<'?X,U<kXA<83%Ait]>+C\`'66q[-NQ4j/G\N$J[Emm*R[Do9hq;8l>+GW<nu]!rYHD`DD1PsWeCfbH
/ml5>jkBYP[pOXSkhW`*qrNUJr:kKNs5L(4"4c6-AOCIAdX,r6ra0iXrdS`H-gM:mp_<Y3n%SOq:1'WV
0#Id:9$>>=Q=^jHPIX8,6)I=mdaYeeaJ:YL\AmP@alPK?3t@0qnTY<H:\l6?5`-8G`;@7WrL"O^mgE1#
/hYMMaB7[+ooD=_iQu#+<\GOY`oQW?4Fp$:B'0tq!3G6m(##\A$rJYP(.a7T85q-&%_re_M2[6"-S]SW
]JP&=[X56,C3!j)@;^0tEhIoX\[eQF[\hcWO@t69m[D,J_+PRsroR:s5.Gdtg<Ih$F+'6FX^a/p4h^-@
:;u^QDJIZ\4(=^%2Csk,f;<A7XP&'Wrpmk:G:l%gFT0M$k-aS42fE$4F6E,nrYcpF_7`JD>n&8PG*h*4
G'CO8CJY`94@\T5J?.(&Cf7'(G1H`#R[p`JJ&UZ3Y,c1_DOd?2F_0gqm)%1EgZ21@J![LNh::7[hqd7+
BsorYR/=Hgbmir-O1MC:f]:R2MGmFVfH`(%4.VeT-H&=mJjg[^A>LZXnVC9e4=2A6UF6opLdbE..Prm^
W-h](,U*GX!:H69H=p0ChWEp4j`<5!H!*->B\ZH14HbMU;)g62$Rf(a3scr=</dHAX*3-YoAqg##`djU
8LZ8^k=Fd#gK7XDcD2(],U+"T6\WKI7)?d_nH9OAK#Jk2GTmDE!fBFbZJq!L,.>&%g"eBm34HK3YeDg#
]K![3ZF%3U\?`eril$\;]-gCFgtP&9p>!W>X1.NQJ*kLihK\q8pHST3-\(pfbK&KlAq0AFS%`+qn2F%l
Z`:]ih?r1BrVZ!%T7-TYp\`P]M2IWt`(q*aQPcgdL,sB]K@SZ(:uBmgA`r2EOr;+L[GL.@btURbj'lH;
@B`Q0Q@[*'0k`>(HRK(*_nr'+TGI<1NQki_kht0mi&V;i3e4D!]hgaQ"qH,hdgq"`U%!jT=EI)%plUZu
+J8MFs66/n,,%jFe3C]qoI$g`O$[5G*+!6>Uq!^.?<-+V\.obDpnU:lR=qA6@r]"4'HB^gL7t7nL)bM"
oFQ_1bK`o+c/\,sGpC3998g-Y/WC6UF\tG.Yp?a&Y3G:r>eRlMi6h@ms5NbL^USF`k)&JjNp-Sf<4d=t
YNfh#9b(B_HE-j(Wi*mBe"bdA;:"sid)13C[alg0>+K/54nnDPIJ^.uDVdFaGQ6gCX1NF?c-GV6aZe&<
Mp#&tY%gs?F'\%i7(q?FCJaX#p#>soAW*Ib];9ahhS-QZEFO.N_StnpX*YX8DJj;e:JH'-%lF"RGm9$B
]/lM^k.hVAVT'OXVpaI-e)[pDqs1ntRQ=Z<h-<Mp^gHs&Ns&_!;GisIb`@[AN/`ZbcU_(bj_<sN&-sOS
PgeQ+;CGOE)M9*W9h7i/.P@d%Z./SQL&"UJS\sNdYS&a6[Edb="5kSr(`u1S"X=pU%g5)CQ3]gQa5X(<
3"c?iL6H9V1*&h0`rUOBa.q&G@,G(*:8?3=/67.G4:6d/4rXV++Xnj3UX=1,FonR#2`J589V6oHF`hhB
C[:''PCT_4rV_Wj0Aa9_ld;Itn%S\e#9S?_b?t8>gLoQgZglX:jZbYpI/W,q0-1A?qWcf_?Tii6nD+VE
3_'<e&t-&6hV1uln>f437[:F(>3e%Gk@o'8((\S_#%T0_PU$Hf5_6nm*5NaH=;2L3Kgq1+=CIkB(aK6:
$a.eRDGqg@KYs"+$[74]0,B,SO@YKF#Qfbhf#`;?:&3H3LgrqB6XDtS.aY8q3#Diq9,6TOkSt;)6"KMa
qug>\0X\,=3BnT]-'Oa=!g<Z&j,V*t*K#Yt3@arlR)l&LkTeKqj00(ULWE8cjqf;qD2R0kB8s0r6nT&f
A>LV/SMp/+M]9.oSpKkg2h(J:XcGYkrFbTV\9NI:I_mnn<]Ss6QtY#lqA$?scK/3teoLZeM1NW[s$2Wf
HE?rASc+?<0&3s^k.u[cJ?51'Z.?A'Q.>^)mU)@HCXA>W2ENFt(V8>c/'83%2LWm!Uo1''fON)Bl-V(W
=_C6?<p+:c:3U$ZE>i5m[66T52_[ABdb!sRm:u^BcE=bH*]LmW;dT]g+<%mmNBW!NX9D;ZM%YMVS78`o
^nID50c4G;Z)gc%?BUVCLdAol'"NNDYp<[!&.hDIJ5r#3]VJM81u!Q-(J%1%.2ce3"+hk_=aX(TYok8M
YIH]!VI1^,6IF::$nWGlO2*JZn;LHN'1-;^+S/NNnH&\i%#,=M`.B4s6Gp.^(^pV,`<(E8'FL*t"Xei+
W2M+p)i)=n8u5Rh[Cs8%FEA3N[Cj-\YQDl<p%?SSbofqtc^qglkn4!]hS"9>^]+)UIeL*TrT[IVI.GCW
T76Y4kF_eQP4d)K00amULG,9KrT2LH5C`OjMl0?8IJWTY^":3Fo&S;bN(d!3-EYHEgRckGNFgkF@SL`9
@>QE;OW[Z6>g:/865bX!M2[!O@L7!%)3(HM!Y]MY-jgTFL&j[2?/)mI8mN,`Yc@3GCgjOj4@mig'RCH-
$H27$AAk1gO;AEJs7&llNJ^.3Oto<)"[$+':-gENXf8Hpc-@W>Qj=<ZNdq65+X3Yc&3(FE)$^\-^lCoN
?]B`S8IPqZ)*qk(U[]K="GP)8jlN?HdkWZZKp`er$#+*&*)8V]MFBj!C\20Kn"%(3Hgg<hKh$&fH2kd/
pE-!_hAht$FS7V.L]+7';;:/V_pEoI=Kgi^[b's84hPk,_Wfa+$VPD&\o@7KF)QEbqW3^Kf1pKGR4HFc
4.@g7G6aVmV8WTHQUO#$dGXbtN"t#//]PL_F1Y44f\ng#2KJEK`qAq==3n&)^:^k^3kR0(4$M6Dhrb"I
e^88QDfrFpf\L[M/^7=GPGPh;h!2B!])i?f.^]mXEM4dDnaK19NX@q>Q^puVTe+D&`C>UHZl6-g/Wgb+
E1";N4J0r4[T`50$ZZV$(5L(6='o92R?=&$V_DQk\F;Igkd0L]1aP=mY0)rDKLKIBe/T)_3<DVN&W%i)
A#TKk,1'^c3d=_9;#!!Y&W.q[8/*nKMP8D$<&t:-:OoF;C]U(NPKD_t5+caM)SKJGnF5qiapK6sTEGC5
G'8%GD%1m'\$pSDbaAhT/mQ)9p$UYJ5bpUAnAAW5qUY_GcT_6ml`\'PcI%h?Nk[1nruVFflcZ25"NgKs
d!Y..Ll]=I[]-kd-SJPg`G>#mQDVo2ZeEsO]^bD8R7:t4G/804+K@!l&lgNSQ[h=7U*@r=;-3r0BG3Bc
D\+=Y:ACt&,JYcgD$\2i/l0=s.08+RK7jMQkh*-b@:B32nk60>Kp$-i%R3rC=34(a">UA#<G=:j/$!7C
C0kX9^^>t>_*NNF_8bE+U$tV2,[W\UIQTYL)NKeFic.X59op9G+b@6U\@"'qM8a&&KsIGKA=c'%"@8lI
;()P])A*k`P-QA-bc-:03ti"nh,gcH4Etu<o"i?*I)g2eV7TS\fi`T4`IIXUp?$\Y@'=Eq\a,g<cbKGB
gt`q(n%Wr*_<nqp5.=:Pe(\:q34Cg$j3an8!*MtD%3E,\VbCuKQ]:[mI<B*bVfI4"@qVV[`9FC\CZe`9
>Za47@V1%kG@A,n!7fiamd@(W=ESdHJFW5VCB-jG[fJ/dc2hBdP>YYQ_W0Q6nX,8G?4r;*dM<6R-9Xe*
XYl?c`,maX.8eIIjKi%79I?=TAs\aH<9gNc5c</dS,tEtbmP6ELEIdM@?FB."9\mU?n;p4M^EFAZ8)bZ
Gj0JZ;LBaA(lP9s,6gYr_,6r3jOdk5#lq,1$k>`LiFiWD1EK>)!ks1U!SINJ&W&p6qT?q^HUbTX\c>,a
H!5JOJEm:]"Y:a'$Ad3J_#Y+H#7hlgp"!?_p&4#3^B$TJn\l;pWUFaKI/6@=r`XFADiJ\-'rQL]SE'3Z
^AR!FYJ,>6g$[.TpG@1BJH@DU8KA\Wbtm*k\tol/kt6Z6]rbM<G/V0"SCDS3I@sD>9bF0k`hF]Q+HRF.
TF_P5Mo$Uq=>Yb##V9"B!QT`2iW#b=(%?d06c/l^T3qN:T>#F2BZQm/0Ecqp@'Bu2b0&83]OqoW+Rh42
NjqKRY>3EgV[N9%3Xp\YJq+IfO\"]@fZ7PWYlH<D:U:2'=TtZ"oK3a:'giSKE:GYR)E?/*ksA6e<j%D-
cQM01+9r;_O+-&a(IQ*#@Sq+lK48J7@V**"F(=:hqMAF#:S0h[3'#C7dB%9XPV3GKDOqpFkVj%0Hm>kb
j0ebs+5T4F2q-X8C#.M\Ie2FQE4;sT/>]tXo$hDuP?hL`6h?b(-:T!bod()`@;ff'`/(J'__OF*E:NSk
rL<[C/tY7MEclG;Ao<!8Upn%lhq6LV5M0&peS]0r<VnmY9b#+nAojI!#/]i8g1iKc8QLjJOHn+(:s^qZ
7j>iWaj(Sm$]Bo5nqgIR7U"s(`,rEDR$<]VTX-.keJ289IY"<KBX-7HH%e!`5>YMpW;5DVR#ku`":PZ7
Jm^#M@aO"$/;=M0"NneRU&db@."MNA#6G[.mgTC>K82\WkX;4%BWQG.P=5PAKuLrl#T+c4iZ.#[\[f6t
PGt=P@rcTFB_H%MAqJLqi(K_AgY:J\:S.ion+u_CGOF5eY4''uhYY8FIdusK*sY7"n`.[99=6l(s!CZo
0<BTp`E1rEp!'gP:JUsn+G+/&qQl7F<i3gS_UN\5>*W'"bB>t2!EgP+mV)&,)Vms/dN46S'pR;6X?Jlb
$:g/6Kh"WuODkmLNsUu'-K7nd5dqlO=)8j5/1U?a8GLA`O1fMrn;FIkIHg5U+BVSYLS'kU='#B%C1uoE
MIa[PPq&n-WA0R'49-1Wb=@[C;+O)3$5j>+*fGk=)A@*M.P)JIVssrgjRhO*4@,Da/R)CT;NY=fP:DP=
B+'`cLa7"Ni+*[VR[Gb,YAZ;^/L2O(bn6VR(dS3n=XkI7DEkbJ3&T@r1^fCfn]L"^WL8T_InPF&f3`fC
X8CqdpYU;gnth8FHRG]Yh*,uUp;sHIX$N60fi5Z"2;I+d.)jt28*S6JUY\s\<2B.Fl2#`,*U:I)e&h!.
K8Xdec[]--H=:;nBkV'qBQgIi['-7.]r@p[f@/0tfB.!cWpr"d6*rP>gAI7+DmeDqY-'6,O_0G*\-,J6
!YW@]&Q9?GA-."&%qh_OZns[dl<GH7"[Hq+D0kLejKar5j:&ZFe_p&b.]^OO&giMQ)A*o0"Tbb:GWuV)
q5hRY.1Cel*eT9dO9>',TgJ:.0IRD2'jun5*t&]3/05_.2F@Ud+c4#0d;[Fkfq(;EREiS\8Pg6*I%V/l
2'FDGX]AXW(*HKtNS8V8!(qgmI7m4`0-F/j:7Z]Kr.%PUo?KGd^]-J/WSd[BG9E+Go#i]d7&9h[pj4cO
T07H<CnUOqPK/a!HLg-dk8b?+5($G4[jEG6=`(=HOn%#R<k#tMV4st_n.&ZV>,RFuYj"^_Aq,/1D(RQ#
$caG9+sJ-@#R5oK,1-r)4KrTB%Z?1%4WYYakfD/<?9S5Wi?PNG$O),NTJD\YKd@XSBn`^k;IAb`'U1)3
qJ)5=WR0i79EpYJ"=O;)MF&PK`'bVu`J#Lt+V5KpHitdgS!$uXX>N*<dSdJ>UQ82A,;QcLQ!Rh`1"i$c
Vq2<7/(k4h1hIYoQ<Yi;gcKr]cJ9!NcH]<fV5-Lf[9Hg=I%0HN(XI#YN\lBuE,g=+o]!ChbF@6r"5V8e
@F+6uf"_%Arp=J_6bRAm\SQ/hmIH[arXQP+S_`ATXN^OCebQ$F9UD`_^SS6T<SHk</reJd/.[=l]t\OH
qX21bXn1^VG.+9G-bHrOh&q$U4Wlf?l[h,28?!Nn.mZ";Wkd"ZX&KjI-h<+=F>So1:(bDXEU_&r@pBdT
UF_ZFjYNkm3eanio"s2KC::'s:?,ATelGi&g2*@\.]ZOK_NWu?KuQR#@H-3uL_s)"'SiBf_kEHZ\3M1Y
Cgqci:oD*S*0pdVZD*F+E"2ri&:e[&bD)\[3%U1W+;%0Z17:`8&:n@!(dBhi=D9%O9$>E"[9@=W3no:9
&#^+##,h@6$",6M8R9&X)2QeUHhZBEo?Epp!MG#gomCN6hg_U0R0rr4^DmgbBd;7_mho9c5&6u"Ykn4L
g$_.T3jZ&i<ZAHXC99rQQclM.lB,CAB60cqY3kKnbUKNO5d:[(qV()oe3"n76AUSZN/`fcTg4KhN.F:q
>TmOLLQ<L%nWd/V<e)h+#0Yro'@S^Nn_AL`Z-HkqQRN<cP^ohtH"iD8*#K1nP8tPX$[K0T3t_QY()IVr
BW;LL$ZrF>JP8Z]/sRjWdPAMIb0JumRiNPUND6RUChW2>XGKS"mIfibI3$B0]6\,D]-`G/CRSJJVP[."
$;6442Es2rUK&9*'jViOe`Dq-hYP'>L.djlc^n@OHiN`_gF!f7gR"gBhRp8lq[]jDG5$*.Qd_TZk\7N.
c?23B-.6&,h'a9cE7C:%Np=9kQE$'B,CjQYV!dg1aOPq1/!i32n`9,^n5(?#UB^T76,j%Xl=b5CB.'-q
[31HDCbPn.!)PRPM7QA/cJrI_;aCbE6\i]N*DT2!lVo2+3U(N\iD_#HT[T8:Q(j5],XKH,M/tq3o5^Z_
WD]KLW)S'CQdP"J0%M`9P9=g2/.<%5)M3Ye8PoaU:ad$3!ser?N?TI$63*l,i.N4gi"b`B360Bji(F-*
$j'3OJI(W)+;'6W"!4("&FfJV$>"R"gVVbDb4=QIlu^VI"lTf#;BUr#5[D!FmIor%YJ'Y`gMak*o:Q'\
=24U^msk@aTMXO<SbQPE_ggbPK+NJ2chr3Rp%[e7cf3,\<HJ>)"Z-VNfJDdgjnjO@Der3W0s["rm>\M$
Q908UbZbH%T1e/9RQ^Xf4H!!,9[gTlXNb',QPG:/7mmN(oZ+tfJ,8.4Y8i#a7mI!N=,n?tnI%R8UJ\\b
`:WCID0<7\U-as5R4X_jlDbOuL29Ef4#mDd?pjGE=9J\^a+lrhTb-FGiSd"Ip!lSQN[PH,iJ@"A=Zg+6
6]fmG51%h=Be[-CejaGg\&M9HkA>=j2h1mS"NUb`A97Q-HRHC[VJPZYIS(YGV+=VJ+u7Rj@74.*L/Lst
f%)T@5<:aR2q6_=f]QPt(qXp;s3BFV2fA&S3]T&VhK&>Nps3;/Hi<<D^J:UViqmP'6X<`N^7\@Qltrll
BrcC+(3d7<DQWX$D@U$e\GYjqW=.nO\$fosVg:hQ3eg/Y>2(#kc'Hp=>>oT[PJ>-)dC"+!r2liN7_RQO
Xf7T>SI/YJ6,##r,36_AYa<h%R%j4@2Nn9%NJ_Ar/@B)^cc>,mYiGOPMeaoHSTHoRcc`=Cef1[Gp$N<B
^+MRN-pn8h:(*OEbUld@V<,b68Wch3*63T&WDP>NN5,S5"@NU,^2Oo1Jtp3iFC5Jd:dblQ"E4TP6'5;P
)@&dq;OCEESP#`A8L+?YNs.fm',bnl6sOC[RmmX<<Yq*'jqd),Va8&,)-D^o*E0S^]7?k2=0;\hcej'7
Xl0,&&?$^/Iig<25AC$,=c]3"Ck.K1r8.7,;Rn2)hI;RBp=n/2Wu&c*S7Y>m<GC@SXLMLOM'[/Jnc2er
A]7b,0b+NkA0!iH!i5,3,DTVhG4]H]81Y/VDQd*-ZToidONDO^iX2GPW`5hX(WIi#iY`^qJJs.aJ-_!h
3Yi<I1ccs!K09Em`o-BT`PiI\Nfoc-l#\lX%MtC1(`g?<ad)kA3NKhr<$VJN)DI8P_JJ-aOZ4PN7-,e/
ep73$F\T0GTKlP?Sm<m<'j"W<%W="[Rgoj)8k,\s;EHqn]sTaU4jdSKfC\`_:[ZI.XBpD:b4Vg)lO1D<
)ZuH$VUhVKl\lI9/.%EgeSMH/`?(LXH+NC]qV^LVn$uBGpMTD(^V"l%@q]bWF^iSHe*CdcZF73lp%C6E
Z5T4V/Zi%bNQjpo^"1Y/Bleee:faU;i:7I22C)9fc:R3()-@:kJkee"8Fgkk;IKN$8EfR$&F`ktX?8Nq
^;ah8;lIm^[$<\!>&'a1;P@&,<TPQuf#Hia.`uQ%8NCOV<F=e/ba)\YS/;AX%Rn33\=jHbn9=r35S[N,
&Y&rfU6,RtK]-WY8j&aQceni*O<c/<N6D:)%u3Ec?n_k:/$RF89':!Z$kEfk9M_fEYAC>C"/%Q<<jl)]
:Mt&7TC)eB"dfXS'OWD(r'(/Yo5FWjp3-?MN@3Vk=*XYVGT(Cl&mRosn].8DGI8_CZ%Z=CQ_U:sVY3)$
7XOFt3o%=p[eoqL=o96R3C..u>C<QcX;i(K&eY<BnP9Za7#$AJ*]Y3do['jEUS'?A8r_$WQ'R[LQBi5M
Q*QPc0f2?NRLfZhL-h$Cj5@+16G`f)YGks8W/t,'%$($R*'0+s/uUJG%!GB@OhA]bfKURC(/oMVb*qUA
Y<+<\Q-/%d6Ba2]US(Fk30/`G`q/uRP#A]j;OC`d+>93kg[,lL@IQ(:Eb-8dF$b^%9htoUWAJ@f_`U-<
4uM3ZEE.>MX!T4J:7k[7qjj4[4h>`MGBSD6Ir`=`2;iRU([0BeN@mYt^T+orZolr[lg"2'CKia$m@H>M
]Q7P2H"@Baj_o:%:NgYnNqE(VRMlX[:"9^0Wd;.__/!_!XKbte2N,/TVHbasb0NdWi)??o%Rl,eb[Jr<
q#uJ_Go-YsKg=8%4B%GbfqNj$S__ZB<o;O6IT8[;NipA&Z:KVe?)B:l'P\(H:O]"+_p;A`/b.UI!]^9,
QnDaT`SF^"U8)[*,2n4%3",r"4r>&mUB52G0a<2eL1=_Upc&rgM'J]#'J,(F!_8toM3QpZ1aj>1+Q3tI
"]D>PA2:U&\'E7BmVH`YDf2\\Y,s=XJCn#Z3dp#;L&H'/:S0j234Ntg`r5f/KCe7JIIn*_.?I+)<hKCT
GdbBBpbQH/oD%(uio-pC(DR9KC)X.e::E74%EN;W(pqH`@[TWf\!<tq6rpla,^/rEb=r`Z-NT>%b)t&<
fSJ1i8-fP<LP1COLD+>H(8$M_P48rA'Sh[eTHiBG^#>Z)LgW`3E&\VX95kV#q.WYF4UOP:N[-riS2?WP
^uZRRbL>ZTAk./5dIGjKn=u3t7><K:6_T')NL^WZPEI9:Jt^P-^-H>0:/9-6X)G@l)iMn?#Y[FDWZm_%
]Z+++16<g4'Zq+)3c0k]ZE;e73n,uHedA^bM=K/njl)]<:-X('o(@X+^$UZMcFQJ8WSNZndA5N"mCm[S
lJVRa:oGo-=4UFKQfe0kq`MS^Mnd4c0^.ELT"Y0nb3`EFF0cmH5(1,V!g)NDdo\3E>#T-h\hGXuNPe.Q
7ik8tUs!<n-64*CEs.,GlI6`]_jQ[L(sc`:GP3T3YN4g[U2f6<BrSMC!SCSfVZdq+8s<2Rct2C)X46ju
r:5F`NC%4EkalO,*D+G=Ja?:30Z_D;!Ehus72RL5#"8`,!Gr0[A&M4H-Q!Ht:W646GT*&>Ns@tD1,213
E'jXGNC..]L#R\V]ae0+\[e,fNOAHPeYRsgOA:?OaK:ckQF9gQcg@:6Id--gCU`_<^C>^>n%JHZr:%U"
55F8t0>7EO4YO;8YEPj(O8kq;)?7^r^K<b:d?fE/)Mhcc]APltcb=Z3N*g"m`o1^6e`h4QKiYn6D9`A8
HuiS991'MXPSB$fb:DoD3f!OAP&MZfNZgY2;&D+uL4s'W(r-phLI+pqJY8.B@;q;t*K>XjNIeeX)B"=*
Y`^e&)0sX;UY9+WXL59qe"cFi">^WV:F;kOUr]T9Ffk:XYuGM=ZFPfCAn5-\!Z?X15R;HQ,sIG(0;rf&
D/*r5&-ItsP*/a(>^ig.lLakoFOf1=/A9<oB^NnkY&Lk2Mi.11"`d=K<I7s!lt#S]iaAG6eCC,=q[9`O
"+-q2`cUau_ok<.!'@NnX]&0C4547H%lQ%I>!%(C@:O(pFKDURYG%`/e(3Z!Cpa$:Y.;**Eu.SV\9)b>
F^TI@e(@LYG&!R+[9?FhOi!!Rj3j.E#ok8r*r!fQInIRc8gX&`bUbB;9;;bRg4lN'fCSQ*#paC[RD.87
PK:/^2P7FtV:=8"*K?Z9+_OHOf&k4+e],GhN-HKOV:nu9B[PEi8B^Xn\KqAJ,#]Tu(6s`A<QR6i8.$jK
-kr*U6fV\8BFs)8_38RY)D`3E.\/gMUJN@`i-@LE3@R6k<WY%UWL:l=L"YS<V:B^M6*1>)WPD9cc/$(h
e*#%`\or&ahTZ:D4F$2*2h1hC]-%%G\%`B`^?8/na.FnS$Bk)>b8L9Z=l2F=juHRO4ahYEi/Xtk$/gtW
kI#T:j*df$8b^qdCR_61dG7i*Ul.^Jf]c:L9:o<fK8UPmictMS*#8RrMF#0K6D@m*6jsEO3$S"VY[`I*
_EfL`%Rn3*1^K\COt0SsCXWV`KMlB@UTWJ2b0(?MTnmB*8ed+(7c[E%,ZVQ"EM]F,A]Q8NN^4g!LE(k1
,:(^m>_sXCN^j^q/rsAAWIuKM4FTV;8t&j+P=UT`:A=>).9B/tUg25:'qq$e!%WpL2^pOiU"6UG)h8l4
R-K"\d?WU;o%&0VhUpJN#''D2ff'rmgqRpmm/H##]=Z[uDk'&$\@+FP38j&d[!-WF5m#TfmVHca!4Y'O
]n!30:1&?\K@R+`Ru/f*Ea;,:>ae]\-V3<\iGlnu^@GbDP9A-aai4'T4J#9BRAu4C.RTo.&.U!dl"p%c
m5[2toLuMZCB7s'[e-%p/Ok(sN_E`QX_mKu!+n<pW/Qk%c/OPBe"h^:T12m00$spT^i7^:($8tj0ep"j
`_WLO;hJ2+6IESSj!bBNT)>\K0:bA%#HG9Yd'598<-0YuNFfHL\[f89\r%8Qe&)%Lri))3CWc^Y`T79=
fA+7@lMB5khYr3:QS)Q'\8gp0K6r[9I/TV.^%M@XJ,\b0J,B%#?T\WYjSb.bTDs*PhZRNl^PaJU<UW_U
Ib2Rl\6T%g8@ZD3m;LmSRI/96Z9X"<B@\Z\X#:bDQH%,6$p:T)gu$bPO=isUP&muf<K/"JKn73r$p#8_
J050>-s0Fs,Wlt[$]Zk]48_]=81Xsl1cCZ@k%Dk06'rTpg./#j?tG/;e2:gf:)tpKFUSb41"]?6DE'Wg
/L\cm\>ng!1Q1p*6$BQ<J<u?9)&\hIDY.\E+B;*FB;B)Q&]ebk*1NQJ/lu)p99_&QK@/\?WN(d@KQOIC
>G3RIYiI3+jM^ugI(;XOVUMO`4m)GboBL`'8&'<Pi&Z(2F)u-ZlEsQW/tY+EC?ag)m)3Ajbj*R-Hr&@5
@r%.[f4OV4=W3a22Fj%gWHU>op%>3Y3g6FGROq4W9]Hju,o2B$pe2k4)8fqqKLl4dSUuX5q$^G@Tu<b/
&g[jBF/=fTo2>`)dVKeb/sJr-c'GeAF0!>?jRs'3ZjpA96X$WZXJj7&W.<1UQ5`AO=i+'B8PPbgb`nPn
>Ze('&^$:nV,g[0>[=*\\WqIk?'#)#3Za%bKju8o3f4L[UX88q>RD\s"OJSKNdsBh#m:;0MT9;OUuE`)
H[^9MH[TI@D0]u<G%l,?IX,XQI;SSocA>JHVtSH,5'-/iKe&KB?b:[J[7@F6rUY5_op]=frc]H6n\qE`
If&eFViLW2bP3l(4oX_dE<",AY<RC1o^e,-IRC.d&deBNjS7klKJmbCcc5RD&j(K$h<d"5]c09MOOA49
qSsmc".DmsnC_fdOWi*qTeW5aEFFVIO1l<Kk`rC4&I8Z28u!a\(6kdJXj3HrZLSp']t"5Q`=j"h)f!Tg
C4RcnN_G&O=HOk("=5LePfh;#!j\3X;?AqTcIZB<XZLk$.%*ckV\GQcXccQaNke-EkTh@Cb=O*5OR`Rs
oq"W?XY$lPR)2K+Lg@88X/*o'+(h<?p_inES:$<"0g=AI1">"7C;58elu,+;j5B4Zp<MHIMq`%5PETMD
ZW#[CUWqU>:%^)MX/?;4e_"b`H#)1E-F_%VCU2X\<DKI.Beq%*l(Q.(6mJFjZCIZUA:R\@Z'Q*_a_J@c
P*<k]dc/,1!*3mA$[QA1aSMDrHV\^L8uhU9%lAM841jYQ/JAUqO':kl&SkBH/lI'$MO_K(/5k'/8o*^F
-!I(I'>R$Z-fKjfM<Rp9[o]F\nl#nT'1Hk&.iLhdM8MUJ<"^Pj_rRL/>\lM=:1XD1#Qgr)TWB+;8#FYK
mDs*%:Q1@[c:fh79eX^ac;'DE9oZ>0c0]DOY&(0AXS0r05(ECV[Hfd?hL"b3S+")cZX8+TMiU'uc0k[0
hs5pnljERKpn::P-i`N-0>"IgB#hYm`!,N"ace)4)2SDlWi/bSE-2Tu$k;iPFLGD(s"V-Vq+AO481n7U
C[)s6.T%B-`"ua..3]re4?O=0J.n@@0Kb&SR[osU>,8K;.;D7C;jt'K\Yp]P>es+#T]=L?XL,('>\SHi
4b5*pVT#G[U?Qd&:`,&*(TJui7jdUTSV!@uIWeSW\25p9>$P(nm9CX#4l=mHb=`J'`Sb`eqf)rQ+5!O/
jp7J`YI^`kT93:BY0SRM:<E\<X%]M#`?FISY0_!'E4J,!'0TihD***.n%Nl4i801ZB@jTCa+ahH"$P5o
IRd2G[FnL7l8+!1=k.DZVV+o.EuF91<??q0Z<STq9e@t/k+iB@W)u;`WM61TV[7GhJ->]e>9*@FSt<%]
HjZ>n/1@MPeu"7D;fhPg2-OX6Mna0umqsd;2jh5uGmZ\\+Y,9KcHRnj;`M-P@;`&F;.TbG@[XA'=RgFF
)2)0p>:;)L/s%AljIcgDBIFLJ`W^,+iG`HS&P!.LY/HLn+:'e:M*\u:E#9"<80fN0-`bd4^Y_752$J#u
i'+-u$B!BaeW#QJh;-o9Vb`pJHhQI<Mq>.>J+2C4gMak*_$;([qU`L]kbF4<>1_a5s2OXXi*SVd_&%Up
Z_+e_)^UqNX1QR42I9U'WN8p2<2/(bRA[IG=PnkV-j(X!2_&+iPX858>h$#g8!lu]X>I/c<aBQcpq()u
9=D,Q?*7gNb/d-X1;1;DG,KJ)79XD$c7R5)'nThk-C3lFEh,6W,gtC_G(1Gm1IpW,YB5'j@O24OFa^To
H`2.#g"3oRpP]iP>0)ZH-n#r?-_o'g'UjP":bZ!\C0"BL<14rR.Q:<WCMG[A]>NA5a@],B$hG&^Xf4uk
mdusO>h`C`l.t#6)]rpdSaP/m0f(cEe_=6mpM!hNX1_9!a.[?llbUtGX#*hu[EACS76uBg!*ENOoMK$P
Vb0roOHkcZKVt]F<7_u"5#54fOA)Q4leMYQ@t:X/33keU=p_REd;Sb:!OBq@L2<8E.'G0ZJfICN>,WS6
1Prc'14tRMOe5fR_Ts\UF&IP$AegR2ZIIE*7AU=gcAAM\=:t^n,"+_IgVsHLojPsQ*/+Hu_N5$/*"$5a
E%DWY8+UsfR7uc9HH4(H(Ddkg9lnWME7a(2k2st7:6;GJQS)RUG4"8+LTeJlqRc41qr*<]fnnY8^0in;
ru(hcj10>cr:KU,5C`\/R4HmB"l]Tg]L&SR<b1q`9*bCmjg"`dQJBKGEj8@P"6:Xd7BAGD(J$O`e<JI9
dP=s"XXP4eXcd^Cf20$"/Zs3VW+sfCe\""EIYFQ*Bt2%-;/5aW>=Xr*>A:LUY[#d73^(0bA+R*s4jD!X
L4lZ+Z78e`_.KigC$6UX[Ir:C\eG@8`n6AW<10>QON;Qi77n=G!<_cGJ^QeO.YYu;9T^i)&qpZtde0a0
oe#"q;GD_D8mC[Sbpl9uaY^SD8SJ40G/N?WA)ls*^N4.kH[g5W*.?[9]=#k#eQU4dRVG:!^/SHB;Cp'b
8S#)o"<O&VN@1D31#X:Z`&#JcIZ@DH%Z:[sFJIO;2_n:.dBNCnR6jbZ2"=Jm_8#DOCt;`/)O"080T!t'
.V`g7H,UA/)R+U:O]5=bY;*X^W[tR72P.,a:$'gul,f[:;QWf!<=<>1,VDg7Q&ll"TS:^LT2R.32P&(p
7hhO_AT@2R3ZO';73GtT%%Y9:31$RC4ZtrlPES8!J36P%:P3`('L6AJCC;-.S2gZclKZp#GOF73o]X[a
n%8b`krDT?bo]LT(Q9_mFh6Iu6_IaDO"WLF9:.3/\!C:SBtggR411f!W_[]G-2'6PTHK#UOdW=LB1_1X
3hNb(Wn")5WcIU>'3RGgbl\R`Q*%T.I'o]OP:8%kAX+aiI]]r__VXSFSZVRm=I\&<osI85@rq+Cf'H'E
'h"`$77qE6I8cu=hV$B^a==B5(7+8bne=P`H_n!pmcj!(T6AepV5/nK2etgSG@#;f\u\l1dT1'tbRJE[
m=W<JefL[=;Jg-V\iNEA1cd#?j(m$[eQLQ3S\:V[e^9YIM:3hR:7YMPBQ72",rSD1Q*/b9<Dl^Gaq4qF
NlbiGTWoXPTned6%%14^Q^rk]7Nu7q'ro^Y3bqU,#X]^Q9XQLFY=L8^'bgX$l=ajImiPLJ9dr)JHFjQt
/Mob6E_ZXhQ^F?tV^@9(feW&g'WR*WUdW1:RFY>GW@q.K(2JjYK*>YJP$Na<`()$YJQ3?d$4Mnai^a2%
'>1/T!Z=A$!6pCU,(M6jctN?A'QH^$]tSr+C23^cM:k+Rk6q2_S2^N`lJ/pk_3IPVUu$F`XnU_&+#*AC
5Q'Ju5?8[!T:G*u2nko)K%jAr%0u&t0&NV-X9CLN>EV5%AQt]^O*.E?>]Q$.jm))n<n4&^QY2Xd$8N!2
H?34l$'C$6@kia+_P((`\6Pr<H/2cd>$&>?bQMKgO]#a*mTs\LFK)*BChTW&'EUi@P`[#IM.`^JJKI5?
-KE3a(+6(d@jitY.F]\=[51T^WN:,!F\Og%p,9DR[C#[RHu1?UV'$qH7&5A6A23:aZ(rWi1IkbPiV']Z
)Qd2V?!M!_0%.`1$_eaP3%@*TX!fJWLWZ@@2qZ_?(\[UtcC[>5Zb>5ZX#Cs>J52@Z-,h/CIKBb,6S_bC
/jCD6L)gX^b[AguRW>1&3\`XG):((,C7>(F13kU?cBP:Y/=qS'PIX@gXgck]>+IpPSBW(RH'6r\2*EC@
bYK`el'(^LV0\'VfiY%*j=;\\<XHW0+NeiOh0frp@YH]`1QTW8+pg(/Sf3A.TSR\&P6]_@!K8*5NsG4i
&Jk\&U;_1>A7XlfW_NJQm]gJVd)ON1p@?35&1J`%6(J)JFDu1!Ne"4h:>VZ0$SiI(I,Ge:r@.C=NmFEu
ncQP*^_/b*ZMp]LnMa7aa6#.?7-QgK[5,(h6/5ue%<NP;IS3,#,H4M2,#p$B0!V]3-XXl$cpC*\*t((M
&IV=W']mK\V%klMVEQh<LuO459Hcl%^s5r$o.-aWAX)gb(ag9JbrLYl_.^s0Pua<a)UI?8nVlrc(n6kT
$d=ai;=EspG^I^'me23#>J8p'Dc!C4P#=^o1'<LZ,2eiu=?%E2#"<NW8N8gY,s<WjW!#n);&G-d/.4sB
NIe?r\-*53%t8Os=t2InUXPS,gUsYjrmB-P`J'`B-Efm=<03Ftb"YOT9Yo^c@1gO_CjMLI?;QkZ+9f2s
<pFhAVM9\sHkneM,*QcK'cFk^O@,9PN)GpqOcU7]6)J0/..fABNe!7ZSs3LdYQ@91!%$#lk::WU;3=[Y
/ll%p1CN9/Ao4ZNTN%tl[O6pM(b.VOBGQ.$JYU5[8ITRVOI7?u"-<[m"3(l4<^]!>PE;;=,].Gfl5gc`
T:)<U?3=;(0<@jk/crubp@_7P3jl`;+"T?jj2R&`%j&CR`Z%1=K&n=Cqs6-..K>gd&c[1%q>ZERSIsrH
GtXg.cPpdcRtnb,qlRZnc[ld^c!0)V;s3U#[l15Nq[%QE([u.$S32qRVR:`51IRA10ar4f\-<'b)4cC)
Ni$ubWQrsKR96CU`Fjo;"EBAO3%#4>KU!KF'o'!!6^aZFC.bd"41MZH1HNQP:.&Ls'G?Zs@oc[_FE\2d
%o%3W9PLM43>)c_+b:BS+V;al(a:jJ$A/T+Y/Wjs+`U$gPK2ja_-jeJpgaj^PsXZ_R426Q!hGe_a!SeM
\8_d4'$j2ck2hG2Gt$^ZW@TnO>HKci[WNIfCK!#%8Q6\6>9JV#M+hS^/;(jLf$uiF5+iC1$DXW@ib<.m
.lI,8\]In8D/M-kg^2Yf:_Fu]JHHLD-1ce8flAr+721S*QPlkn)FKq?`m68hOBEQ3^8OGj-eDH_XdU0+
dFjme<,t)*!@Q73TbmbD$qmHO3PbWFIg^fR&uc9ZM&Hh_JKUWl/<[u10.nc_3ZU?cKBq8RbNiAjWuJAQ
X-5>t;mRt^b?N`5kKf[5Ie)RAoB4F%T^LXJ(DJ<k:`s`f)SbH.d/T(!q]E-CF%<GZjS&mu$\8iJgF&&s
"t'94`6<P19I8:-1CB%=ElDUt%?CF!I^qO4+:F7VTk0K;N=I9oTh$MIl"El8aM<r&c!A"$P<Gh>_UUZd
c&kL0"VIOuI$,2c.u:'6!j\KhGlXl^IUNL.)9!3=pc?**r@+//KZ$h.KoSKm/Jai1jibdY$hI".r%&sU
JYGqZ,QnGb*lGi>Nu\Z3&J6'g<iXHeOi586#R"1;@[>^0[Fgq4Q1gHD1*Sjh8')l0KRbU1JX2UePF<r]
#Qb/mdY55XK.0HXLW70*j2,/JjTnCfJCf[4UF8gEh<f(FmOM>:^nk?[/^[N8<B>c5Tt._I>>h2K+L*UU
1C?K1*!9iOB:BiDjHVTZ3>/I%?E?%ubcVARJg<n)F-BN0j_<^P;a[V2lqYbS_D;j7ckHVF!<bG!9gXtF
^]X^mU9_:[<Cmlo?i_jN'EP/LTb>h;PSN:SD9]DF$R!HeB,4S#`i&!3(KXWr:2HKRh`5uM`8:<Rqj1*L
3OjA+-4m/#hKe9#^\C6:-Z<s=i_Mu-3F%'>+n:';i.'k`qQ%Co``p4U[E_cJ8P.*'Q4"F"?:gQ```_Ni
^_USndF)J;MZcq;`pU0XRg*L@ddj5kU&q1=%^)rsV%1aDJkuT43,TF%J/8oO<%F!#*D/j+E5`1Tit;\C
=XfIY%QPuEB67n_baC"j#+\F15O7A.s0QtkhGIP2])O_GHM?9a_18>I3p0=F\Z<<BF/tS&<bUTb;*Ya,
84"M11,:j<kC=fh_;o-j9emPq0OUB?-1js34:HFMm[a7+HI):YIqu5kV7%-Hm[s2:Vp=.k?H8)U!&^?7
Mi&89m3a]e8S$g'^@6XNqgUj:$/U+tM&IZWP&b8YZs$+VL*i^m'h(WjRS4mMLr>">DN.C>!BEeK6qGid
KoWTq`8hWY#-/Tbi2"V+$4Y+DVujq)Tj0WGTG4D&E;_%Q/l3bFZfVs'eV2&AQHa8?b:eiLc(Q.dC<Ym5
a\Ku2i[Z.5N%@g4M$7IiZRS7qnmiJi-"_b/cQ8XUTkoB,1b(@E/2>rt&d?,lmZG>]=G:]ad(t#8P^G/N
lZ!8B."n8c(s1(6P01Vel#aHLP>YG`=h/7i`qI]dhYs,7hO`$\Y3qmqhS+Q7?+Yk^`cgf2YlDM$UIP>\
?X:88c./lP!MCJrGjlcQhtk%HdmqCF)GRGH4dh[R);PslQ=5`4E@*!p/6Ys.[(UR&LH0jeT/hXEN?b/q
4?95G=0Jf3[PFnZZ@;V<2;:4T/6Z`pNs0'nBX\\""i44?&hGqo9.>qC&1o0&r![#_EAue=<\bg:`gN&s
:fU^=&KY]&?ppnn.A]YI@VW-%-;^N5`*`"Ps7*i+q)jd-kT:A7eEWbj?M;;dD@."+[#bl]V:1n6;oQ^5
"U.mT.0WjCEuL?^MXd!)<)t=+!dsO70M:)8)O;X]'aQ(2&3/bSbkgi3Vt9id*$>QLBEMh-!i?R)1Uj`g
CAsC5MKrWM.9_<(=[iT-TQn?kB1hTnXPsRP;fkJmW:tCm'2U#F-lHb&iQWs28^C2)<KT)L`p$&/621kF
$A8Q!<A:6s)1ljiAga6U"62-oUn+f8!Eaml^f3U.nZ(,TgH2u)Dr&pu]!JH8Z_suGO9MA.?tadqp\k8M
5<jDbkcrU7^GsQIFPOV/e(qWshiF7OT6GZq+b$&0nWH&7qeD:bq0D_nj8-c,:0U,R4#T2`Y,HC/gpPn2
9,kg0,bE,Q#YhS$QXnEHi_%Dui@V(TY%fAP[huMA85XGY&edU=(psRHNRQqki(H[4#,/k!#1oJ(3"KGN
Qk:lLpe%c62gF=k,,.E[_0-O?bG=,?6/[]irmUfJ5OmcjA9*An)^LR@"c7i,C5B(q$N:[2&?/3VFD;Af
6>(=n`9.k8c`:9a@+!\FSO8Ae5)W#a'!&,WjH,QQdn=e;W5PdW:ReHR7%'?,BK&I[dfoXe6@llW_G$Y[
@#`[?Wc3,Eg\kZ'o-BE&:]5tp"c3Xu1d@*X:o6+^UHfT)_ID%"X.N'E9rR]JBg?58ZB>PR&iLP<ER9^W
_W$gDoRV%Z!l7^Q@URj;b6Vfm]/d5P#_3Q_j.Oue/67*eB(j)19/tNBm[7$EB6R-i5G3jUB,fX6CNssY
r^029SihAfdY3T\Y$S_cleB&G+$=lApr0T&DdKXUWU[_r<W@*q*.JMo9[-@[qM*hX!&6IG00>r]@1@u7
1+G"1[r,>R`?HS9ODfsd0L^jMOYW,)Bll_N82V'<3hu7\(.P/:n?iJU&`rMX`T:,'HOIcF.hH_,M,6F-
NCPt*5mBMj%>#$]_PF)(\C$[FO;mSDnAI_V"K%8R!EmlapjoG@/6<"3_uY5dA[00!,`>\!J,=m@,hMo"
F[@Atd85C'fT349BFG)DLaOg]Uo\IMapm#Me_\LWg7G60go)r^E^[pD(D<$qg;U,!$KnBrgC1e#r$..^
3&HXQl,t`\O&%9L7O2b'$X\ns9(aACcBIP/k5_U%)I04m5og44/<P0Lps4=J#egKFhnL/+V0W22OAa91
Tuf.nV%/T`_?__bJL^^-X?aTo9!--9X8l4Ye_pug.4no6Gj3N9f"n%gT`4rimd=uD<GGoTB\1>n4aZqk
47N'^_oGQC3d:S(.p$ZErpJY;pO<&1V^Kf^^OH,nWc@"LX?!d\PJ/gf^IM!=`I.@@-$sh0h;l7R:KlBC
8!pqLM+*,$'j8NKZ%WWd@\qkF.<Qsdgo4bp(Q6S&g#Aj*L]H(:nYF39Q_9Z6fZYO87U]0=K"QsEK[V0m
RO+>bV_S"JE=p@785#T_V1PK%dgJjP0O&KaCgq-aI'Oe?5TQe$l\-On6EZTs1k%Q\"uYP0f@2HVB8uOY
'Bk%t`]t:+-R34qnX20%c8Wo<1ar1,YUM%[4kuOf8^"&I=IEJL:Ig(11`"(O=#kb!I.jZ*[/='J5P=/<
=X0*8b%f';l3c_"EJC;DN]=rg/Ctf:C.]Vd">W@n8(eIf=qZKVN@XZ+&:Bm`7Z`QL-`]Od)SH1u5mYsO
8@njJDY0bDL-]3(D(qIP(bSgg3."fREK?c\`70`Wb?&ej"-D12&q,1V*??0&/NZ&J>B^Mc*8&#MA9dRW
]n_Ug4am%JV9<4O^Nnitk9T`ug$=u@O4;*t?0H:_&\ae.Hdia4j6tiFA50e/]RK-`J[`LT3n(bGNLt)m
f6+<:H+PCScd*.7BSmC(i^?K,-[LP"WQ:3,kk+!Of.U@;UGoTZOum]GPZNQ@,6:qfdN,,>o<b<VG"Q^c
L."Zq,B?DVA!/VZP$,D*9B1W#[*^@gWRVnh+I%_9nc4.?K%'-9Dko>JjGXR?a=t1=!*Rd(YZPi*CJ4f#
;+Ci.7[HM35c?[i4u77\BgLi#J5U,g%73S]#r/]N$B<56\9<cV,,)AejnokJ;@D1@9u\lrMB_unOM='L
0@3Gb<rfPE8eR4#+OgIu34SUV%5q=">$RkV'bJJ]Pi\D=!+17-;"]C`bKZ=&+G`^d;*kg"cEA3u?IEL^
bK=[([.L]LgNL#J!j)7p#=4+0S.^?fFCa";]mKJA)r!H_)_gsH(Dk_YNc4CbnDM]Xa"La]J+NNe`4M)?
7nrn]*tCL*D.WVd"\M&R'Hu4Onn.ICpuKB:k:a8^h%lIkiQ[2%X=CDV^WB]f15LhN;t37L8H@eA6,cHd
aVj^%2/XA#]67gqh9q9']?4oU\>#1^P&c_,b?uYr$lQI;S$/^M0V]p7$H*?j#\uh;G$09.6Z?T4MPc]Z
789GR'8uKT--kO"`'TG+8?($7W%eFVIJdYYA9qr^EJ)g^,=J&Q3\+!AR@u>(<$XO*<X&X59TI3\ZEg4i
lM-=4kbQ(OUa!K$K(Y/Ec,"C6i6r6YPgQ&#VOW#S5#!6n=34HGZU/Mla:3S\X\*@A8MRIiQ)P%_<$*C6
.^]CF47j@7;8<ejUk8(9R7a9/jY/0R)E+W_fFd<iUhVc?j"QKZ."Yj27]4g()TH6dXJoL4CrOtrXZZcu
5iDt!;!mZ;c-=LcK7a7."!CA?RZ8IOEq[]n(XIPMiQUPU?f/JDlc08)T0.DsqUNcG[r9n(pCi%k.K2W2
a'[r_\G3c'oi09-'Nm*G4r^-:>[LdL<*Yl-%:N3EPqo8GG^6VQFfm&N>Ad(I3R`997'RsCM9_^#Cs/9m
h;RUPBsVOeZV,71W8!LSRoUY!bQ2``9tGQV!b;k!NWrR@Eq,DS#g+&1;Gp->Cj!Z#M0'pb"@5M>8-_L=
M-FO@S@1pH/8L\;IoXVgeXij&***(YZ]k_-Tanf&(@*E+L(q^;:q>OC>?Xl9+=j@c^:\p&1F<K;,t1(f
;sB7d+;I%<K#o^):f$X=8e?M%V1q8B2b&P3_if"l)`'HJed.*6"`R%u#[f,Q"DTr]4+GP>X$O0lU,X8g
N=lNAJ5iAl,9TRWoQmcI-<I7l<[QZB2n-5m]sFi;UV!Y/\%TBa7+[Y\)g>>K1[-l=r90P%:LCbRmd'1?
n)*s7nW3F:4s#4IAE(T"M:\pXa5?m_)>0\?e.b1.^Eh"#hmqTl&0JWlUU;Zt3hB_!QI+9;S<DYfMe4VI
)k:.I7!\b$=G]%(@LRIW(OA`sM28CoZkQ_RJic-'GerD1-**EsF8uALk7Am++N2?USn<0VeRjZT-BSPV
A\e_-?(j*t22FYYLio'r1@_aq+JbqRJ<6"&:'F-<$&dMFj(9`m"N8S`L()iH$PuJc?s8JV9BS._/`*(#
]$qdh/Opgj<$.o7cd\o#0%XHP(4e20)k-;0SRWRi"VS1?Dc]1^>=aq-SJ[hqOHEUudS?Kf"U]obTj_dD
KG)"$-<$m$H?S9o&:bik;1]p0OJcL[7A3P6@9>i_6>^T,`f1qJp*e4UKA6%Y7a#hmAIfeB`#V.YGk'cP
hgG%Pp#c)AkJ--YH_::El=4A\\c8>8Ej!Lr)A8O.>VJ5b.Gn>`-agTaj3H]6M$eSb+A;*XKS)Yb_9UiI
H)B42B1c'1_nnDaeq^/i.&_(k)T'?[>"+*5N*?9;$GAg+%9@5\2<o.@/;4k)6'tVIE+B,dg`"o.-V#jp
QlM?$0UnY!BILJ$21\goJ:%L&!'1;/!4$iY/S9*u``S%U''no`1."I')A=F4&49,bA5QWEIFIO?*D+e^
TZCdp,U-&O)"$hsAW>R=ZD<H-b'D0?'!i1m!O*2/FTSNT^noJq;hN%#Y\jLD5`m;uBG+)I5nM?7VQmCG
_hJW&XfYi`'Hi=gVVo[o32X3\I:pn*4;6u9]mGe^5NZQ%rGqqnVgg%Qs(l!3pWI.;@Sd#C8nP4`1aXig
^md8E\$D]Pr[M\eQ.V7mZmWtTEBKe?\s-576EBD'V<$-NP"RS<lEZ<0>=6h=Lg((q79Tqg$KfeI!G)Fj
8T9S-[E)a2;XY0t9N"^F6'Md),m_@k,jQU;Uf4"bR3FM$q8CPU#CQ'>r&)9FHnF<\J9`VL%%@6s,/$iD
0s&'W%Kf.m#dJrrS/t=Jo'G'j`>)PIk+rh-KN6=>BO"Z3Q<R9KB/r@@,85)5I(E`e<F]icDL,X"43FTn
BUP<[:SidW(cU@eNKOL:*`Ar$+B<-`>+&&2Qcn9UF=^Y)$igGD'-N,&'O^[]qtgCg,9nEt(Od`,S3MN&
g9k\rW&o4kE3;.69tYrrr>0!M]5`2NWcb#?aU+A(jUEa&YM.dae/DVu=Ct?l0QB]36&<,NQ!dJL84]r*
/?BBTjB4iJ.9jG)Ef*g33>/&O6N]n-O0f+RAc]o-:e%0<8KaKrCR(h9RFWR;N=(o5U*rN4&8V,08g+;P
$GZh4!^N_UX1qmMYQ>sP=U_/n\L>M#**F3..+MgJN.t"YfG5-d;EV"/7J3DJC&(mLq$H0EZ$CU<-"TXU
(<s$g\7&rIB4>IeE)^RuIKfV-f]^bVN*Jk$+B#5fBb>ri):HUoT<!'MVi2CQY%6Ju#mi%3/6oo:H#n$_
=6X]oU7hDd=7G2<n1\M'_,Yo6.?L>b:P#E>T5n7n^YEetD*e(5lXOJ1)t;mO_d`pl8ue8?.*<.dMG6eu
X&#m#6:POc/?ps?Pa%2m)^6Q;$aIW(iCR3_L`ElS8Z.6Gb:/e#*%Eh"nYgCbBP4!S_D>#9OqQ[W&S;U<
)'Ng[k_#_9>6<PJH:@lXHl];=#rP1D+C%8h&7n@*0%q=_Mt5/X_&rf%#._RQTS!E(3C$4@lHBm/KqT0c
EmlN#PZH)%ZY8aKqW6HeB/NdCcDk"RD6(Rp=u1?)Na=igg"896?N%a"r%];<W*iM]JP&fH63SO.aT@XT
<2q,B@8aX(VN;u=bZIPqM2@L_Q([F&._QA[3VoY\CY(2S'EIFJWDd/Qq;mkl=1IM#n"$92mu[Rt9ZflV
5I!CAer,kJ_(.`5IG)!@h&>]9"ihnLPa")-8h=<`R5^Imc4Q1I!^&lgGa*:e-j]M.E57\HZ`+?c2&!!t
KPR[JJ1Qi%_hL$BCj(ZZ(+EaU)9iNB/AZ.3e,ccd6S8s]"m[_5*X-M>e9\)(`@S1EoNY4HL;p(#@T//!
)YN5hJWB;&j'p4`6nJBhn5\78728g<b"Fph<E>3EmS1erX'X9UaJrCM1!uKel%7o#gQIR-cJ#K^\2[Je
?XI$hYaBE"Lm5,7$-@<,#hWP)Bh"$=)Ek1KBVe=T6DHHcA@*_aYde(Ih;"<^(2a-V"E$2C2U:J(/>K^X
bs5Nsil3jjmuI,_.K<K#a2e=3E[Rbk4E^@,>5kToDe<0]=\e5:Uk6b%\]Z2'b/JJT9S5uOM\=[;7*ZXK
4&0OO&XajH`[IP&,;LPNN*\]=,\,9!VDP8$<FYMkbgBmS7>q\>6VKIld#]B@.o>OGBUf.;<MDD[<=iSY
VW8P[f/:jRR9qeK/i5"?YA1e\E&R-A"kc^^%T=33-)<%:UL_4'cLe3tbkTi=*,T7!1iEk)?Va`^Q8WU5
P*K7?SQ`Ot._T\!onn#t2+7gOF_b_1f#o4=$)8&'JNsVJ_Sl</Lh'DO8dTAT/pg2onsl/+F\SpKHeN]4
fu9@a"+g+ZaA$%C2)[>sYQBM#2o"IoN>nC-r1ccC?GCsf0tTfFrmgWqZ6lKhVG/)RQu(L5)O$[)lq*/^
.#Q8!.:'1/><G\iM%2:rM]FO">9k>,#3?1IL'j>f&JHCo`/>L`<C.7^.&)kj#RuVW.S`6a$YVJk[XjO/
>uF$D+:DSrdl9=mUp($"/]g#,N@WVHbcT2DX_LtC/ik492QJeo,tAH2CcWJr-)95r3g1j5Vf>X*S2W5O
0k&ndW0*[7JY)eZ7OG/qC&R2=)`G0;,iplt`icMg>?RH/BMMSr>X%3?l3IK)a=Ga(`Ccsl-3HgH'S3OG
K[Pb2lT\V*g"k'3gX4U"gtK33Xdu$?_HG`SNfJ_1'Yk(:WCrR1?+kRWqXs0`DV_mRs$#$Qs'O*;p!)^t
=4=@8osZ<3D^X2$n@.iBY@"dZA"9nN$nQm9P?h[T"9_GsA,]/Is'eTg`h`S?NTO10O>R3N,f+#u:*6Kk
,7-+8VOS"KXMWdsP=IpY#9f4YE-M@$af!"-$n`T8%E.H1PiP-?^D>t2oi,lumIE-8[^MFO/^,WDNl`i&
m9q3g3)bf-8@+h,BZqWu44`iENlmjY:+oeT@VpRCqVpe%4e8p&[qDm]0NV5"b3"t,BH:?jDF_VB`>']*
]s/V'8LP.6Sou$rArNTELgHfb$U:uRQC44@f@\I(hU:96f%Ja5!N>:"l0N0PlgGbGeH]dIp<PbN)m51p
]C3H9)=#>--SJf=pnc*?:HhMP@q7`Mp9M)A+=9+,[(6u#V8A37CBRKHJ?3J)Uef3KIeG=t.pHa[Oc^\B
*ei"H(0c[PO_M.7R"IQ#2&),u5skWT.W[?n$Noq_^ZI2)J7O6;>(BLuKFmEgK.B&sG"l<)]T@eG3]%$r
]*'ekaHBD$a<%?ngoeT^UsaPY7<?,<o-/8!(U%_VX=UM-Z`RROZ=URn_d^[7AU0270.a,0'V:[b;\fuh
E*0<qW21'%+fp6(0h>:m7E0T4X6/!7rN'^[963`r4,[*_7rN<))h"7ZK0:HSK4B6u%NdkCQsr,f^\WhW
hnhBFE>(cg<M*&/dsH_$&+m>0C/a;1f`-9ZqQ7`/Y-p;W+NhcK;Ae0j3mO?h%kqYk)cL:5F;5fc>9)TS
.PmNl06$8[i9=C4eG6*,ZPC:a(Dq3K'kRh\MosS[7=cgYEDRaSJ7/1.=nsCJ85V^+=\LMAPCnaK6X13I
gr)^]!$)PIQ._@c:c',E+ZqZnFO%PL)fk+"(<p3L?b8#"Cjo.PP,aC"%C:soc7<+&<Ks'rB*gIh86C]4
<!G3pf&<E&V$W;8GreJ;&f$OpP6I-!B:Cg\T\-O4ID'Gj3QQg]"U`#XHcA8,J)JtAUSgnZ\pX</W;="I
A'^`0qerN!T7#Yj0s]Z.<T?iV]mVh"]'j$)HFD5_<fr?X(a^sbo'JG'[d<7S=2La?@9[\qFD4%`P,dTf
MpdA>j;hta4ks*9`SoN\7r*H4B@Y6!\g)'4fGLQEOHZYk,)HaYN,Q''Z:$N$U+B2p"lq"L%>##jPQjg4
/*m[?S5i_IYdA"RPIJ%'>h?FY!N&c;WhZkX<2Qnlfo6@X(7&O.,R0`)81fRq@"Vd"+okkG<$m6O3k^?S
^_p9pN=4mOg!I+.[CKqC^NXXiXfHMU>AIkqfANg*p\pjVO0V$A5C;hPQ)ift\G>(!K80sZ5(ERe\'aBf
s%"5p`>R<&^3^5siq3]QB(G?Df5J0fnEX<9/ml07*L!/3XCB$q1.4aZnK7o+(;s_n%lKVa44_XcgG[rr
]cQTHNf7ka*,K\&)>-*OR</CEad38(5?f-A*feC-"pLU:f4XU2MuYsiJ8b`3*$G#Y1^Kp0;Fn?M#eRql
TsBFE&4T,N*/Rh+lSbn[l-?92"gqfWAMk,B"^C>&(_`RHfb5Fn#rg5lPef3[J_H1#Zj+2F<GO%c1W#GZ
OLo&Nd[%"@]6_L%L.=:Oqf]EU2hQM.gHRg+HhX,F+:]ANGkC4i1LHZcI-Je5lSn:f^AH@i&"c!n%o3&N
jP%)Io'*p>a2f0Kp&#irqssI*X4K"2Z-Tj"5C[\BaN:ge=ZW"Z_=E5K6"He4ki"g>g)4.#Qr6p$g5o)^
.?L_](2Tt6%5uUh4+bfNL>:RVpt_p$S*+S\O&d&5Hh=7BN[4npdeodq5;^5!%h9^u+9IZr&-/a2e.RSl
!*O=hA>YBUTuNmm4gh"2Ir;%#P5o>pOWNV`ZpG$!+eqT-!>0&-@]9X]BlFL.kd2OfN-6p1WH$IHWjfER
l6#BYmiCV,)/.jWh:C*caQaW["Gi'**o"1(o7MgY*'&?CgpmfZ044\OS(m]*hLG=\,J_g`fBg?R^T7=i
p[E3/;<-]OdQ[,`:QlkJCNB>1)t1co`nta5h8\>H4FHd;eV;>BnL83O0Mb>nFc`-%.53%$'3mCFTfeSh
NRq1.&bCp^M^p%(/BMb^<./gXjnCna2[=B,N>8#>1OF+IK#PT?OB<*Z`e2b<M$Q>_ksnoB"JF-bVSSS5
kfqQg/'edN1H>:Eo1[fPdo4_\O9da80eu;!Q,54iZ+pd#cmGk1-O;M>0kq8j^P!tiQ'$'+-)K]t)a8%S
DsJM5lP]'GhR7JuF)u!?aQV7gOKA^W7ZSNPH1KIQUW6+M5Ol^hMcXhHqu,>4%t8cmkh4utYF^fiH2.sJ
kT=Topi'O]GOJaZq=I=.PcQ=D`nth*YY"7;%#Fl&:)6m\RN`D6-j(5N8s;V8OXY"9d_+eL'N9F?C"*!5
[PbV?CC1)C]=O;7qQ/n(8)^kIbY,jaVtX5p?'aSq]@=&T!bVY0)*C8cJ0?n&ZM>H@4=g\u`M;5T/#6r-
AtOXC6!5$mRK6P(OqBs4Nj24LQib/RQV1&9C(uG38u[IE<jWTh;pdH1kNur$n*'+UlY$M2W6W,;Y5Z_L
!VYkrhr%fP7o#R:FR1tWf#:9`^U\LMrk4qQqXM]!B<P[WR[AK[#W;$cL[s^0X$DZO@r#jZ6DhR?-,Qb4
A-dFhVrhRRk'?9n$Fd0E0\Et1^V.%#BD][hK3MN6HT)Fnll>8.CE2VXfKHZ^nJ\SceATh(B'9l*,K\Dj
fK\DiImU)J0ZA\3@Or@tRhQ"!VC4Hbo<hbQ8hJN0HJH;&`1B:SOb=<t=_eYX;Q!E+)2@[-]leI?Rl>9R
m-K,W'[Ifblg*lsG5V($gW*#S5BGrqB,lEqmTo5t&m.`=HM-R4rk81#0<]S`?_0;c=hDTbR\2LKGrcjC
BH`tG\at\;Y$Tc<g]Y^`CMW2!*baro^TD@[J+HLoVS;2PQ*!,\\$VFGWj_-9YQ1q';o_\_-[nD%9rB36
BH*#<$1M=fQ4QDOH9DN?JcN_3MM@*;S7Y<M%:H$[UC+P$V:6AR;aa`08lGMkA]pO2RT`lu\u+!)dD6^-
mFnt+HcQS^3dg_ll-lO`>Q?:RbMRaBh7\10!)pWh\b=.Chb^E%n\gp"iR.Gm4G,d`6a4I1BZa4W<RnLR
l0(saT(XaagXcmWD!l5rZ>JXUQL.m;>'B7K>m009[8deFp)l4>d"V?_nM><-1D&.HN"/8K5qjS4_Es5g
%)W&qY`]&6T9_=tBd7(r0Zk(TAd8pBR)._i8PVm]Sl>O>qFt69luOSXfoS9M$fL#*Gn1lSE9PXlOJL0n
4aZkeeQ]M#IK09?5Q(!Qk9f*hb,=-dhN"r!a-XR>Y&;?2B2k%cG-W?$+ZqA4EcpETI9kSn%(0p0aP*nE
4_pG>e(N9`ErCaXU@NPf;>J<V3?HAa;uH:pdieO[+l!UVn.E>B`YBm..R5:O@TG!sZfql4-j:nX8>4QQ
XcDV4pu5H<99ua5\n,Me8+0jcnF4eBOKCJ].<^0`eAM[=8I>I:<IO<T3d`h`55h)GI,`9&a]C,C?B=I-
Q_%2jTS%7.WDZV42<BZgRm4Aj_n,Lm4#V8)D!pXlhn4$lL)m<ZgV0h6Bh^pkQa#2r3LLet`lO0M!]?YO
_^.:<-?KNId$33oA:]=M7ZA'J[76fcBlVQA&Y5)QZXV2UVG19!>!'@-qa%1faD,YZDJSY!3i'd8`W/iU
NZI/[^+39fHs$&iplP7=*!@U:I8W9-54j0l`JZZNhbHpopY`m9:Y1:h,T5i#Kq)*k8OuS19_QuSUl)I0
Gr<PueN&m0)>Rh]BmIho8;e*\M)8BRA<9&/^<XRD>(ihK9$p6L"(Z+#/HQS66L&5&e:A`BJV4aX'iRq8
Z#\Z5boPWBSNUgq]q&GWCio;mGP)IVN/We`jbC6p,fMK\rVCYuUd3K)hF>XXNDG$0JV43Tf(e;FnE1n+
W@Q-W*)<[U$;k7eJQheiQ!Jo/W2u,C4TofX;2:F@QujT#L%H!0U-L.:aiH/4o')tfUbn`*,Glbp25GkH
-q.8)Q4TE=g;>*i$]>sjYLqRaf$QPZU:%&2V5(Z9]<;IhJ-3\VK;3d:mltp`fSSX)f-.WZa18O-_N-d.
r`fDoI.HNO-:$.?G>C6)mbe%Q6ds?%W%<O\;rJc8&L54="6%Up3hsG*'k!uoBM]n77&pB"BaH$"8qe4l
7Pee#C5`:+VI21d),Q"%*HlXQ8oE2Gg4_%XXkC'm7q[$ms'T&T+37J7SNZ@'rOmj$"2h`@GOHL*qt]C[
NZ:-,lKjpsQbU*AJGSDtDa<:Uo]aj)l22<(c]h5?+2),RlFn3MNtel5-SM%(=C8P)Z:)hiG9GlT+sZo<
VuXag-CcjF-IrhCWEcFN5T!'0c(pW@bsmLY1aFn8//'`l[d`LVZAQ5jNQiJ,rLLV(gKN<T[Wc`!+%T;c
rBl2^HUc$K"/,?03.1MBM,U=u?G(7=lg)#tJ,B3=GCOj!-!rTd:OdK"R$`+Y2$oj!lf%f7RWipD`b"J(
(_IW/TV<`+S;7N;dij5m^'8#i<hkMB21Z[)HA[5e&iO/(K3LY^C&*#^Q`]&Q[=)\'?Yd\)W;!a0["BV-
;H6fU@*cWk^7g[_dBPk3%j!]Xm)7"!^\IBtq$WOm?2k*_p#,he7h;4TIIct-aZU_K55h2JC1?c,40D9j
OS&gr<u8SeXK.>>MSX#5)DPo%8df,36!0*N,6:hK7OquANAs\."G7Z\[*@uYKgdWmZt\9\m[h_;SSc!J
mc`BUgsS+-g:*srXJ?%)7n,uBI[HqVT"B+)k3[)*It-qd:QHP]B2(Fak+Au4RXMT6:]D,T_nsC+Pp[ou
?NIIh]R2Iq1mm2q1>,p"d0@ZH=WLPD2:Q=JEEI'ib%O$p*!0Z]UOr)1o9QLb\\5DGV1##CI0<s.hD,0#
gAtis3dO9-!E4@>*<\Wu4E]f1fo'3C^(-P,m`p4\e<H0H]>#D)r0?4]+51f6(;Cf\I/:SoVug=cs*T"a
p%'Qdg"ea!DUd4^9hS4S`'hS``^GJ@K?ZlpeIZ2bg^\[YHu/'6U8=oWChhe]!p[M6^96mTT$H<_k(2s_
^7jtg4elM6pQ+]%\7bHLk`Nb1:7XKL<`7PQIIlj.]D(dmo_?hkOq^D"LXc+;jI?1^A+:Tj?^IK_IlMjI
euNGEhnFBX_Y*WQn?0U-b1XT`LRBlK4QQkY0$R1!=Bi%Ol^$qm\*dq_ZFt\@p9#Dt\p(T)FgZGcmMa_:
e?sY%CLm1Tm]kSp5<j8J`7Ye?Y$JR8eb'kgIs^q8K-,Sf%%)A2r6>#k.@MU_QD^UaRX"dCr71-5Pad%\
bGRS1hFr25:N^JJY\'ulN10&kmk.u#jRK)nVWCe,c<n%lqp=3u8&%1@e$Gs]GH>:nTOY4(IAj2hTVJWe
X.u_:GbBQdnDNOu]<@_bHM.4#9BXT-\T6m,m70D>nG)8.(U$)eHMn?7.F.^C,O9">RjkYYf4D_h0*(S1
UAOQfebJp_WPoWGf$@@LjQ,X+o'?(Mo53<9a1o-'pYcbsB<PRpF6L]ld-(B+qq;;Og\SNCG'3P=%IX%>
s.LZm^Gp62gkhfXc5lra`l0%gh#-..H]K8TWFl(Q<*.RVe'jOUgUjGSG?heMGk[>3Q;9^Cdu)<bJ?pV!
T%pu(oA$ltqtKP$)]Rg23l'"66\eF/4q1i5HM-Q_)`P8R.IO\s2dQ-drX!uCl$"M8.1WKs04*GGGOOk$
^HQr6jRM9NO%tNfl/7M=\=#nVkD]Ajhn)ZJrD(=?`L=V=@03SS'E.^dNrZ?Kf@_rNi6"d2jQm?W:qdr4
T7$K*`,0_5h`Ur]Jf=+Jj2V.rLJn7#ildZA3M:hD-BbPNoZ="<e_fc;EI6U`1>FYMIGsqW<U.Ito49YK
I/6A*X'TVV?#cKaqT&8;%c[+8Jp_,)jO6>rpVl!9C>N$<^Zs/B@A1cmMS<A?T7$4OVr+!C&#oPqI/~>

%%EndBinary
grestore
np
grestore
grestore
grestore
grestore
pgrs
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
LH
%%PageTrailer

%%Trailer

Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%PageOrder: Ascend
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 281 C)
%%CMYKCustomColor: 
%%RGBCustomColor: 0 0.2393 0.4942 (PANTONE 281 C)
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
